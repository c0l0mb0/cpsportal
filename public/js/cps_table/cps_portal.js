/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/cps_portal_table/action-menu.js":
/*!******************************************************!*\
  !*** ./resources/js/cps_portal_table/action-menu.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ActionMenu; }\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ag-grid-parameters.js */ \"./resources/js/cps_portal_table/ag-grid-parameters.js\");\n/* harmony import */ var _aggrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aggrid */ \"./resources/js/cps_portal_table/aggrid.js\");\n\n\n\n\n\n\nclass ActionMenu {\n    tableAgGrid;\n    modalForm;\n    newTableRow;\n    deleteTableRow;\n    deleteAction;\n    exportExcel;\n    exportPassport;\n    exportPlanGraf;\n    fireExamPlusSix;\n    innerEquipment;\n    agBuildingId;\n    agBuildingName;\n    agBuildingFilterState;\n    editTableRow;\n    returnToBuildings;\n    EditButtonActionEventLister;\n    AddButtonActionEventLister;\n    innerMonth;\n    planGrafSequence;\n    arrangePlanGrafSequence;\n    modalPutEquipmentInBuildingHtml;\n    modalNewEquipmentInBuildingHtml;\n\n\n    hideALl() {\n        this.newTableRow.style.display = 'none';\n        this.deleteTableRow.style.display = 'none';\n        this.exportExcel.style.display = 'none';\n        this.fireExamPlusSix.style.display = 'none';\n        this.innerEquipment.style.display = 'none';\n        this.editTableRow.style.display = 'none';\n        this.returnToBuildings.style.display = 'none';\n        this.exportPassport.style.display = 'none';\n        this.exportPlanGraf.style.display = 'none';\n        this.innerMonth.style.display = 'none';\n        this.planGrafSequence.style.display = 'none';\n        this.arrangePlanGrafSequence.style.display = 'none';\n    }\n\n    hideArrangePlanGrafSequenceButton() {\n        this.arrangePlanGrafSequence.style.display = 'none';\n    }\n\n    showArrangePlanGrafSequenceButton() {\n        this.arrangePlanGrafSequence.style.display = 'block';\n    }\n\n    hidePlanGrafSequenceMonthButton() {\n        this.planGrafSequence.style.display = 'none';\n    }\n\n    showPlanGrafSequenceButton() {\n        this.planGrafSequence.style.display = 'block';\n    }\n\n    hideInnerMonthButton() {\n        this.innerMonth.style.display = 'none';\n    }\n\n    showInnerMonthButton() {\n        this.innerMonth.style.display = 'block';\n    }\n\n    hidePlanGrafButton() {\n        this.exportPlanGraf.style.display = 'none';\n    }\n\n    showPlanGrafButton() {\n        this.exportPlanGraf.style.display = 'block';\n    }\n\n    hidePassportButton() {\n        this.exportPassport.style.display = 'none';\n    }\n\n    showPassportButton() {\n        this.exportPassport.style.display = 'block';\n    }\n\n    showExcelButton() {\n        this.exportExcel.style.display = 'block';\n    }\n\n    showPlusAndExcelButton() {\n        this.newTableRow.style.display = 'block';\n        this.exportExcel.style.display = 'block';\n    }\n\n    showPlusSixButton() {\n        this.fireExamPlusSix.style.display = 'block';\n    }\n\n    hidePlusSixButton() {\n        this.fireExamPlusSix.style.display = 'none';\n    }\n\n    showDelButton() {\n        this.deleteTableRow.style.display = 'block';\n    }\n\n    hideDelButton() {\n        this.deleteTableRow.style.display = 'none';\n    }\n\n    showEditButton() {\n        this.editTableRow.style.display = 'block';\n    }\n\n    hideEditButton() {\n        this.editTableRow.style.display = 'none';\n    }\n\n    showGoToEquipButton() {\n        this.innerEquipment.style.display = 'block';\n    }\n\n    hideGoToEquipButton() {\n        this.innerEquipment.style.display = 'none';\n    }\n\n    showReturnToBuildingsButton() {\n        this.returnToBuildings.style.display = 'block';\n    }\n\n    hideReturnToBuildingsButton() {\n        this.returnToBuildings.style.display = 'none';\n    }\n\n    hideAllOneRowAction() {\n        this.hideDelButton();\n        this.hidePlusSixButton();\n        this.hideEditButton();\n        this.hideGoToEquipButton();\n        this.hidePassportButton();\n        this.hidePlanGrafButton();\n    }\n\n    setExportExcelAction() {\n        this.exportExcel.onclick = () => {\n            this.tableAgGrid.exportDisplyedDataToExcel();\n        };\n    }\n\n    setFireExamPlusSixAction() {\n        this.fireExamPlusSix.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postWorkersAddSixMonth, \"POST\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(selectedRow)).then(() => {\n                this.tableAgGrid.setGridData();\n            }).catch((rejected) => console.log(rejected));\n        }\n    }\n\n    setEditAndAddEquipOfBuildingButtonActionForNewEquipInBuildingModal() {\n        this.editTableRow.removeEventListener('click', this.modalPutEquipmentInBuildingHtml);\n        this.modalPutEquipmentInBuildingHtml = this.modalForm.setModalPutEquipmentInBuildingHtml.bind(this.modalForm);\n        this.editTableRow.addEventListener('click', this.modalPutEquipmentInBuildingHtml);\n\n        this.newTableRow.removeEventListener('click', this.AddButtonActionEventLister);\n        this.AddButtonActionEventLister = this.modalForm.setModalNewEquipmentInBuildingHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.AddButtonActionEventLister);\n    }\n\n    setAddButtonActionForNewEquipment() {\n        this.newTableRow.removeEventListener('click', this.AddButtonActionEventLister);\n        this.AddButtonActionEventLister = this.modalForm.setModalCpsEquipmentFormHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.AddButtonActionEventLister);\n    }\n\n    setAddButtonActionForNewBuilding() {\n        this.newTableRow.removeEventListener('click', this.AddButtonActionEventLister);\n        this.AddButtonActionEventLister = this.modalForm.setModalCpsBuildingsFormHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.AddButtonActionEventLister);\n    }\n\n    setEditInnerAction() {\n        this.setEditAndAddEquipOfBuildingButtonActionForNewEquipInBuildingModal();\n        this.innerEquipment.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.agBuildingId = selectedRow.id;\n            this.agBuildingName = selectedRow.shed;\n            this.agBuildingFilterState = this.tableAgGrid.getAgFilterModel();\n            this.tableAgGrid = new _aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.equipmentInBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding + '/' +\n                this.agBuildingId, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.equipmentInBuildingsParameters.agName, this);\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.hideALl();\n            this.showPlusAndExcelButton();\n            this.showReturnToBuildingsButton();\n            this.modalForm.agBuildingName = this.agBuildingName;\n            this.modalForm.agBuildingId = this.agBuildingId;\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)('Здание =>' + selectedRow.group_1 + '=>' + selectedRow.shed + \"=> Оборудование\");\n\n        };\n    }\n\n    setEditInnerMonthAction() {\n        this.innerMonth.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.tableAgGrid = new _aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.tehnObslMonthInBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding + '/' +\n                selectedRow.id, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.tehnObslMonthInBuildingsParameters.agName, this);\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.hideALl();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)('Здание =>' + selectedRow.group_1 + '=>' + selectedRow.shed + \"=> ТО по месяцам\");\n        };\n    }\n\n    setEditSequencePlanGrafAction() {\n        this.planGrafSequence.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.tableAgGrid = new _aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafSequnceParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsPlanGrafOrderedById + '/' +\n                selectedRow.id, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafSequnceParameters.agName, this);\n            this.showArrangePlanGrafSequenceButton();\n            this.setArrangeBuildingInPlanGrafAction();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(' Изменение последовательности зданий в план-графике =>' + selectedRow.plan_graf_name);\n        };\n    }\n\n    setArrangeBuildingInPlanGrafAction() {\n\n        this.arrangePlanGrafSequence.onclick = () => {\n            let requestBody = {};\n            let buildingsSequence = [];\n            this.tableAgGrid.gridOptions.api.forEachNode((rowNode) => {\n                buildingsSequence.push(rowNode.data.id);\n            });\n            requestBody.plan_graf_name = this.tableAgGrid.gridOptions.api.getRowNode(0).data.plan_graf_name;\n            requestBody.buildingsSequence = buildingsSequence;\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.putUpdateBuildingSequenceOfPlanGraf, \"PUT\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestBody)).then(() => {\n                this.tableAgGrid.setGridData();\n            }).catch((rejected) => console.log(rejected));\n        }\n    }\n\n\n    setEditAddEquipOfBuildingButtonActionForNewEquipInBuilding() {\n        this.modalForm.setEditAddEquipOfBuildingButtonActionForNewEquipInBuildingModal();\n    }\n\n    setReturnToBuildingsAction() {\n        this.returnToBuildings.onclick = () => {\n            this.tableAgGrid = new _aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableBuildingsParameters.agName, this, this.agBuildingId, this.agBuildingFilterState);\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.hideALl();\n            this.showExcelButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(\"Здания\");\n        };\n    }\n\n    setExportPassportAction() {\n        this.exportPassport.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let URL = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportPassport + '/' + selectedRow.id;\n\n            let downloadLink = document.createElement(\"a\");\n            downloadLink.href = URL;\n            downloadLink.click();\n        };\n    }\n\n    setExportPlanGrafAction() {\n        this.exportPlanGraf.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let requestBody = {};\n            requestBody.plan_graf_name = selectedRow.plan_graf_name;\n            requestBody.year_pl_gr = document.querySelector('#year_pl_gr').value;\n            requestBody.who_approve_fio = document.querySelector('#who_approve_fio').value;\n            requestBody.who_approve_position = document.querySelector('#who_approve_position').value;\n            requestBody.who_assign_fio = document.querySelector('#who_assign_fio').value;\n            requestBody.who_assign_position = document.querySelector('#who_assign_position').value;\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.downloadFile)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportPlanGrafic, \"POST\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestBody));\n        };\n    }\n\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/action-menu.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag-grid-parameters.js":
/*!*************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag-grid-parameters.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"agGridParameters\": function() { return /* binding */ agGridParameters; },\n/* harmony export */   \"initializeAgGridParameters\": function() { return /* binding */ initializeAgGridParameters; }\n/* harmony export */ });\n/* harmony import */ var _ag_grid_classes_date_picker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ag_grid_classes/date-picker */ \"./resources/js/cps_portal_table/ag_grid_classes/date-picker.js\");\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag_grid_classes/numericCellEditor.js */ \"./resources/js/cps_portal_table/ag_grid_classes/numericCellEditor.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ag_grid_classes/check-box-render */ \"./resources/js/cps_portal_table/ag_grid_classes/check-box-render.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./app */ \"./resources/js/cps_portal_table/app.js\");\n\n\n\n\n\n\n\n\n\nlet agGridParameters = {\n    agOuterId: undefined,\n    actionMenu: undefined,\n    workersParameters: {\n        gridOptions: {\n            columnDefs: [\n                {headerName: \"ФИО\", field: \"fio\", minWidth: 100, tooltipField: 'fio', sortable: true},\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 100,\n                    tooltipField: 'tab_nom',\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                },\n                {headerName: \"Должность\", field: \"worker_position\", minWidth: 100, tooltipField: 'worker_position'},\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteWorkers, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'workers',\n    },\n    fireInstrParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    editable: false,\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    editable: false,\n                },\n                {\n                    headerName: \"Должность\",\n                    field: \"worker_position\",\n                    minWidth: 100,\n                    tooltipField: 'worker_position',\n                    editable: false,\n                },\n                {\n                    headerName: \"ПоследняяПроверка\",\n                    field: \"fire_instr_last\",\n                    minWidth: 60,\n                    tooltipField: 'fire_instr_last',\n                    cellEditor: _ag_grid_classes_date_picker__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n                    valueFormatter: (params) => {\n                        if (params.data.fire_instr_last !== undefined && params.data.fire_instr_last !== null) {\n                            let dateAsString = params.data.fire_instr_last;\n                            let dateParts = dateAsString.split('-');\n                            return `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n                        }\n                    },\n                },\n                {\n                    headerName: \"СледующаяПроверка\",\n                    field: \"fire_instr_next\",\n                    minWidth: 60,\n                    tooltipField: 'fire_instr_next',\n                    cellEditor: _ag_grid_classes_date_picker__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n                    valueFormatter: (params) => {\n                        if (params.data.fire_instr_next !== undefined && params.data.fire_instr_next !== null) {\n                            let dateAsString = params.data.fire_instr_next;\n                            let dateParts = dateAsString.split('-');\n                            return `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n                        }\n\n                    },\n                },\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteWorkers, \"PUT\", (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showPlusSixButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'fireInstr',\n    },\n    buildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 100,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"Queue\",\n                    minWidth: 100,\n                    tooltipField: 'Queue',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Монтаж\",\n                    field: \"fitt\",\n                    minWidth: 100,\n                    tooltipField: 'fitt',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"МонтажГод\",\n                    field: \"fitt_year\",\n                    minWidth: 100,\n                    tooltipField: 'fitt_year',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                },\n                {\n                    headerName: \"Проект\",\n                    field: \"proj\",\n                    minWidth: 100,\n                    tooltipField: 'proj',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"ПроектГод\",\n                    field: \"proj_year\",\n                    minWidth: 100,\n                    tooltipField: 'proj_year',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                },\n                {\n                    headerName: \"АУПС\",\n                    field: \"type_aups\",\n                    minWidth: 100,\n                    tooltipField: 'type_aups',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"СОУЭтип\",\n                    field: \"aud_warn_type\",\n                    minWidth: 100,\n                    tooltipField: 'aud_warn_type',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"КатТехСложАСУ\",\n                    field: \"categ_asu\",\n                    minWidth: 100,\n                    tooltipField: 'categ_asu',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"НаКонсерв\",\n                    field: \"on_conserv\",\n                    minWidth: 50,\n                    tooltipField: 'on_conserv',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n                agGridParameters.actionMenu.showPassportButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cps_buildings',\n    },\n    uneditableBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 100,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"Queue\",\n                    minWidth: 100,\n                    tooltipField: 'Queue',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: true,\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showGoToEquipButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableBuildings',\n    },\n    buildingsPlanGrafParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Здание\",\n                    children: [\n                        {\n                            headerName: \"Участок\",\n                            field: \"area\",\n                            minWidth: 100,\n                            tooltipField: 'area',\n                            filter: true,\n                            editable: false,\n                        },\n                        {\n                            headerName: \"Группа\",\n                            field: \"group_1\",\n                            minWidth: 100,\n                            tooltipField: 'group_1',\n                            filter: true,\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Подгруппа\",\n                            field: \"group_2\",\n                            minWidth: 100,\n                            tooltipField: 'group_2',\n                            filter: true,\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Здание\",\n                            field: \"shed\",\n                            minWidth: 100,\n                            tooltipField: 'shed',\n                            filter: true,\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Очередь\",\n                            field: \"Queue\",\n                            minWidth: 100,\n                            tooltipField: 'Queue',\n                            filter: true,\n                            editable: false,\n\n                        },\n                    ]\n\n                },\n                {\n                    headerName: 'ПланГрафик',\n                    children: [\n                        {\n                            headerName: \"ПланГрНазвание\",\n                            field: \"plan_graf_name\",\n                            minWidth: 100,\n                            tooltipField: 'plan_graf_name',\n                            filter: true,\n                            editable: true,\n                            cellEditor: 'agSelectCellEditor',\n                            singleClickEdit: true,\n                            cellEditorParams: {\n                                values: []\n                            }\n                        },\n                        {\n                            headerName: \"ДатыТО\",\n                            field: \"to_date\",\n                            minWidth: 100,\n                            tooltipField: 'to_date',\n                            filter: true,\n                            editable: true,\n                            cellStyle: {'font-weight': 'bold'}\n                        },\n                        {\n                            headerName: \"ПорядНомер\",\n                            field: \"gr_numb\",\n                            minWidth: 50,\n                            tooltipField: 'gr_numb',\n                            filter: true,\n                            editable: false,\n\n                        },\n                    ]\n                }\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showInnerMonthButton();\n                agGridParameters.actionMenu.showPlanGrafSequenceButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'buildingsPlanGraf',\n    },\n    buildingsPlanGrafSequnceParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    filter: true,\n                    editable: false,\n                    rowDrag: true\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 200,\n                    tooltipField: 'shed',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"Queue\",\n                    minWidth: 100,\n                    tooltipField: 'Queue',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"ПланГрНазвание\",\n                    field: \"plan_graf_name\",\n                    minWidth: 100,\n                    tooltipField: 'plan_graf_name',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"ДатыТО\",\n                    field: \"to_date\",\n                    minWidth: 100,\n                    tooltipField: 'to_date',\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"ПорядНомер\",\n                    field: \"gr_numb\",\n                    minWidth: 50,\n                    tooltipField: 'gr_numb',\n                    filter: true,\n                    editable: false,\n\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            },\n            rowDragManaged: true,\n            animateRows: true,\n        },\n        agName: 'buildingsPlanGrafSequnce',\n    },\n    uneditableBuildingsPlanGrafikParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"ПланГрафик\",\n                    field: \"plan_graf_name\",\n                    minWidth: 100,\n                    tooltipField: 'plan_graf_name',\n                    sortable: true,\n                    filter: true,\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: null,\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showPlanGrafButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableBuildingsPlanGrafik',\n    },\n    equipmentParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 100,\n                    tooltipField: 'equip_name',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app_second\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app_second',\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    minWidth: 100,\n                    tooltipField: 'kind_signal',\n                    sortable: true, filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    minWidth: 100,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: true,\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteEquipment, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cps_equipment',\n    },\n    equipmentInBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 100,\n                    tooltipField: 'equip_name',\n                    sortable: true, filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    sortable: true, filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 100,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 100,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    },\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Год\",\n                    field: \"equip_year\",\n                    minWidth: 100,\n                    tooltipField: 'equip_year',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Удалить\",\n                    field: \"deleted_by_worker\",\n                    minWidth: 50,\n                    tooltipField: 'deleted_by_worker',\n                    sortable: true,\n                    filter: true,\n                    editable: false,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Коментарии\",\n                    field: \"equip_comments\",\n                    minWidth: 100,\n                    tooltipField: 'equip_comments',\n                    sortable: false,\n                    filter: false,\n                    editable: true,\n                },\n\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.getPutDeleteEquipmentInBuilding, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                if (_app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Nur_master\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Yamburg_master\" ||\n                    _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Zapolyarka_master\") {\n                    agGridParameters.actionMenu.showDelButton();\n                }\n                agGridParameters.actionMenu.showReturnToBuildingsButton();\n                agGridParameters.actionMenu.showEditButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'equipmentInBuildings',\n    },\n    equipmentInBuildingsParametersForNotSupUser: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 350,\n                    tooltipField: 'equip_name',\n                    sortable: true, filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 50,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 50,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Год\",\n                    field: \"equip_year\",\n                    minWidth: 100,\n                    tooltipField: 'equip_year',\n                    sortable: true,\n                    filter: true,\n                    cellEditor: _ag_grid_classes_numericCellEditor_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                },\n                {\n                    headerName: \"Коментарии\",\n                    field: \"equip_comments\",\n                    minWidth: 100,\n                    tooltipField: 'equip_comments',\n                    sortable: false,\n                    filter: false,\n                    editable: true,\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.getPutDeleteEquipmentInBuildingWithWorkerChanges, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n                agGridParameters.actionMenu.showReturnToBuildingsButton();\n                agGridParameters.actionMenu.showEditButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'equipmentInBuildingsForNotSupUser',\n    },\n    tehnObslMonthInBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 200,\n                    tooltipField: 'equip_name',\n                    sortable: true, filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 100,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 100,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: true,\n                    editable: false,\n                },\n                {\n                    headerName: \"Январь текст\",\n                    field: \"cel_january\",\n                    minWidth: 100,\n                    tooltipField: 'cel_january',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ЯнварьПров\",\n                    field: \"cel_january_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_january_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Февраль текст\",\n                    field: \"cel_february\",\n                    minWidth: 100,\n                    tooltipField: 'cel_february',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ФевральПров\",\n                    field: \"cel_february_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_february_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Март текст\",\n                    field: \"cel_march\",\n                    minWidth: 100,\n                    tooltipField: 'cel_march',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ЯнварьПров\",\n                    field: \"cel_march_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_march_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Апрель текст\",\n                    field: \"cel_april\",\n                    minWidth: 100,\n                    tooltipField: 'cel_april',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"АпрельПров\",\n                    field: \"cel_april_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_april_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Май текст\",\n                    field: \"cel_may\",\n                    minWidth: 100,\n                    tooltipField: 'cel_may',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"МайПров\",\n                    field: \"cel_may_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_may_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Июнь текст\",\n                    field: \"cel_june\",\n                    minWidth: 100,\n                    tooltipField: 'cel_june',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ИюньПров\",\n                    field: \"cel_june_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_june_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Июль текст\",\n                    field: \"cel_july\",\n                    minWidth: 100,\n                    tooltipField: 'cel_july',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ИюльПров\",\n                    field: \"cel_july_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_july_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Август текст\",\n                    field: \"cel_august\",\n                    minWidth: 100,\n                    tooltipField: 'cel_august',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"АвгустПров\",\n                    field: \"cel_august_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_august_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Сентябрь текст\",\n                    field: \"cel_september\",\n                    minWidth: 100,\n                    tooltipField: 'cel_september',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"СентябрьПров\",\n                    field: \"cel_september_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_september_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Октябрь текст\",\n                    field: \"cel_october\",\n                    minWidth: 100,\n                    tooltipField: 'cel_october',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ОктябрьПров\",\n                    field: \"cel_october_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_october_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n                {\n                    headerName: \"Ноябрь текст\",\n                    field: \"cel_november\",\n                    minWidth: 100,\n                    tooltipField: 'cel_november',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"НоябрьПров\",\n                    field: \"cel_november_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_november_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n\n                {\n                    headerName: \"Декабрь текст\",\n                    field: \"cel_december\",\n                    minWidth: 100,\n                    tooltipField: 'cel_december',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                },\n                {\n                    headerName: \"ДекабрьПров\",\n                    field: \"cel_december_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_december_gray',\n                    sortable: true,\n                    filter: true,\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n                },\n\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_1__.config.api.getPutDeleteEquipmentInBuilding, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'TehnObslMonthInBuilding',\n    },\n    equipmentForChooseParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 350,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app\",\n                    minWidth: 60,\n                    tooltipField: 'group_2',\n                    sortable: true, filter: true,\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app_second\",\n                    minWidth: 60,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: true,\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    maxWidth: 120,\n                    tooltipField: 'group_1',\n                    sortable: true, filter: true,\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    maxWidth: 120,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: true,\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n            },\n            suppressContextMenu: true,\n            enableBrowserTooltips: true,\n            onRowSelected: function () {\n            },\n        },\n        agName: 'cps_equipment_for_choose',\n    },\n}\n\nfunction initializeAgGridParameters() {\n    agGridParameters.equipmentParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'kind_app') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.kind_app;\n        }\n        if (columnDefs.field === 'kind_app_second') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.kind_app_second.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem.kind_app_second);\n            })\n        }\n        if (columnDefs.field === 'kind_signal') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.kind_signal.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n    });\n    agGridParameters.buildingsParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'area') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.area;\n        }\n        if (columnDefs.field === 'group_1') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_1.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem.group_1);\n            })\n        }\n        if (columnDefs.field === 'type_aups') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.type_aups.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'aud_warn_type') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.aud_warn_type.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'categ_asu') {\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.categ_asu.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'group_2') {\n            columnDefs.cellEditorParams.values.push('');\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_2.forEach((elem) => {\n                if (columnDefs.cellEditorParams.values.indexOf(elem.group_2) === -1) {\n                    columnDefs.cellEditorParams.values.push(elem.group_2);\n                }\n            })\n        }\n        if (columnDefs.field === 'Queue') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.queue;\n        }\n        if (columnDefs.field === 'affiliate') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.affiliate;\n        }\n    });\n    agGridParameters.equipmentInBuildingsParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'measure') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.measure;\n        }\n\n        if (columnDefs.field === 'deleted_by_worker' && (_app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Nur_master\" ||\n            _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Yamburg_master\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Zapolyarka_master\")) {\n            columnDefs.hide = true;\n        }\n    });\n    agGridParameters.equipmentInBuildingsParametersForNotSupUser.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'measure') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.measure;\n        }\n    });\n    agGridParameters.buildingsPlanGrafParameters.gridOptions.columnDefs[1].children.forEach((columnDefs) => {\n        if (columnDefs.field === 'plan_graf_name') {\n            if (_app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Nur_master\" ||\n                _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Yamburg_master\" || _app__WEBPACK_IMPORTED_MODULE_6__.userRole === \"Zapolyarka_master\") {\n                columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.planGraf;\n            } else {\n                delete columnDefs.cellEditorParams;\n                delete columnDefs.cellEditor;\n            }\n        }\n    });\n\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag-grid-parameters.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag_grid_classes/check-box-render.js":
/*!***************************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag_grid_classes/check-box-render.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CheckboxRenderer; }\n/* harmony export */ });\nclass CheckboxRenderer {\n    init(params) {\n        this.params = params;\n\n        this.eGui = document.createElement('input');\n        this.eGui.type = 'checkbox';\n        this.eGui.checked = params.value;\n\n        this.checkedHandler = this.checkedHandler.bind(this);\n        this.eGui.addEventListener('click', this.checkedHandler);\n    }\n    checkedHandler(e) {\n        let checked = e.target.checked;\n        let colId = this.params.column.colId;\n        this.params.node.setDataValue(colId, checked);\n    }\n    getGui() {\n        return this.eGui;\n    }\n    destroy() {\n        this.eGui.removeEventListener('click', this.checkedHandler);\n    }\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag_grid_classes/check-box-render.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag_grid_classes/date-picker.js":
/*!**********************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag_grid_classes/date-picker.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DatePicker; }\n/* harmony export */ });\nclass DatePicker {\n    init(params) {\n        flatpickr.localize(flatpickr.l10ns.ru);\n        this.input = document.createElement(\"input\");\n        this.input.className = 'input-date-editor';\n        this.input.value =  params.value;\n\n        let postgresqlFormat = this.input.value;\n        let dateHumanFormat= postgresqlFormat.split('-').reverse().join('.');\n\n        let optional_config = {\n            dateFormat: \"d.m.Y\",\n            defaultDate: dateHumanFormat\n        }\n\n        this.input.flatpickr(optional_config);\n    }\n\n    getGui() {\n        return this.input;\n    }\n\n    afterGuiAttached() {\n        this.input.focus();\n        this.input.select();\n    }\n\n    getValue() {\n        let dateHumanFormat = this.input.value;\n        let postgresqlFormat= dateHumanFormat.split('.').reverse().join('-');\n        return postgresqlFormat;\n    }\n\n    destroy() {\n    }\n\n    isPopup() {\n        return false;\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag_grid_classes/date-picker.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag_grid_classes/excel-export.js":
/*!***********************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag_grid_classes/excel-export.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"myExcelXML\": function() { return /* binding */ myExcelXML; }\n/* harmony export */ });\nlet myExcelXML = (function () {\n    let Workbook, WorkbookStart = '<?xml version=\"1.0\"?><ss:Workbook  ' +\n        'xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" ' +\n        'xmlns:o=\"urn:schemas-microsoft-com:office:office\" ' +\n        'xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ' +\n        'xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\">';\n    const WorkbookEnd = '</ss:Workbook>';\n    let fs, SheetName = 'SHEET 1', styleID = 1, columnWidth = 80, fileName = \"data\", uri, link;\n\n    class myExcelXML {\n        constructor(o, tableName) {\n            fileName = tableName + \".xls\";\n            let respArray = o;\n            let finalDataArray = [];\n\n            for (let i = 0; i < respArray.length; i++) {\n                finalDataArray.push(flatten(respArray[i]));\n            }\n\n            let s = JSON.stringify(finalDataArray);\n            fs = s.replace(/&/gi, '&amp;');\n        }\n\n        downLoad() {\n            const Worksheet = myXMLWorkSheet(SheetName, fs);\n            Workbook = WorkbookStart + Worksheet + WorkbookEnd;\n            let fileNameToDownload = fileName;\n            let blob = new Blob([Workbook], {type: 'text/xls'});\n            if (window.navigator.msSaveOrOpenBlob) {\n                window.navigator.msSaveBlob(blob, fileNameToDownload);\n            } else {\n                let elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(blob);\n                elem.download = fileNameToDownload;\n                document.body.appendChild(elem);\n                elem.click();\n                document.body.removeChild(elem);\n            }\n        }\n\n        get fileName() {\n            return fileName;\n        }\n\n        set fileName(n) {\n            fileName = n;\n        }\n\n        get SheetName() {\n            return SheetName;\n        }\n\n        set SheetName(n) {\n            SheetName = n;\n        }\n\n        get styleID() {\n            return styleID;\n        }\n\n        set styleID(n) {\n            styleID = n;\n        }\n    }\n\n    const myXMLWorkSheet = function (name, o) {\n        const Table = myXMLTable(o);\n        let WorksheetStart = '<ss:Worksheet ss:Name=\"' + name + '\">';\n        const WorksheetEnd = '</ss:Worksheet>';\n\n        return WorksheetStart + Table + WorksheetEnd;\n    }\n\n    const myXMLTable = function (o) {\n        let TableStart = '<ss:Table>';\n        const TableEnd = '</ss:Table>';\n\n        const tableData = JSON.parse(o);\n\n        if (tableData.length > 0) {\n            const columnHeader = Object.keys(tableData[0]);\n            let rowData;\n            for (let i = 0; i < columnHeader.length; i++) {\n                TableStart += myXMLColumn(columnWidth);\n\n            }\n            for (let j = 0; j < tableData.length; j++) {\n                rowData += myXMLRow(tableData[j], columnHeader);\n            }\n            // TableStart += myXMLHead(1, columnHeader);  //columns numbers\n            TableStart += rowData;\n        }\n\n        return TableStart + TableEnd;\n    }\n\n    const myXMLColumn = function (w) {\n        return '<ss:Column ss:AutoFitWidth=\"0\" ss:Width=\"' + w + '\"/>';\n    }\n\n\n    const myXMLHead = function (id, h) {\n        let HeadStart = '<ss:Row ss:StyleID=\"' + id + '\">';\n        const HeadEnd = '</ss:Row>';\n\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(h[i].toUpperCase());\n            HeadStart += Cell;\n        }\n\n        return HeadStart + HeadEnd;\n    }\n\n    const myXMLRow = function (r, h) {\n        let RowStart = '<ss:Row>';\n        const RowEnd = '</ss:Row>';\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(r[h[i]]);\n            RowStart += Cell;\n        }\n\n        return RowStart + RowEnd;\n    }\n\n    const myXMLCell = function (n) {\n        let CellStart = '<ss:Cell>';\n        const CellEnd = '</ss:Cell>';\n\n        const Data = myXMLData(n);\n        CellStart += Data;\n\n        return CellStart + CellEnd;\n    }\n\n    const myXMLData = function (d) {\n        let DataStart = '<ss:Data ss:Type=\"String\">';\n        const DataEnd = '</ss:Data>';\n\n        return DataStart + d + DataEnd;\n    }\n\n    const flatten = function (obj) {\n        var obj1 = JSON.parse(JSON.stringify(obj));\n        const obj2 = JSON.parse(JSON.stringify(obj));\n        if (typeof obj === 'object') {\n            for (var k1 in obj2) {\n                if (obj2.hasOwnProperty(k1)) {\n                    if (typeof obj2[k1] === 'object' && obj2[k1] !== null) {\n                        delete obj1[k1]\n                        for (var k2 in obj2[k1]) {\n                            if (obj2[k1].hasOwnProperty(k2)) {\n                                obj1[k1 + '-' + k2] = obj2[k1][k2];\n                            }\n                        }\n                    }\n                }\n            }\n            var hasObject = false;\n            for (var key in obj1) {\n                if (obj1.hasOwnProperty(key)) {\n                    if (typeof obj1[key] === 'object' && obj1[key] !== null) {\n                        hasObject = true;\n                    }\n                }\n            }\n            if (hasObject) {\n                return flatten(obj1);\n            } else {\n                return obj1;\n            }\n        } else {\n            return obj1;\n        }\n    }\n\n    return myExcelXML;\n})();\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag_grid_classes/excel-export.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag_grid_classes/local.ru.js":
/*!*******************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag_grid_classes/local.ru.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AG_GRID_LOCALE_RU\": function() { return /* binding */ AG_GRID_LOCALE_RU; }\n/* harmony export */ });\nconst AG_GRID_LOCALE_RU = {\n    // for filter panel\n    page: 'Страница',\n    more: 'ещё',\n    to: 'к',\n    of: 'из',\n    next: 'Следующая',\n    last: 'Последняя',\n    first: 'Первая',\n    previous: 'Предыдущая',\n    loadingOoo: 'Загрузка...',\n\n    // for set filter\n    selectAll: 'Выделить всё',\n    searchOoo: 'Поиск...',\n    blanks: 'Ничего не найдено',\n\n    // for number filter and text filter\n    filterOoo: 'Фильтровать...',\n    applyFilter: 'Применить фильтр...',\n    equals: 'Равно',\n    notEqual: 'Не равно',\n\n    // for number filter\n    lessThan: 'Меньше чем',\n    greaterThan: 'Больше чем',\n    lessThanOrEqual: 'Меньше или равно',\n    greaterThanOrEqual: 'Больше или равно',\n    inRange: 'В промежутке',\n\n    // for text filter\n    contains: 'Содержит',\n    notContains: 'Не содержит',\n    startsWith: 'Начинается с',\n    endsWith: 'Заканчивается',\n\n    // filter conditions\n    andCondition: '\"И\"',\n    orCondition: '\"ИЛИ\"',\n\n    // the header of the default group column\n    group: 'Группа',\n\n    // tool panel\n    columns: 'Столбцы',\n    filters: 'Фильтры',\n    rowGroupColumns: 'Столбцы группировки по строкам',\n    rowGroupColumnsEmptyMessage: 'Перетащите сюда для группировки по строкам',\n    valueColumns: 'Столбцы со значениями',\n    pivotMode: 'Режим сводной таблицы',\n    groups: 'Группы',\n    values: 'Значения',\n    pivots: 'Заголовки столбцов',\n    valueColumnsEmptyMessage: 'Перетащите сюда для агрегации',\n    pivotColumnsEmptyMessage: 'Перетащите сюда, чтобы задать заголовки столбам',\n    toolPanelButton: 'Панель инструментов',\n\n    // other\n    noRowsToShow: 'Нет данных',\n\n    // enterprise menu\n    pinColumn: 'Закрепить колонку',\n    valueAggregation: 'Агрегация по значению',\n    autosizeThiscolumn: 'Автоматически задавать размер этой колонки',\n    autosizeAllColumns: 'Автоматически задавать размер всем колонкам',\n    groupBy: 'Группировать по',\n    ungroupBy: 'Разгруппировать по',\n    resetColumns: 'Сбросить столбцы',\n    expandAll: 'Развернуть всё',\n    collapseAll: 'Свернуть всё',\n    toolPanel: 'Панель инструментов',\n    export: 'Экспорт',\n    csvExport: 'Экспорт в CSV',\n    excelExport: 'Экспорт в Excel (.xlsx)',\n    excelXmlExport: 'Экспорт в XML (.xml)',\n\n    // enterprise menu pinning\n    pinLeft: 'Закрепить слева <<',\n    pinRight: 'Закрепить справа >>',\n    noPin: 'Не закреплять <>',\n\n    // enterprise menu aggregation and status bar\n    sum: 'Сумма',\n    min: 'Минимум',\n    max: 'Максимум',\n    none: 'Пусто',\n    count: 'Количество',\n    average: 'Среднее значение',\n    filteredRows: 'Отфильтрованные',\n    selectedRows: 'Выделенные',\n    totalRows: 'Всего строк',\n    totalAndFilteredRows: 'Строк',\n\n    // standard menu\n    copy: 'Копировать',\n    copyWithHeaders: 'Копировать с заголовком',\n    ctrlC: 'Ctrl+C',\n    paste: 'Вставить',\n    ctrlV: 'Ctrl+V'\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag_grid_classes/local.ru.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/ag_grid_classes/numericCellEditor.js":
/*!****************************************************************************!*\
  !*** ./resources/js/cps_portal_table/ag_grid_classes/numericCellEditor.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ NumericCellEditor; }\n/* harmony export */ });\nclass NumericCellEditor {\n    // gets called once before the renderer is used\n    init(params) {\n        // create the cell\n        this.eInput = document.createElement('input');\n        this.eInput.className = 'simple-input-editor';\n\n        if (this.isCharNumeric(params.charPress)) {\n            this.eInput.value = params.charPress;\n        } else {\n            if (params.value !== undefined && params.value !== null) {\n                this.eInput.value = params.value;\n            }\n        }\n\n        this.eInput.addEventListener('keypress', (event) => {\n            if (!this.isKeyPressedNumeric(event)) {\n                this.eInput.focus();\n                if (event.preventDefault) event.preventDefault();\n            } else if (this.isKeyPressedNavigation(event)) {\n                event.stopPropagation();\n            }\n        });\n\n        // only start edit if key pressed is a number, not a letter\n        var charPressIsNotANumber =\n            params.charPress && '1234567890'.indexOf(params.charPress) < 0;\n        this.cancelBeforeStart = !!charPressIsNotANumber;\n    }\n\n    isKeyPressedNumeric(event) {\n        const charStr = event.key;\n        return this.isCharNumeric(charStr);\n    }\n\n    isKeyPressedNavigation(event) {\n        return event.key === 'ArrowLeft' || event.key === 'ArrowRight';\n    }\n\n    isCharNumeric(charStr) {\n        return charStr && !!/\\d/.test(charStr);\n    }\n\n    // gets called once when grid ready to insert the element\n    getGui() {\n        return this.eInput;\n    }\n\n    // focus and select can be done after the gui is attached\n    afterGuiAttached() {\n        this.eInput.focus();\n    }\n\n    // returns the new value after editing\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n    // example - will reject the number if it contains the value 007\n    // - not very practical, but demonstrates the method.\n    isCancelAfterEnd() {\n        var value = this.getValue();\n        return value.indexOf('007') >= 0;\n    }\n\n    // returns the new value after editing\n    getValue() {\n        return this.eInput.value;\n    }\n\n    // any cleanup we need to be done here\n    destroy() {\n        // but this example is simple, no cleanup, we could  even leave this method out as it's optional\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/ag_grid_classes/numericCellEditor.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/aggrid.js":
/*!*************************************************!*\
  !*** ./resources/js/cps_portal_table/aggrid.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TableAgGrid; }\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ag_grid_classes/excel-export.js */ \"./resources/js/cps_portal_table/ag_grid_classes/excel-export.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag_grid_classes/local.ru */ \"./resources/js/cps_portal_table/ag_grid_classes/local.ru.js\");\n\n\n\n\n\n//ag grid wrapper, first field from DAO has to have the name \"id\".\n// Constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu)\nclass TableAgGrid {\n    actionMenu;\n    gridOptions;\n    getDataUrl;\n    delUrl;\n    idToScroll;\n    agFilterModel;\n    isReady = false;\n    targetId = 'page-content';\n    confirmDeleteBtn = document.querySelector('.modal__confirm-delete-entry-btn');\n    agName;\n\n    constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu, idToScroll = undefined,\n                agFilterModel = undefined) {\n        this.gridOptions = gridOptions;\n        this.getDataUrl = getDataUrl;\n        this.delUrl = delUrl;\n        this.agName = agName;\n        this.actionMenu = actionMenu;\n        this.idToScroll = idToScroll;\n        this.agFilterModel = agFilterModel;\n        this.renderAgGrid();\n    }\n\n    renderAgGrid() {\n        this.prepareHtml();\n        this.gridOptions.localeText = _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__.AG_GRID_LOCALE_RU;\n        new agGrid.Grid(document.getElementById(this.targetId), this.gridOptions);\n        this.setGridData();\n        // this.setGridCloseObserver();\n        this.setDeleteButtonAction();\n        this.isReady = true;\n        this.actionMenu.hideALl();\n        this.actionMenu.setExportExcelAction();\n    }\n\n    setGridData() {\n        (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.getDataUrl, 'GET').then((data) => {\n            if (data === null) {\n                throw 'setGridData data is null';\n            }\n            this.gridOptions.api.setRowData(data);\n            if (this.idToScroll !== undefined) {\n                this.scrollToid(this.idToScroll);\n                this.idToScroll = undefined;\n            }\n            if (this.agFilterModel !== undefined) {\n                this.restoreFilterModel(this.agFilterModel);\n                this.agFilterModel = undefined;\n            }\n\n        });\n    }\n\n    scrollToid() {\n        let _this = this;\n        this.gridOptions.api.forEachNode(function (node) {\n            if (node.data.id === _this.idToScroll) {\n                node.setSelected(true);\n                _this.gridOptions.api.ensureIndexVisible(node.rowIndex, 'middle');\n            }\n        });\n\n    }\n\n    getSelectedRow() {\n        let selectedRows = this.gridOptions.api.getSelectedRows()\n        if (selectedRows.length > 0) {\n            return selectedRows[0];\n        }\n    }\n\n    setDeleteButtonAction() {\n        if (this.delUrl !== null) {\n            this.confirmDeleteBtn.onclick = () => {\n                let selectedRow = this.getSelectedRow();\n                let csrf = {};\n                csrf = (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(csrf);\n                (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.delUrl, 'DELETE', csrf, selectedRow.id).then(() => {\n                    this.actionMenu.hideAllOneRowAction();\n                    this.setGridData();\n                    $('#modal__confirm-delete-entry').modal('hide');\n                });\n            };\n        }\n\n    }\n\n    setGridCloseObserver() {\n        let this_ = this;\n        const observer = new MutationObserver(function (mutations_list) {\n            console.log(mutations_list)\n            this_.actionMenu.hideALl();\n            observer.disconnect();\n            //if another one mutation observer has been started\n            // if (mutations_list.length > 1) {\n            //     observer.disconnect();\n            //     return;\n            // }\n\n            // console.log(mutations_list);\n\n            // let this__ =  this_;\n            // mutations_list.forEach(node => {\n            //     if (node.removedNodes.length > 0) {\n            //         // this__.actionMenu.hideALl();\n            //         // console.log('setGridCloseObserver');\n            //         observer.disconnect();\n            //     }\n            // })\n        });\n        observer.observe(document.getElementById(this.targetId), {subtree: false, childList: true});\n    }\n\n    prepareHtml() {\n        let pageContentHtml = document.getElementById(this.targetId);\n        pageContentHtml.innerHTML = \"\";\n        pageContentHtml.style.width = '100%'\n        pageContentHtml.classList.add('ag-theme-alpine');\n    }\n\n    getAgFilterModel() {\n        return this.gridOptions.api.getFilterModel();\n    }\n\n    restoreFilterModel(savedFilterModel) {\n        this.gridOptions.api.setFilterModel(savedFilterModel);\n    }\n\n    exportDisplyedDataToExcel() {\n        let agHeaders = [];\n        let agFields = [];\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agHeaders.push(element.colDef.headerName)));\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agFields.push(element.colDef.field)));\n        let agData = [];\n        this.gridOptions.api.forEachNode((rowNode, index) => {\n            agData[index] = rowNode.data;\n            let agDataTmp = Object.keys(agData[index])\n                .filter(key => agFields.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = agData[index][key];\n                    return obj;\n                }, {});\n            agData[index] = agDataTmp;\n        });\n\n        let excelData = [];\n        let tmpArray = [];\n        for (const elementAgData of agData) {\n            tmpArray = [];\n            for (const elementAgFields of agFields) {\n                for (const [key, value] of Object.entries(elementAgData)) {\n\n                    if (elementAgFields === key) {\n                        tmpArray.push(value)\n                    }\n                }\n            }\n            excelData.push(tmpArray);\n        }\n        //format text \"null, false, true values\"\n        for (let i = 0; i < excelData.length; i++) {\n            for (let j = 0; j < excelData[i].length; j++) {\n                if (excelData[i][j] === null) {\n                    excelData[i][j] = \"\";\n                }\n                if (excelData[i][j] === false) {\n                    excelData[i][j] = \"нет\";\n                }\n                if (excelData[i][j] === true) {\n                    excelData[i][j] = \"да\";\n                }\n            }\n        }\n\n        excelData.unshift(agHeaders);\n        let myTestXML = new _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__.myExcelXML(excelData, this.agName);\n        myTestXML.downLoad();\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/aggrid.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/app.js":
/*!**********************************************!*\
  !*** ./resources/js/cps_portal_table/app.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"userRole\": function() { return /* binding */ userRole; }\n/* harmony export */ });\n/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action-menu.js */ \"./resources/js/cps_portal_table/action-menu.js\");\n/* harmony import */ var _side_bar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./side-bar.js */ \"./resources/js/cps_portal_table/side-bar.js\");\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal.js */ \"./resources/js/cps_portal_table/modal.js\");\n/* harmony import */ var _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag-grid-parameters.js */ \"./resources/js/cps_portal_table/ag-grid-parameters.js\");\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\n\n\n\n\n\nlet userRole = '';\n\ngetAllValuesForLists();\n\nfunction init() {\n\n    (0,_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.initializeAgGridParameters)();\n\n    let actionMenu = new _action_menu_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    let modalForm = new _modal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    let sideBar = new _side_bar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n    //set objects links to each other\n    modalForm.actionMenu = actionMenu;\n    actionMenu.modalForm = modalForm;\n    sideBar.actionMenu = actionMenu;\n    sideBar.modalForm = modalForm;\n    sideBar.setButtonsVision();\n    sideBar.setButtonsActions();\n\n    _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.actionMenu = actionMenu;\n\n    //assign links to buttons\n    actionMenu.newTableRow = document.querySelector('.new-table-row');\n    actionMenu.deleteTableRow = document.querySelector('.delete-table-row');\n    actionMenu.exportExcel = document.querySelector('.excel-export');\n    actionMenu.fireExamPlusSix = document.querySelector('.plus-six-month');\n    actionMenu.innerEquipment = document.querySelector('.inner-equip');\n    actionMenu.editTableRow = document.querySelector('.edit-table-row');\n    actionMenu.returnToBuildings = document.querySelector('.return-buildings');\n    actionMenu.exportPassport = document.querySelector('.excel-export-passport');\n    actionMenu.exportPlanGraf = document.querySelector('.excel-export-plangrafic');\n    actionMenu.innerMonth = document.querySelector('.excel-inner-month');\n    actionMenu.planGrafSequence = document.querySelector('.plangraf-sequence');\n    actionMenu.arrangePlanGrafSequence = document.querySelector('.plangraf-arrange-numbers');\n\n    // actionMenu.hideALl();\n}\n\nfunction getAllValuesForLists() {\n\n    (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getUserRoles, 'GET').then((userRoleResponse) => {\n        userRole = userRoleResponse;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsGroup1, 'GET');\n    }).then((buildingsGroup1Data) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.group_1 = buildingsGroup1Data;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsGroup2, 'GET');\n    }).then((buildingsGroup2Data) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.group_2 = buildingsGroup2Data;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsAffiliate, 'GET');\n    }).then((buildingsAffiliateData) => {\n        buildingsAffiliateData.forEach((elem) => {\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.affiliate.push(elem.affiliate);\n\n        });\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsPlanGraf, 'GET');\n    }).then((buildingsPlanGraf) => {\n        buildingsPlanGraf.forEach((elem) => {\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.planGraf.push(elem.plan_graf_name);\n        });\n    }).then(() => {\n        init();\n    }).catch((e) => {\n        console.log(e);\n    });\n\n\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/app.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/cps-portal-dao.js":
/*!*********************************************************!*\
  !*** ./resources/js/cps_portal_table/cps-portal-dao.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": function() { return /* binding */ config; },\n/* harmony export */   \"downloadFile\": function() { return /* binding */ downloadFile; },\n/* harmony export */   \"httpRequest\": function() { return /* binding */ httpRequest; }\n/* harmony export */ });\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n\n\nlet url = window.location\nlet splitUrl = url.toString().split('/');\nsplitUrl = splitUrl.slice(0, -1);\nlet UrlPathWithoutLastDirectory = splitUrl.join(\"/\")\n\nlet config = {\n    api: {\n        getWorkersALl: '/api/workersall',\n        postPutDeleteWorkers: '/api/workers',\n        postWorkersAddSixMonth: '/api/workers-add-six-month',\n        getBuildingsALl: '/api/cps-buildings-all',\n        getBuildingsGroup1: '/api/cps-buildings-group1',\n        getBuildingsGroup2: '/api/cps-buildings-group2',\n        getBuildingsPlanGraf: '/api/cps-buildings-plangraf',\n        getBuildingsPlanGrafOrderedByPlGrafNumb: '/api/cps-buildings-and-orederedplangraf',\n        getBuildingsPlanGrafOrderedById: '/api/cps-buildings-plangraf-by-id',\n        getBuildingsAffiliate: '/api/cps-buildings-affiliate',\n        putUpdateBuildingSequenceOfPlanGraf: '/api/cps-update-buildingplangraf-seq',\n        postPutDeleteBuildings: '/api/cps-buildings',\n        getEquipmentALl: '/api/cps-equipment-all',\n        postPutDeleteEquipment: '/api/cps-equipment',\n        getPutDeleteEquipmentInBuilding: '/api/cps-equipment-buildings',\n        getUserRole: '/api/get-user-role',\n        getExportNormiZapasaKip: '/api/export-normi-zapasa-kip',\n        getExportPotrebnostMtr: '/api/export-potrebnost-mtr',\n        getExportPassport: '/api/export-passport',\n        getExportPlanGrafic: '/api/export-plangrafic',\n        getExportOtkaziIzveshatelei: '/api/export-otkazi-russianizveshateli',\n        getExportAllData: '/api/export-all-data',\n        getUserRoles: '/api/get-user-roles',\n        getPutDeleteEquipmentInBuildingWithWorkerChanges: '/api/cps-equipment-buildings-with-worker-changes',\n    }\n};\n\nObject.keys(config.api).forEach(key => {\n    config.api[key] = UrlPathWithoutLastDirectory + config.api[key];\n});\n\nfunction httpRequest(url, method, data = null, idRow = null) {\n    if (idRow !== null) url += '/' + idRow;\n\n    return new Promise(function (resolve, reject) {\n        var oReq = new XMLHttpRequest();\n        // oReq.responseType = 'json'; ie11 compatibility\n        oReq.open(method, url, true);\n        oReq.responseType = \"json\";\n        oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\n        oReq.onload = function () {\n            if (oReq.status >= 200 && oReq.status < 300) {\n                if (_helper_js__WEBPACK_IMPORTED_MODULE_0__.isIE11browser) { //ie11 compatibility\n                    let res = JSON.parse(oReq.response);\n                    resolve(res);\n                } else {\n                    let res = JSON.stringify(oReq.response);\n                    res = JSON.parse(res);\n                    resolve(res);\n                }\n            } else {\n                reject({\n                    status: oReq.status,\n                    statusText: oReq.statusText\n                });\n            }\n        };\n        oReq.onerror = function () {\n            reject({\n                status: oReq.status,\n                statusText: oReq.statusText\n            });\n        };\n        oReq.send(JSON.stringify(data));\n    });\n}\n\nfunction downloadFile(url, method, data = null) {\n    let oReq = new XMLHttpRequest();\n    oReq.open(method, url, true);\n    oReq.responseType = \"blob\";\n    oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n    oReq.onload = function (event) {\n        let blob = oReq.response;\n        let filename = '';\n        let disposition = oReq.getResponseHeader('Content-Disposition');\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n            let filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            let matches = filenameRegex.exec(disposition);\n            if (matches != null && matches[1]) {\n                filename = matches[1].replace(/['\"]/g, '');\n            }\n        }\n\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = decodeURI(filename);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    };\n    oReq.onerror = function (event) {\n        console.log(event);\n    };\n\n    oReq.send(JSON.stringify(data));\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/cps-portal-dao.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/helper.js":
/*!*************************************************!*\
  !*** ./resources/js/cps_portal_table/helper.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addCSRF\": function() { return /* binding */ addCSRF; },\n/* harmony export */   \"changePageTitle\": function() { return /* binding */ changePageTitle; },\n/* harmony export */   \"getRole\": function() { return /* binding */ getRole; },\n/* harmony export */   \"isIE11browser\": function() { return /* binding */ isIE11browser; }\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n\n\nfunction changePageTitle(page_title) {\n    document.getElementById('page-title').textContent = page_title;\n    document.title = page_title;\n}\n\nfunction addCSRF(objectData) {\n    let CSRF = document.getElementsByName('csrf-token')[0].getAttribute('content');\n    if (CSRF !== undefined && CSRF !== \"\") {\n        objectData._token = CSRF;\n        return objectData;\n    }\n}\n\nfunction isIE11() {\n    let ua = window.navigator.userAgent;\n    return ua.indexOf('Trident/') > 0;\n};\n\nfunction getRole() {\n    return (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getUserRole, 'GET')\n}\n\n\nconst isIE11browser = isIE11();\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/helper.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/lists.js":
/*!************************************************!*\
  !*** ./resources/js/cps_portal_table/lists.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lists\": function() { return /* binding */ lists; }\n/* harmony export */ });\nlet lists = {\n    buildings: {\n        area: [\n            'ГП',\n            'Ямбург',\n            'ПС САП',\n            'Новый Уренгой',\n        ],\n        group_1: undefined,\n        group_2: undefined,\n        queue: [\n            '',\n            '1',\n            '2',\n        ],\n        affiliate: [],\n        aud_warn_type: [\n            '1',\n            '2',\n            '3',\n        ],\n        type_aups: [\n            'АСПС',\n            'АСПТ',\n            'АСПС, АСПТ',\n            'Противопожарный водопровод',\n            'СОУЭ',\n        ],\n        categ_asu: [\n            '1',\n            '2',\n            '3',\n        ],\n        planGraf: [],\n    },\n    equipment: {\n        measure: ['км.', 'шт.'],\n        kind_signal:\n            ['', 'УД', 'ИД', 'УА', 'ИА', 'ИУЦ'],\n        kind_app:\n            [\n                'Оповещатель',\n                'Извещатель',\n                'ППК, и его переферия',\n                'Бокс, коробка, щит, шкаф, ящик',\n                'Питание',\n                'Лучи (шлейфа)',\n                'Оборудование КИПиА',\n                'Пожаротушение',\n                'Реле',\n                'Система речевого оповещения',\n                'Кабель',\n                'Прочее оборудование',\n            ],\n        kind_app_second:\n            [\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Бокс'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Колодка'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Коробка'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Корпус'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Щиты, шкафы'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Ящик'},\n                {kind_app: 'Извещатель', kind_app_second: 'Аналоговый'},\n                {kind_app: 'Извещатель', kind_app_second: 'Блок дистанционного ручного пуска'},\n                {kind_app: 'Извещатель', kind_app_second: 'Весовые устройства баллонов'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дискретный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой автономный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой адресный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Извещатель комбинированый'},\n                {kind_app: 'Извещатель', kind_app_second: 'Извещатель охранный'},\n                {kind_app: 'Извещатель', kind_app_second: 'ИК, УФ пламени'},\n                {kind_app: 'Извещатель', kind_app_second: 'Кнопка'},\n                {kind_app: 'Извещатель', kind_app_second: 'Кнопка КУ'},\n                {kind_app: 'Извещатель', kind_app_second: 'Концевик'},\n                {kind_app: 'Извещатель', kind_app_second: 'Расход'},\n                {kind_app: 'Извещатель', kind_app_second: 'Ручник'},\n                {kind_app: 'Извещатель', kind_app_second: 'Сигнализатор давления'},\n                {kind_app: 'Извещатель', kind_app_second: 'Сигнализатор уровня'},\n                {kind_app: 'Извещатель', kind_app_second: 'Тепловой'},\n                {kind_app: 'Извещатель', kind_app_second: 'Тепловой ДПС'},\n                {kind_app: 'Кабель', kind_app_second: 'Кабель'},\n                {kind_app: 'Лучи (шлейфа)', kind_app_second: 'Лучи (шлейфа)'},\n                {kind_app: 'Оборудование КИПиА', kind_app_second: 'Манометр'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Арматура светосигнальная'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Звонок громкого боя'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Звуковой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'ИК, УФ пламени'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Оповещател'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Светильник'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Световой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Светозвуковой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Сирена'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Табло'},\n                {kind_app: 'Питание', kind_app_second: 'Аккумулятор'},\n                {kind_app: 'Питание', kind_app_second: 'Блок питания'},\n                {kind_app: 'Питание', kind_app_second: 'Бокс'},\n                {kind_app: 'Питание', kind_app_second: 'Кнопка'},\n                {kind_app: 'Питание', kind_app_second: 'Питание'},\n                {kind_app: 'Питание', kind_app_second: 'Фильтр сетевой'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Баллоны'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Весовые устройства баллонов'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Модуль газового пожаротушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Направления тушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Пиропатроны'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Пожаротушение'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Сигнализатор давления'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Сигнализатор уровня'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Установка аэрозольного ПТ'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Устройство пожаротушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Электромагнитный клапан'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Адресный расширитель'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'АРМ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас пульт оператора'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас устройство ретрансляции'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Блок индикации'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Блок сигнально-пусковой'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Интерфейс'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Контроллер'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Контрольно-пусковой блок'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'МПКЗ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Приборы приёмно-контрольные'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'ПСУ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Пульт'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Составная чать ППК'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'УКЛСиП'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'УПИ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Фобос'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Автоматический выключатель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Альбатрос'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Аналоговый  ввод-вывод'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'База'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Блок зажимов'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Блок сигнализации БС'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Дискретный'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Дискретный ввод-вывод'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Заземление'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Звуковой'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Интерфейс'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Карта пямяти'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Конденсатор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Концевик'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Лампа'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Модуль расширения'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Плата с радиоэлементами'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Предохранитель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Привод'},\n                {\n                    kind_app: 'Прочее оборудование',\n                    kind_app_second: 'Промежуточные устройства типа ПИО, АСБ, УКЛСиП, МК…ИК, БИВ (УПКОП), Альбатрос, ПИМ, ВУОС, УКШ'\n                },\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Процессор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Прочее оборудовани'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Пускатель магнитный'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Резистор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Светильник'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Считыватель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Транспордер'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Устройство молниезащиты'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'часы'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Электромагнитный клапан'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Термостат'},\n                {kind_app: 'Реле', kind_app_second: 'Реле'},\n                {kind_app: 'Реле', kind_app_second: 'УК-ВК'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Громкоговоритель'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Звуковой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Комплекс аппаратуры оповещения о пожаре'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Контроллер'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Микрофон'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Оповещатель речевой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Плата с радиоэлементами'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Проигрыватель'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Селектор'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Система речевого оповещения'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Тюнер'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Усилитель звуковой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Устройство трансляционное'},\n            ],\n    }\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/lists.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/modal-aggrid.js":
/*!*******************************************************!*\
  !*** ./resources/js/cps_portal_table/modal-aggrid.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ModalAggrid; }\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n\n\nclass ModalAggrid {\n    gridOptions;\n    getDataUrl;\n    agName;\n    textBoxFilter;\n    targetId = 'modal-aggrid';\n\n    constructor(gridOptions, getDataUrl, agName) {\n        this.gridOptions = gridOptions;\n        this.getDataUrl = getDataUrl;\n        this.agName = agName;\n        this.renderAgGrid();\n    }\n\n    renderAgGrid() {\n        this.prepareHtml();\n        new agGrid.Grid(document.getElementById(this.targetId), this.gridOptions);\n        this.setGridData();\n    }\n\n    prepareHtml() {\n        let pageContentHtml = document.getElementById(this.targetId);\n        pageContentHtml.innerHTML = \"\";\n        pageContentHtml.style.width = '100%'\n        pageContentHtml.classList.add('ag-theme-alpine');\n    }\n\n    getSelectedRow() {\n        let selectedRows = this.gridOptions.api.getSelectedRows()\n        if (selectedRows.length > 0) {\n            return selectedRows[0];\n        }\n    }\n\n    setGridData() {\n        (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.getDataUrl, 'GET').then((data) => {\n            if (data === null) {\n                throw 'setGridData data is null';\n            }\n            this.gridOptions.api.setRowData(data);\n        });\n    }\n\n    setFilterTextBox() {\n        this.textBoxFilter.addEventListener('input', () => {\n            this.gridOptions.api.setQuickFilter(\n                this.textBoxFilter.value\n            );\n        });\n    }\n\n    resetFilter() {\n        this.gridOptions.api.setQuickFilter(\"\");\n    }\n\n}\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/modal-aggrid.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/modal.js":
/*!************************************************!*\
  !*** ./resources/js/cps_portal_table/modal.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ModalForm; }\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-aggrid.js */ \"./resources/js/cps_portal_table/modal-aggrid.js\");\n/* harmony import */ var _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag-grid-parameters */ \"./resources/js/cps_portal_table/ag-grid-parameters.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\n\n\n\n\n\nclass ModalForm {\n    actionMenu;\n    tableAgGrid;\n    modalTableAgGrid;\n    agBuildingId;\n    agBuildingName;\n    modalHtml = {};\n    ui = {\n        modalForm: {\n            caption: document.getElementById('modal__caption'),\n            modal: document.getElementById('modal__new-entry'),\n            modalBody: document.querySelector('.modal__form__body'),\n            form: document.getElementById('form__new-entry'),\n            error: document.getElementById('form__error'),\n            listsArea: undefined,\n            group_1: undefined,\n            group_2: undefined,\n            kind_app: undefined,\n            kind_app_second: undefined,\n\n        },\n        modalContainer: document.querySelector('.modal-container'),\n        showModalButton: document.querySelector('.new-table-row'),\n        modalDialog: document.querySelector('.modal-dialog'),\n        requestUrl: undefined,\n        requestMethod: 'POST',\n    };\n\n    constructor() {\n        this.initiateModalHtml();\n    }\n\n    modalformWithTexboxesCallback = event => {\n        let _this = this;\n        event.preventDefault();\n        let inputValues = _this.getInputsArr();\n        (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_this.ui.modalForm.requestUrl, 'POST', inputValues).then((e) => {\n            _this._hideError();\n            _this.hideModal();\n            event.target.reset();\n            _this.tableAgGrid.setGridData(e.id);\n            _this.actionMenu.hideAllOneRowAction();\n        }).catch((e) => {\n            _this._hideError();\n            _this._showError(e);\n        });\n    }\n\n    modalformWithGridCallback = event => {\n        let _this = this;\n        event.preventDefault();\n        let selectedRow = _this.modalTableAgGrid.getSelectedRow();\n        if (selectedRow === undefined) {\n            this._hideError();\n            let massage = {}\n            massage.status = 'ошибка ввода'\n            massage.statusText = 'прибор не выбран'\n            this._showError(massage);\n            return;\n        }\n        let equipmentId = selectedRow.id;\n        let requestBody = {};\n        requestBody.id_equip = equipmentId;\n        let requestUrl = _this.ui.modalForm.requestUrl\n        if (_this.ui.modalForm.requestMethod === 'POST') {\n            if (document.querySelector('#quantity') !== null) {\n                requestBody.quantity = document.querySelector('#quantity').value;\n                if (parseFloat(document.querySelector('#quantity').value) === 0) {\n                    this._hideError();\n                    let massage = {}\n                    massage.status = 'ошибка ввода'\n                    massage.statusText = 'количество равно 0!'\n                    this._showError(massage);\n                    return;\n                }\n            }\n\n            if (document.querySelector('#measure') !== null) {\n                requestBody.measure = document.querySelector('#measure').value;\n            }\n            if (document.querySelector('#equip_name') !== null) {\n                requestBody.equip_name = document.querySelector('#equip_name').value;\n            }\n            if (document.querySelector('#brand_name') !== null) {\n                requestBody.brand_name = document.querySelector('#brand_name').value;\n            }\n            if (_this.agBuildingId !== null) {\n                requestBody.id_build = _this.agBuildingId;\n            }\n        }\n        if (_this.ui.modalForm.requestMethod === 'PUT') {\n            let selectedRowEquipInBuilding = _this.tableAgGrid.getSelectedRow();\n            let buildEquipId = selectedRowEquipInBuilding.id;\n            requestBody.id_build = selectedRowEquipInBuilding.id_build;\n            requestBody.quantity = selectedRowEquipInBuilding.quantity;\n            requestBody.measure = selectedRowEquipInBuilding.measure;\n            requestBody.equip_year = selectedRowEquipInBuilding.equip_year;\n            requestBody.equip_comments = selectedRowEquipInBuilding.equip_comments;\n            requestUrl = requestUrl + '/' + buildEquipId;\n        }\n        requestBody = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestBody);\n        (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(requestUrl, _this.ui.modalForm.requestMethod, requestBody).then((e) => {\n            _this._hideError();\n            _this.hideModal();\n            event.target.reset();\n            _this.modalTableAgGrid.resetFilter();\n            _this.tableAgGrid.idToScroll = e.id;\n\n            _this.tableAgGrid.setGridData();\n            _this.actionMenu.hideAllOneRowAction();\n        }).catch((e) => {\n            _this._hideError();\n            _this._showError(e);\n            console.log(e);\n        })\n    }\n\n    deleteAllSubmitModalFormHandler() {\n        this.ui.modalForm.form.removeEventListener('submit', this.modalformWithTexboxesCallback);\n        this.ui.modalForm.form.removeEventListener('submit', this.modalformWithGridCallback);\n    }\n\n    setFormWithTexboxesSubmitHandler() {\n        this.deleteAllSubmitModalFormHandler();\n        this.ui.modalForm.form.addEventListener('submit', this.modalformWithTexboxesCallback);\n    }\n\n    setFormWithGridSubmitHandler() {\n        this.deleteAllSubmitModalFormHandler();\n        this.ui.modalForm.form.addEventListener('submit', this.modalformWithGridCallback);\n    }\n\n    _showError(message) {\n        if (message.status === 409) {\n            this.ui.modalForm.error.innerHTML += 'Ошибка: прибор в этом здании уже существует';\n            this.ui.modalForm.error.classList.remove('d-none');\n            return;\n        }\n        this.ui.modalForm.error.innerHTML += 'Ошибка: ' + message.status + ' | ' + message.statusText + ' | ' + message.data;\n        this.ui.modalForm.error.classList.remove('d-none');\n    }\n\n    _hideError() {\n        this.ui.modalForm.error.innerHTML = '';\n        this.ui.modalForm.error.classList.add('d-none');\n    }\n\n    getInputsArr() {\n        let data = {};\n        let formData = $('#form__new-entry').serializeArray();\n        console.log(formData)\n        formData.forEach(function (arrayItem) {\n            if (arrayItem.value !== '') {\n                data[arrayItem.name] = arrayItem.value;\n            }\n        });\n        data = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(data);\n        return data;\n    }\n\n    hideModal() {\n        // let modal = bootstrap.Modal.getInstance(this.ui.modalForm.modal)\n        // modal.hide()\n        $('#modal__new-entry').modal('hide');//ie11 compatibility\n    }\n\n\n    createModalEquipStateList(data) {\n        let selectHtml = '';\n        data.forEach(elementState => {\n            selectHtml += `<option>` + elementState.state + `</option>`\n        });\n        document.getElementById('state_tech_condition').innerHTML = selectHtml;\n    }\n\n    setModalWorkersFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить работника';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewWorker;\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers;\n    }\n\n\n    setModalCpsBuildingsFormHtmlListsListeners() {\n        this.ui.modalForm.listsArea = document.getElementById('area');\n        this.ui.modalForm.group_1 = document.getElementById('group_1');\n        this.ui.modalForm.group_2 = document.getElementById('group_2');\n        this.ui.modalForm.group_1.disabled = true;\n        this.ui.modalForm.group_2.disabled = true;\n        let listsAreaSelectedValue = '';\n        let listsGroup_1SelectedValue = '';\n\n        this.ui.modalForm.listsArea.addEventListener(\"change\", (event) => {\n            this.ui.modalForm.group_2.required = true;\n            this.ui.modalForm.group_1.disabled = false;\n            this.ui.modalForm.group_2.disabled = true;\n            listsAreaSelectedValue = this.ui.modalForm.listsArea.value;\n            this.removeOptions(this.ui.modalForm.group_1);\n            this.ui.modalForm.group_1.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_1.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue) {\n                    this.ui.modalForm.group_1.add(new Option(elem.group_1, elem.group_1));\n                }\n            });\n        });\n\n        this.ui.modalForm.group_1.addEventListener(\"change\", () => {\n            this.ui.modalForm.group_2.required = true;\n            this.ui.modalForm.group_2.disabled = false;\n            listsGroup_1SelectedValue = this.ui.modalForm.group_1.value;\n            this.removeOptions(this.ui.modalForm.group_2);\n            this.ui.modalForm.group_2.add(new Option('', ''));\n            let group2Count = 0;\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_2.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue && elem.group_1 === listsGroup_1SelectedValue) {\n                    this.ui.modalForm.group_2.add(new Option(elem.group_2, elem.group_2));\n                    group2Count++;\n                }\n            });\n            if (group2Count === 0) {\n                this.ui.modalForm.group_2.required = false;\n            }\n        });\n    }\n\n    removeOptions(selectElement) {\n        let i, L = selectElement.options.length - 1;\n        for (i = L; i >= 0; i--) {\n            selectElement.remove(i);\n        }\n    }\n\n    setModalCpsBuildingsFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить здание';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewBuilding;\n        this.setModalCpsBuildingsFormHtmlListsListeners();\n        this.setFormWithTexboxesSubmitHandler();\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings;\n    }\n\n    setModalCpsEquipmentFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить оборудование';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewEquipment;\n        this.modalTableAgGrid = new _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getEquipmentALl, _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.agName);\n        this.modalTableAgGrid.textBoxFilter = document.querySelector('#equip_search');\n        this.modalTableAgGrid.setFilterTextBox();\n        this.ui.modalForm.requestMethod = \"POST\";\n        this.setFormWithGridSubmitHandler();\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteEquipment;\n    }\n\n    setModalNewEquipmentInBuildingHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить оборудование в ' + this.agBuildingName;\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewEquipmentInBuilding;\n        document.querySelector('#quantity').addEventListener('input', this.validateNumberWithDot);\n        this.modalTableAgGrid = new _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getEquipmentALl, _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.agName);\n        this.modalTableAgGrid.textBoxFilter = document.querySelector('#equip_search');\n        this.modalTableAgGrid.setFilterTextBox();\n        this.ui.modalForm.requestMethod = \"POST\";\n        this.setFormWithGridSubmitHandler();\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding;\n    }\n\n\n\n    setModalPutEquipmentInBuildingHtml() {\n        let selectedRow = this.tableAgGrid.getSelectedRow();\n        let equipmentName = selectedRow.equip_name;\n        this.ui.modalForm.caption.innerHTML = 'Заменить ' + equipmentName + ' в ' + this.agBuildingName + ' на';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalPutEquipmentInBuilding;\n        this.modalTableAgGrid = new _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getEquipmentALl, _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.agName);\n        this.modalTableAgGrid.textBoxFilter = document.querySelector('#equip_search');\n        this.modalTableAgGrid.setFilterTextBox();\n        this.ui.modalForm.requestMethod = \"PUT\";\n        this.setFormWithGridSubmitHandler();\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding;\n    }\n\n    validateNumberWithDot(e) {\n        let text = e.target.value;\n        let regText = text.match(/^[0-9]+\\.?[0-9]*$/);\n        if (regText === null) {\n            e.target.value = text.slice(0, -1);\n        } else {\n            e.target.value = regText[0];\n        }\n    }\n\n    makeOptionsFromArray(arr) {\n        let options;\n        options = options + '<option value=\"\"></option>';\n        arr.forEach((elem) => {\n            options = options + '<option value=\"' + elem + '\">' + elem + '</option>';\n        });\n        return options;\n    }\n\n    initiateModalHtml() {\n        this.modalHtml.modalNewEquipmentInBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"equip_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_search\"  name=\"equip_search\">\n                            </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>\n                        <div class=\"d-flex justify-content-around\">\n                            <div class=\"p-2\">\n                                <label for=\"quantity\" class=\"col-form-label\">Количество</label>\n                            </div>\n                            <div class=\"p-2\">\n                                 <input type=\"text\" class=\"form-control\" id=\"quantity\" required name=\"quantity\">\n                            </div>\n                            <div class=\"p-2\">\n                                <label for=\"measure\" class=\"col-form-label\">Мера</label>\n                            </div>\n                            <div class=\"p-2\">\n                                 <select class=\"form-control\" id=\"measure\" required name=\"measure\">\n                                    <option value=\"шт.\">шт.</option>\n                                    <option value=\"км.\">км.</option>\n                                 </select>\n                            </div>\n                        </div>\n                        `;\n\n        this.modalHtml.modalPutEquipmentInBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"equip_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_search\"  name=\"equip_search\">\n                            </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>`;\n        this.modalHtml.modalNewWorker = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fio\" class=\"col-form-label\">Ф.И.О.</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"fio\" required name=\"fio\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"tab_nom\" class=\"col-form-label\">Тебельный N</label>\n                            </div>\n                            <div class=\"col-9\">\n                                <input type=\"text\" class=\"form-control\" id=\"tab_nom\" required name=\"tab_nom\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"worker_position\" class=\"col-form-label\">Должность</label>\n                            </div>\n                            <div class=\"col-9\">\n                                <input type=\"text\" class=\"form-control\" id=\"worker_position\" name=\"worker_position\">\n                            </div>\n                        </div>`;\n        this.modalHtml.modalNewBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"area\" class=\"col-form-label\">Участок</label>\n                            </div>\n                            <div class=\"col-9\">\n                              <select class=\"form-control\" id=\"area\" required name=\"area\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.area) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"group_1\" class=\"col-form-label\">Группа</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"group_1\" required name=\"group_1\">\n                                 </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"group_2\" class=\"col-form-label\">Подгруппа</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"group_2\" required name=\"group_2\">\n                                 </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"shed\" class=\"col-form-label\">Здание</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"shed\" required name=\"shed\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"Queue\" class=\"col-form-label\">Очередь</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"queue\"  name=\"queue\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.queue) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"affiliate\" class=\"col-form-label\">Филиал</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"affiliate\" required name=\"affiliate\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.affiliate) +\n            `\n                                 </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"proj\" class=\"col-form-label\">Проект</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"proj\" required name=\"proj\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"proj_year\" class=\"col-form-label\">Проект год </label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"number\" class=\"form-control\" id=\"proj_year\" required name=\"proj_year\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fitt\" class=\"col-form-label\">Монтаж</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"fitt\" required name=\"fitt\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fitt_year\" class=\"col-form-label\">Монтаж год</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"number\" class=\"form-control\" id=\"fitt_year\" required name=\"fitt_year\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"type_aups\" class=\"col-form-label\">ТипАУПС</label>\n                            </div>\n                            <div class=\"col-9\">\n                               <select class=\"form-control\" id=\"type_aups\" required name=\"type_aups\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.type_aups) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"aud_warn_type\" class=\"col-form-label\">типСОУЭ</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"aud_warn_type\" required name=\"aud_warn_type\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.aud_warn_type) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"categ_asu\" class=\"col-form-label\">Категоря сложности АСУ</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"categ_asu\" required name=\"categ_asu\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.categ_asu) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"plan_graf_name\" class=\"col-form-label\">ПланГрафик</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"plan_graf_name\" required name=\"plan_graf_name\"\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.planGraf) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        `;\n        this.modalHtml.modalNewEquipment = `\n                        <div class=\"col-9\">\n                             <div>Выберите наиболее похожий прибор из существующих:</div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"equip_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_search\"  name=\"equip_search\">\n                            </div>\n                        </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"equip_name\" class=\"col-form-label\">Название нового прибора</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_name\" required name=\"equip_name\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"brand_name\" class=\"col-form-label\">Производитель</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"brand_name\" required name=\"brand_name\">\n                            </div>\n                        </div>\n                        `;\n    }\n}\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/modal.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/side-bar.js":
/*!***************************************************!*\
  !*** ./resources/js/cps_portal_table/side-bar.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SideBar; }\n/* harmony export */ });\n/* harmony import */ var _aggrid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aggrid.js */ \"./resources/js/cps_portal_table/aggrid.js\");\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag-grid-parameters.js */ \"./resources/js/cps_portal_table/ag-grid-parameters.js\");\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.js */ \"./resources/js/cps_portal_table/app.js\");\n\n\n\n\n\n\n\nclass SideBar {\n    tableAgGrid;\n    actionMenu;\n    modalForm;\n    reportList;\n    menuPlanGraf;\n\n    setButtonsVision() {\n        if (_app_js__WEBPACK_IMPORTED_MODULE_4__.userRole === \"super-user\") {\n            document.querySelector('.sidebar__edit-equip').hidden = false;\n            document.querySelector('.sidebar__edit-buildings').hidden = false;\n            document.querySelector('.sidebar__export-reports').hidden = false;\n            document.querySelector('.sidebar__export-plan_grafici').hidden = false;\n            document.querySelector('.sidebar__edit-plan_grafici').hidden = false;\n            document.querySelector('.sidebar__edit-equip-in-building').hidden = false;\n        } else {\n            document.querySelector('.sidebar__edit-equip-in-building').hidden = false;\n            document.querySelector('.sidebar__edit-plan_grafici').hidden = false;\n        }\n    }\n\n    setButtonsActions() {\n        document.getElementById('sidebarCollapse').onclick = () => {\n            document.getElementById('sidebar').classList.toggle(\"active\");\n        };\n\n        document.querySelector('.sidebar__edit-staff').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.workersParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWorkersALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteWorkers,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.workersParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.modalForm.setModalWorkersFormHtml();\n            this.actionMenu.showPlusAndExcelButton();\n            this.modalForm.setFormWithTexboxesSubmitHandler();\n            if (this.menuPlanGraf !== undefined) {\n                this.menuPlanGraf.remove();\n            }\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Работники\");\n        };\n\n        document.querySelector('.sidebar__edit-fire_instr').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.fireInstrParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWorkersALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteWorkers,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.fireInstrParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.showExcelButton();\n            this.actionMenu.setFireExamPlusSixAction();\n            this.modalForm.setFormWithTexboxesSubmitHandler();\n            this.removeMenuPlanGraf();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Пожинструктаж\");\n        };\n\n        document.querySelector('.sidebar__edit-equip-in-building').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.showExcelButton();\n            this.actionMenu.setEditInnerAction();\n            this.actionMenu.setReturnToBuildingsAction();\n            this.removeMenuPlanGraf();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Оборудование в здании\");\n        };\n\n        document.querySelector('.sidebar__edit-equip').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getEquipmentALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteEquipment,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.setAddButtonActionForNewEquipment();\n            this.actionMenu.showPlusAndExcelButton();\n            this.removeMenuPlanGraf();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Оборудование\");\n        };\n\n        document.querySelector('.sidebar__edit-buildings').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.setAddButtonActionForNewBuilding();\n            this.actionMenu.showPlusAndExcelButton();\n            this.actionMenu.setExportPassportAction();\n            this.removeMenuPlanGraf();\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Здания\");\n        };\n\n        document.querySelector('.sidebar__export-reports').onclick = () => {\n            this.actionMenu.hideALl();\n            const pageContent = document.querySelector('#page-content');\n            while (pageContent.firstChild) {\n                pageContent.removeChild(pageContent.firstChild);\n            }\n            this.reportList = document.createElement('ul');\n            pageContent.appendChild(this.reportList);\n\n            this.addLinkToReports(\"Нормы запаса КИПиСА\", _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getExportNormiZapasaKip);\n            this.addLinkToReports(\"Потребность МТР\", _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getExportPotrebnostMtr);\n            this.addLinkToReports(\"Все данные\", _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getExportAllData);\n            this.addLinkToReports(\"Отказы извещателей \", _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getExportOtkaziIzveshatelei);\n            this.removeMenuPlanGraf();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Отчеты\");\n        };\n\n        document.querySelector('.sidebar__export-plan_grafici').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsPlanGrafikParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsPlanGraf, null,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsPlanGrafikParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.setExportPlanGrafAction();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"План-графики экспорт\");\n            this.insertPlanGrafMenu();\n        };\n        document.querySelector('.sidebar__edit-plan_grafici').onclick = () => {\n            this.tableAgGrid = new _aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsPlanGrafParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsPlanGrafOrderedByPlGrafNumb, null,\n                _ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsPlanGrafParameters.agName, this.actionMenu);\n            this.actionMenu.tableAgGrid = this.tableAgGrid;\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.actionMenu.setEditInnerMonthAction();\n            this.actionMenu.setEditSequencePlanGrafAction();\n            this.removeMenuPlanGraf();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"План-графики редактирование\");\n        };\n    }\n\n    removeMenuPlanGraf() {\n        if (this.menuPlanGraf !== undefined) {\n            this.menuPlanGraf.remove();\n        }\n    }\n\n    insertPlanGrafMenu() {\n        const pageContent = document.querySelector('.app-container');\n        this.menuPlanGraf = document.createElement('div');\n        this.menuPlanGraf.setAttribute(\"id\", \"menuPlanGraf\");\n        this.menuPlanGraf.innerHTML = `\n                    <div class=\"d-inline\">\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"year_pl_gr\" class=\"col-form-label\">Год</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"year_pl_gr\" required  name=\"year_pl_gr\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_approve_fio\" class=\"col-form-label\">Утвердил ФИО</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"who_approve_fio\" required  name=\"who_approve_fio\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_approve_position\" class=\"col-form-label\">Утвердил Должность</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"who_approve_position\" required  name=\"who_approve_position\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_assign_fio\" class=\"col-form-label\">Составл ФИО</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"who_assign_fio\"  required name=\"who_assign_fio\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_assign_position\" class=\"col-form-label\">Подписал Должность</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"who_assign_position\" required text=\"Зам.нач. цеха\" name=\"who_assign_position\">\n                            </div>\n                        </div>\n                    </div>\n            `\n        pageContent.prepend(this.menuPlanGraf);\n        document.querySelector('#year_pl_gr').value = \"2024\";\n        document.querySelector('#who_approve_fio').value = \"М.А. Баязитов\";\n        document.querySelector('#who_approve_position').value = \"Зам.нач. цеха\";\n        document.querySelector('#who_assign_fio').value = \"М.А. Баязитов\";\n        document.querySelector('#who_assign_position').value = \"Зам.нач. цеха\";\n    }\n\n    addLinkToReports(linkName, LinkURL) {\n        let exportTestLiTag = document.createElement('li');\n        exportTestLiTag.classList.add(\"export_list-item\");\n        this.reportList.appendChild(exportTestLiTag);\n        let exportTestAtag = document.createElement('a');\n        exportTestLiTag.appendChild(exportTestAtag);\n\n        exportTestAtag.innerText = linkName;\n        exportTestAtag.href = LinkURL;\n    }\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/side-bar.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/cps_portal_table/app.js");
/******/ 	
/******/ })()
;
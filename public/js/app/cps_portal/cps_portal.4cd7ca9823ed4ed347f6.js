/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/cps_portal_table/action-menu.js":
/*!******************************************************!*\
  !*** ./resources/js/cps_portal_table/action-menu.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActionMenu)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./page_content/ag-grid-parameters.js */ \"./resources/js/cps_portal_table/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/aggrid */ \"./resources/js/cps_portal_table/page_content/aggrid.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app */ \"./resources/js/cps_portal_table/app.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\n\n\n\n\n\n\nclass ActionMenu {\n    tableAgGrid;\n    modalForm;\n    newTableRow;\n    deleteTableRow;\n    deleteAction;\n    exportExcel;\n    exportPassport;\n    exportPlanGraf;\n    checkPlusSix;\n    checkPlusThree;\n    checkPlusTwelve;\n    innerEquipment;\n    agBuildingId;\n    agBuildingName;\n    agBuildingFilterState;\n    editTableRow;\n    returnBack;\n    addButtonActionEventLister;\n    copyEquipToBuildingEventLister;\n    innerMonth;\n    planGrafSequence;\n    arrangePlanGrafSequence;\n    modalPutEquipmentInBuildingHtml;\n    returnButtonAction;\n    cashedAgGridBuildings;\n    equipUsage;\n    copyEquipOfBuilding;\n    jsonExport;\n    tepExport;\n    importReminds;\n    copyPathToProject;\n\n\n    hideALl() {\n        this.newTableRow.style.display = 'none';\n        this.deleteTableRow.style.display = 'none';\n        this.exportExcel.style.display = 'none';\n        this.checkPlusThree.style.display = 'none';\n        this.checkPlusSix.style.display = 'none';\n        this.checkPlusTwelve.style.display = 'none';\n        this.innerEquipment.style.display = 'none';\n        this.editTableRow.style.display = 'none';\n        this.returnBack.style.display = 'none';\n        this.exportPassport.style.display = 'none';\n        this.exportPlanGraf.style.display = 'none';\n        this.innerMonth.style.display = 'none';\n        this.planGrafSequence.style.display = 'none';\n        this.arrangePlanGrafSequence.style.display = 'none';\n        this.equipUsage.style.display = 'none';\n        this.copyEquipOfBuilding.style.display = 'none';\n        this.jsonExport.style.display = 'none';\n        this.tepExport.style.display = 'none';\n        this.importReminds.style.display = 'none';\n        this.copyPathToProject.style.display = 'none';\n    }\n\n    showCopyPathToProjectButton() {\n        this.copyPathToProject.style.display = 'block';\n    }\n\n    hideImportRemindsButton() {\n        this.importReminds.style.display = 'none';\n    }\n\n    showImportRemindsButton() {\n        this.importReminds.style.display = 'block';\n    }\n\n    hideTepExportButton() {\n        this.tepExport.style.display = 'none';\n    }\n\n    showTepExportButton() {\n        this.tepExport.style.display = 'block';\n    }\n\n    hideJsonExportButton() {\n        this.jsonExport.style.display = 'none';\n    }\n\n    showJsonExportButton() {\n        this.jsonExport.style.display = 'block';\n    }\n\n    hideCopyEquipOfBuildingButton() {\n        this.copyEquipOfBuilding.style.display = 'none';\n    }\n\n    showCopyEquipOfBuildingButton() {\n        this.copyEquipOfBuilding.style.display = 'block';\n    }\n\n    hideEquipUsageButton() {\n        this.equipUsage.style.display = 'none';\n    }\n\n    showEquipUsageButton() {\n        this.equipUsage.style.display = 'block';\n    }\n\n    hideArrangePlanGrafSequenceButton() {\n        this.arrangePlanGrafSequence.style.display = 'none';\n    }\n\n    showArrangePlanGrafSequenceButton() {\n        this.arrangePlanGrafSequence.style.display = 'block';\n    }\n\n    hidePlanGrafSequenceMonthButton() {\n        this.planGrafSequence.style.display = 'none';\n    }\n\n    showPlanGrafSequenceButton() {\n        this.planGrafSequence.style.display = 'block';\n    }\n\n    hideInnerMonthButton() {\n        this.innerMonth.style.display = 'none';\n    }\n\n    showInnerMonthButton() {\n        this.innerMonth.style.display = 'block';\n    }\n\n    hidePlanGrafButton() {\n        this.exportPlanGraf.style.display = 'none';\n    }\n\n    showPlanGrafButton() {\n        this.exportPlanGraf.style.display = 'block';\n    }\n\n    hidePassportButton() {\n        this.exportPassport.style.display = 'none';\n    }\n\n    showPassportButton() {\n        this.exportPassport.style.display = 'block';\n    }\n\n    showExcelButton() {\n        this.exportExcel.style.display = 'block';\n    }\n\n    showPlusAndExcelButton() {\n        this.newTableRow.style.display = 'block';\n        this.exportExcel.style.display = 'block';\n    }\n\n    showPlusSixButton() {\n        this.checkPlusSix.style.display = 'block';\n    }\n\n    showPlusThreeButton() {\n        this.checkPlusThree.style.display = 'block';\n    }\n\n    showPlusTwelveButton() {\n        this.checkPlusTwelve.style.display = 'block';\n    }\n\n    hidePlusSixButton() {\n        this.checkPlusSix.style.display = 'none';\n    }\n\n    hidePlusThreeButton() {\n        this.checkPlusThree.style.display = 'none';\n    }\n\n    hidePlusTwelveButton() {\n        this.checkPlusTwelve.style.display = 'none';\n    }\n\n    showDelButton() {\n        this.deleteTableRow.style.display = 'block';\n    }\n\n    hideDelButton() {\n        this.deleteTableRow.style.display = 'none';\n    }\n\n    showEditButton() {\n        this.editTableRow.style.display = 'block';\n    }\n\n    hideEditButton() {\n        this.editTableRow.style.display = 'none';\n    }\n\n    showGoToEquipButton() {\n        this.innerEquipment.style.display = 'block';\n    }\n\n    hideGoToEquipButton() {\n        this.innerEquipment.style.display = 'none';\n    }\n\n    showReturnToBuildingsButton() {\n        this.returnBack.style.display = 'block';\n    }\n\n    hideReturnToBuildingsButton() {\n        this.returnBack.style.display = 'none';\n    }\n\n    hideAllOneRowAction() {\n        this.hideDelButton();\n        this.hidePlusSixButton();\n        this.hidePlusThreeButton();\n        this.hidePlusTwelveButton();\n        this.hideEditButton();\n        this.hideGoToEquipButton();\n        this.hidePassportButton();\n        this.hidePlanGrafButton();\n    }\n\n    setExportExcelAction() {\n        this.exportExcel.onclick = () => {\n            this.tableAgGrid.exportDisplyedDataToExcel();\n        };\n    }\n\n    setFireExamPlusSixAction() {\n        this.fireExamPlusSix.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postWorkersAddSixMonth, \"POST\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(selectedRow)).then(() => {\n                this.tableAgGrid.setGridData();\n            }).catch((rejected) => console.log(rejected));\n        }\n    }\n\n    setExportWorkersChecksDatesJsonAction() {\n        this.showJsonExportButton();\n        this.jsonExport.onclick = () => {\n            let downloadLink = document.createElement(\"a\");\n            downloadLink.href = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportAllNextWorkersChecksJson;\n            downloadLink.click();\n        }\n    }\n\n    setEditAndAddEquipOfBuildingButtonActionForNewEquipInBuildingModal() {\n        this.editTableRow.removeEventListener('click', this.modalPutEquipmentInBuildingHtml);\n        this.modalPutEquipmentInBuildingHtml = this.modalForm.setModalPutEquipmentInBuildingHtml.bind(this.modalForm);\n        this.editTableRow.addEventListener('click', this.modalPutEquipmentInBuildingHtml);\n\n        this.newTableRow.removeEventListener('click', this.addButtonActionEventLister);\n        this.addButtonActionEventLister = this.modalForm.setModalNewEquipmentInBuildingHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.addButtonActionEventLister);\n    }\n\n\n    setAddButtonActionForNewEquipment() {\n        this.newTableRow.removeEventListener('click', this.addButtonActionEventLister);\n        this.addButtonActionEventLister = this.modalForm.setModalCpsEquipmentFormHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.addButtonActionEventLister);\n    }\n\n    setAddButtonActionForNewBuilding() {\n        this.newTableRow.removeEventListener('click', this.addButtonActionEventLister);\n        this.addButtonActionEventLister = this.modalForm.setModalCpsBuildingsFormHtml.bind(this.modalForm);\n        this.newTableRow.addEventListener('click', this.addButtonActionEventLister);\n    }\n\n    setCopyEquipToBuildingAction() {\n        this.copyEquipOfBuilding.removeEventListener('click', this.copyEquipToBuildingEventLister);\n        this.copyEquipToBuildingEventLister = this.modalForm.setModalCopyEquipmentToBuildingFormHtml.bind(this.modalForm);\n        this.copyEquipOfBuilding.addEventListener('click', this.copyEquipToBuildingEventLister);\n    }\n\n    importRemindsButtonActionEventLister() {\n        console.log('importRemindsButtonActionEventLister');\n    }\n\n    setImportRemindsAction() {\n        this.importReminds.removeEventListener('click', this.importRemindsButtonActionEventLister);\n        this.importReminds.addEventListener('click', this.importRemindsButtonActionEventLister);\n    }\n\n    setEquipUsageAction() {\n        this.equipUsage.addEventListener('click', () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let equipItemId = selectedRow.id;\n            this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableEquipmentItemBuildingsUsageParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getEquipmentUsage + '/' +\n                equipItemId, undefined, _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableEquipmentItemBuildingsUsageParameters.agName, this);\n            this.hideALl();\n            this.showExcelButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(selectedRow.equip_name + ' используется:');\n        });\n    }\n\n    setEditInnerAction() {\n        this.setEditAndAddEquipOfBuildingButtonActionForNewEquipInBuildingModal();\n        this.innerEquipment.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.agBuildingId = selectedRow.id;\n            this.agBuildingName = selectedRow.shed;\n            this.agBuildingFilterState = this.tableAgGrid.getAgFilterModel();\n            this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.equipmentInBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding + '/' +\n                this.agBuildingId, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.equipmentInBuildingsParameters.agName, this);\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.hideALl();\n            this.showPlusAndExcelButton();\n            this.showReturnToBuildingsButton();\n            this.modalForm.agBuildingName = this.agBuildingName;\n            this.modalForm.agBuildingId = this.agBuildingId;\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)('Здание =>' + selectedRow.group_1 + '=>' + selectedRow.shed + \"=> Оборудование\");\n\n        };\n    }\n\n    setEditInnerMonthAction() {\n        this.innerMonth.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.agBuildingId = selectedRow.id;\n            this.agBuildingFilterState = this.tableAgGrid.getAgFilterModel();\n            this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.tehnObslMonthInBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding + '/' +\n                selectedRow.id, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.tehnObslMonthInBuildingsParameters.agName, this);\n            this.modalForm.tableAgGrid = this.tableAgGrid;\n            this.hideALl();\n            this.showReturnToBuildingsButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)('Здание =>' + selectedRow.group_1 + '=>' + selectedRow.shed + \"=> ТО по месяцам\");\n            this.setReturnToPlanGrafEditingAction();\n        };\n    }\n\n    setEditSequencePlanGrafAction() {\n        this.planGrafSequence.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            this.agBuildingId = selectedRow.id;\n            this.agBuildingFilterState = this.tableAgGrid.getAgFilterModel();\n            this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafSequnceParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsPlanGrafOrderedById + '/' +\n                selectedRow.id, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafSequnceParameters.agName, this);\n            this.showArrangePlanGrafSequenceButton();\n            this.setArrangeBuildingInPlanGrafAction();\n            this.showReturnToBuildingsButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(' Изменение последовательности зданий в план-графике =>' + selectedRow.plan_graf_name);\n            this.setReturnToPlanGrafEditingAction();\n        };\n    }\n\n    setArrangeBuildingInPlanGrafAction() {\n\n        this.arrangePlanGrafSequence.onclick = () => {\n            let requestBody = {};\n            let buildingsSequence = [];\n            this.tableAgGrid.gridOptions.api.forEachNode((rowNode) => {\n                buildingsSequence.push(rowNode.data.id);\n            });\n            requestBody.plan_graf_name = this.tableAgGrid.gridOptions.api.getRowNode(0).data.plan_graf_name;\n            requestBody.buildingsSequence = buildingsSequence;\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.putUpdateBuildingSequenceOfPlanGraf, \"PUT\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestBody)).then(() => {\n                this.tableAgGrid.setGridData();\n            }).catch((rejected) => console.log(rejected));\n        }\n    }\n\n\n    setEditAddEquipOfBuildingButtonActionForNewEquipInBuilding() {\n        this.modalForm.setEditAddEquipOfBuildingButtonActionForNewEquipInBuildingModal();\n    }\n\n    setReturnToBuildingsAction() {\n        this.assignReturnButtonEventListener(this.returnToBuildingsAction);\n    }\n\n    setReturnToPlanGrafEditingAction() {\n        this.assignReturnButtonEventListener(this.returnToPlanGrafEditingAction);\n    }\n\n    assignReturnButtonEventListener(returnButtonActonArg) {\n        if (this.returnButtonAction !== undefined) {\n            this.returnBack.removeEventListener('click', this.returnButtonAction);\n        }\n        this.returnButtonAction = returnButtonActonArg.bind(this);\n        this.returnBack.addEventListener('click', this.returnButtonAction);\n    }\n\n\n    returnToPlanGrafEditingAction() {\n        this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsPlanGrafOrderedByPlGrafNumb, null,\n            _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.buildingsPlanGrafParameters.agName, this, this.agBuildingId,\n            this.agBuildingFilterState, undefined);\n        this.modalForm.tableAgGrid = this.tableAgGrid;\n        this.hideALl();\n        (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(\"План-графики редактирование\");\n    }\n\n    returnToBuildingsAction() {\n        this.tableAgGrid = new _page_content_aggrid__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableBuildingsParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings,\n            _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_2__.agGridParameters.uneditableBuildingsParameters.agName, this, this.agBuildingId,\n            this.agBuildingFilterState, this.cashedAgGridBuildings);\n        this.modalForm.tableAgGrid = this.tableAgGrid;\n        this.hideALl();\n        this.showExcelButton();\n        (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(\"Здания\");\n    }\n\n    setExportPassportAction() {\n        this.exportPassport.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let URL = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportPassport + '/' + selectedRow.id;\n\n            let downloadLink = document.createElement(\"a\");\n            downloadLink.href = URL;\n            downloadLink.click();\n        };\n    }\n\n    setExportTepAction() {\n        this.tepExport.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let URL = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportTep + '/' + selectedRow.id;\n\n            let downloadLink = document.createElement(\"a\");\n            downloadLink.href = URL;\n            downloadLink.click();\n        };\n    }\n\n    setCopyPathToProjectButtonAction() {\n        this.copyPathToProject.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            const pathToRootProjectDirectory = 'smb://srvydc05/caralog/УА/ЦЕХ%20ПС/Проекты/dbproj/'\n            let pathToTheProject = pathToRootProjectDirectory + selectedRow.id;\n            this.unsecuredCopyToClipboard(pathToTheProject);\n        };\n    }\n\n    unsecuredCopyToClipboard(text) {\n        const textArea = document.createElement(\"textarea\");\n        textArea.value = text;\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        try {\n            document.execCommand('copy');\n        } catch (err) {\n            console.error('Unable to copy to clipboard', err);\n        }\n        document.body.removeChild(textArea);\n    }\n\n    setExportPlanGrafAction() {\n        this.exportPlanGraf.onclick = () => {\n            let selectedRow = this.tableAgGrid.getSelectedRow();\n            let requestBody = {};\n            requestBody.plan_graf_name = selectedRow.plan_graf_name;\n            requestBody.year_pl_gr = document.querySelector('#year_pl_gr').value;\n\n            let whoApproveTabNumber = document.querySelector('#who_approve_fio').value\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.workers.all.forEach((worker) => {\n                if (worker.tab_nom === whoApproveTabNumber) {\n                    requestBody.who_approve_fio = worker.fio;\n                    requestBody.who_approve_position = worker.worker_position;\n                }\n            });\n            let whoAssignTabNumber = document.querySelector('#who_assign_fio').value\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.workers.all.forEach((worker) => {\n                if (worker.tab_nom === whoAssignTabNumber) {\n                    requestBody.who_assign_fio = worker.fio;\n                    requestBody.who_assign_position = worker.worker_position;\n                }\n            });\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.downloadFile)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportPlanGrafic, \"POST\", (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestBody));\n        };\n    }\n\n    setPermissions() {\n        this.cashedAgGridBuildings = undefined;\n        if (_app__WEBPACK_IMPORTED_MODULE_4__.userRole !== \"super-user\") {\n            this.cashedAgGridBuildings = _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.all\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/action-menu.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/app.js":
/*!**********************************************!*\
  !*** ./resources/js/cps_portal_table/app.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"userRole\": () => (/* binding */ userRole)\n/* harmony export */ });\n/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action-menu.js */ \"./resources/js/cps_portal_table/action-menu.js\");\n/* harmony import */ var _side_bar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./side-bar.js */ \"./resources/js/cps_portal_table/side-bar.js\");\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal.js */ \"./resources/js/cps_portal_table/modal.js\");\n/* harmony import */ var _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/ag-grid-parameters.js */ \"./resources/js/cps_portal_table/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _idle_timer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./idle-timer */ \"./resources/js/cps_portal_table/idle-timer.js\");\n\n\n\n\n\n\n\n\nlet userRole = '';\n\ngetAllValuesForLists();\n\nfunction init() {\n\n    (0,_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.initializeAgGridParameters)();\n\n    let actionMenu = new _action_menu_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    let modalForm = new _modal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    let sideBar = new _side_bar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    let cashedEquipment = {}\n    //set objects links to each other\n    modalForm.actionMenu = actionMenu;\n    actionMenu.modalForm = modalForm;\n    sideBar.actionMenu = actionMenu;\n    sideBar.modalForm = modalForm;\n    sideBar.pageContent = document.querySelector('#page-content');\n    sideBar.setPermissions();\n    actionMenu.setPermissions();\n    sideBar.setButtonsActions();\n\n    _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.actionMenu = actionMenu;\n\n    //assign links to buttons\n    actionMenu.newTableRow = document.querySelector('.new-table-row');\n    actionMenu.deleteTableRow = document.querySelector('.delete-table-row');\n    actionMenu.exportExcel = document.querySelector('.excel-export');\n    actionMenu.checkPlusThree = document.querySelector('.plus-three-month');\n    actionMenu.checkPlusSix = document.querySelector('.plus-six-month');\n    actionMenu.checkPlusTwelve = document.querySelector('.plus-twelve-month');\n    actionMenu.innerEquipment = document.querySelector('.inner-equip');\n    actionMenu.editTableRow = document.querySelector('.edit-table-row');\n    actionMenu.returnBack = document.querySelector('.return-back');\n    actionMenu.exportPassport = document.querySelector('.excel-export-passport');\n    actionMenu.exportPlanGraf = document.querySelector('.excel-export-plangrafic');\n    actionMenu.innerMonth = document.querySelector('.excel-inner-month');\n    actionMenu.planGrafSequence = document.querySelector('.plangraf-sequence');\n    actionMenu.arrangePlanGrafSequence = document.querySelector('.plangraf-arrange-numbers');\n    actionMenu.equipUsage = document.querySelector('.equip-usage');\n    actionMenu.copyEquipOfBuilding = document.querySelector('.copy-all-building-equipment');\n    actionMenu.jsonExport = document.querySelector('.json-export');\n    actionMenu.tepExport = document.querySelector('.excel-export-tep');\n    actionMenu.importReminds = document.querySelector('.import-reminds ');\n    actionMenu.copyPathToProject = document.querySelector('.copy-path-to-project ');\n\n    let idleTimer = new _idle_timer__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n}\n\n\nfunction getAllValuesForLists() {\n\n    (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getUserRoles, 'GET').then((userRoleResponse) => {\n        userRole = userRoleResponse;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsGroup1, 'GET');\n    }).then((buildingsGroup1Data) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.group_1 = buildingsGroup1Data;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsGroup2, 'GET');\n    }).then((buildingsGroup2Data) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.group_2 = buildingsGroup2Data;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsAffiliate, 'GET');\n    }).then((buildingsAffiliateData) => {\n        buildingsAffiliateData.forEach((elem) => {\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.affiliate.push(elem.affiliate);\n        });\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsPlanGraf, 'GET');\n    }).then((buildingsPlanGraf) => {\n        buildingsPlanGraf.forEach((elem) => {\n            _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.planGraf.push(elem.plan_graf_name);\n        });\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getEquipmentALl, 'GET');\n    }).then((equipmentALl) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.equipment.all = equipmentALl;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getBuildingsALl, 'GET');\n    }).then((buildingALl) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.all = buildingALl;\n        return (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getWorkersALl, 'GET');\n    }).then((workersALl) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.workers.all = workersALl;\n    })\n        .then(() => {\n        init();\n    }).catch((e) => {\n        console.log(e);\n    });\n\n\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/app.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/cps-portal-dao.js":
/*!*********************************************************!*\
  !*** ./resources/js/cps_portal_table/cps-portal-dao.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"downloadFile\": () => (/* binding */ downloadFile),\n/* harmony export */   \"httpRequest\": () => (/* binding */ httpRequest)\n/* harmony export */ });\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n\n\nlet url = window.location\nlet splitUrl = url.toString().split('/');\nsplitUrl = splitUrl.slice(0, -1);\nlet UrlPathWithoutLastDirectory = splitUrl.join(\"/\")\n\nlet config = {\n    api: {\n        getExamTable: '/api/exam_table',\n        getWarehouseRemainsALl: '/api/warehouse-remains-all',\n        getWorkersALl: '/api/workers-all',\n        postPutDeleteWorkers: '/api/workers',\n        getExportAllNextWorkersChecksJson: '/api/export-all-next-workers-checks-json',\n        postWorkersAddSixMonth: '/api/workers-add-six-month',\n        getBuildingsALl: '/api/buildings-all',\n        getBuildingsGroup1: '/api/buildings-group1',\n        getBuildingsGroup2: '/api/buildings-group2',\n        getBuildingsPlanGraf: '/api/buildings-plangraf',\n        getBuildingsPlanGrafOrderedByPlGrafNumb: '/api/buildings-and-orederedplangraf',\n        getBuildingsPlanGrafOrderedById: '/api/buildings-plangraf-by-id',\n        getBuildingsAffiliate: '/api/buildings-affiliate',\n        putUpdateBuildingSequenceOfPlanGraf: '/api/update-buildingplangraf-seq',\n        postPutDeleteBuildings: '/api/buildings',\n        getEquipmentALl: '/api/equipment-all',\n        postPutDeleteEquipment: '/api/equipment',\n        getPutDeleteEquipmentInBuilding: '/api/equipment-buildings',\n        postCopyEquipmentFromFromOneBuildingToAnother: '/api/copy-equip-to-build',\n        postDeleteEquipDuplicates: '/api/delete-equip-duplicates',\n        getEquipmentUsage: '/api/equipment-usage',\n        getUserRole: '/api/get-user-role',\n        getExportNormiZapasaKip: '/api/export-normi-zapasa-kip',\n        getExportPotrebnostMtr: '/api/export-potrebnost-mtr',\n        getExportPassport: '/api/export-passport',\n        getExportTep: '/api/export-tep',\n        getExportPlanGrafic: '/api/export-plangrafic',\n        getExportOtkaziIzveshatelei: '/api/export-otkazi-russianizveshateli',\n        getExportAllData: '/api/export-all-data',\n        postExportActInvestigation: '/api/export-act-investigation',\n        getUserRoles: '/api/get-user-roles',\n        getPutDeleteEquipmentInBuildingWithWorkerChanges: '/api/equipment-buildings-with-worker-changes',\n        postLogOut: '/logout',\n        loginURL: '/login',\n    }\n};\n\nObject.keys(config.api).forEach(key => {\n    config.api[key] = UrlPathWithoutLastDirectory + config.api[key];\n});\n\nfunction httpRequest(url, method, data = null, idRow = null) {\n    if (idRow !== null) url += '/' + idRow;\n\n    return new Promise(function (resolve, reject) {\n        let oReq = new XMLHttpRequest();\n        // oReq.responseType = 'json'; ie11 compatibility\n        oReq.open(method, url, true);\n        oReq.responseType = \"json\";\n        oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\n        oReq.onload = function () {\n            if (oReq.status >= 200 && oReq.status < 300) {\n                if (_helper_js__WEBPACK_IMPORTED_MODULE_0__.isIE11browser) { //ie11 compatibility\n                    let res = JSON.parse(oReq.response);\n                    resolve(res);\n                } else {\n                    let res = JSON.stringify(oReq.response);\n                    res = JSON.parse(res);\n                    resolve(res);\n                }\n            } else {\n                reject({\n                    status: oReq.status,\n                    statusText: oReq.statusText\n                });\n            }\n        };\n        oReq.onerror = function () {\n            reject({\n                status: oReq.status,\n                statusText: oReq.statusText\n            });\n        };\n        oReq.send(JSON.stringify(data));\n    });\n}\n\nfunction downloadFile(url, method, data = null) {\n    let oReq = new XMLHttpRequest();\n    oReq.open(method, url, true);\n    oReq.responseType = \"blob\";\n    oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n    oReq.onload = function (event) {\n        let blob = oReq.response;\n        let filename = '';\n        let disposition = oReq.getResponseHeader('Content-Disposition');\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n            let filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            let matches = filenameRegex.exec(disposition);\n            if (matches != null && matches[1]) {\n                filename = matches[1].replace(/['\"]/g, '');\n            }\n        }\n\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = decodeURI(filename);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    };\n    oReq.onerror = function (event) {\n        console.log(event);\n    };\n\n    oReq.send(JSON.stringify(data));\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/cps-portal-dao.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/helper.js":
/*!*************************************************!*\
  !*** ./resources/js/cps_portal_table/helper.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addCSRF\": () => (/* binding */ addCSRF),\n/* harmony export */   \"changePageTitle\": () => (/* binding */ changePageTitle),\n/* harmony export */   \"getRole\": () => (/* binding */ getRole),\n/* harmony export */   \"isIE11browser\": () => (/* binding */ isIE11browser)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n\n\nfunction changePageTitle(page_title) {\n    document.getElementById('page-title').textContent = page_title;\n    document.title = page_title;\n}\n\nfunction addCSRF(objectData) {\n    let CSRF = document.getElementsByName('csrf-token')[0].getAttribute('content');\n    if (CSRF !== undefined && CSRF !== \"\") {\n        objectData._token = CSRF;\n        return objectData;\n    }\n}\n\nfunction isIE11() {\n    let ua = window.navigator.userAgent;\n    return ua.indexOf('Trident/') > 0;\n};\n\nfunction getRole() {\n    return (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getUserRole, 'GET');\n}\n\n\nconst isIE11browser = isIE11();\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/helper.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/idle-timer.js":
/*!*****************************************************!*\
  !*** ./resources/js/cps_portal_table/idle-timer.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdleTimer)\n/* harmony export */ });\nclass IdleTimer {\n    IDLE_timerID = undefined;\n\n    constructor() {\n\n        window.onload = this.resetTimer.bind(this);\n        window.onmousemove = this.resetTimer.bind(this);\n        window.onclick = this.resetTimer.bind(this);\n        window.onkeypress = this.resetTimer.bind(this);\n\n        this.setIDLE_timer();\n    }\n\n    setIDLE_timer() {\n        this.IDLE_timerID = setTimeout(this.logOut, 7000000);\n    }\n\n    logOut() {\n        alert(\"Вы отключены от сервера из-за бездействия\");\n        let _this = this;\n        window.location.replace(\"http://srvyasutp5/cpsequip\");\n        // let tokenCPS = addCSRF({});\n        // httpRequest(config.api.postLogOut, 'POST', tokenCPS).then((response) => {\n        //     window.location.href = config.api.loginURL;\n        //     _this.IDLE_timerID = undefined;\n        // })\n    }\n\n    resetTimer() {\n        clearTimeout(this.IDLE_timerID);\n        this.setIDLE_timer();\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/idle-timer.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/lists.js":
/*!************************************************!*\
  !*** ./resources/js/cps_portal_table/lists.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lists\": () => (/* binding */ lists)\n/* harmony export */ });\nlet lists = {\n    workers: {\n        all: {},\n        sex: [\n            'Муж.',\n            'Жен.',\n        ],\n        height: [\n            '158-164',\n            '170-176',\n            '182-188',\n            '194-200',\n        ],\n        template_card: [\n            'Эл.монтер по эл.об',\n            'Инженер',\n            'Мастер по КАиТ',\n            'Эл.монтер ОПС',\n            'Эл.монтер по эл.обор.',\n            'Электромеханик по р.и обсл.МО',\n            'Инж-электр.НУр',\n            'Наладчик КИПиА',\n            'Слесарь КИПиА',\n            'Инженер-электроник',\n            'Кладовщик',\n            'Эл.механик',\n            'Наладчик',\n            'Начальник',\n        ],\n    },\n    buildings: {\n        all: {},\n        area: [\n            'ГП',\n            'Ямбург',\n            'ПС САП',\n            'Новый Уренгой',\n        ],\n        group_1: undefined,\n        group_2: undefined,\n        queue: [\n            '',\n            '1',\n            '2',\n        ],\n        affiliate: [],\n        aud_warn_type: [\n            '1',\n            '2',\n            '3',\n        ],\n        type_aups: [\n            'АСПС',\n            'АСПТ',\n            'АСПС, АСПТ',\n            'Противопожарный водопровод',\n            'СОУЭ',\n        ],\n        categ_asu: [\n            '1',\n            '2',\n            '3',\n        ],\n        planGraf: [],\n    },\n    equipment: {\n        all: {},\n        measure: ['км.', 'шт.'],\n        kind_signal:\n            ['', 'УД', 'ИД', 'УА', 'ИА', 'ИУЦ'],\n        kind_app:\n            [\n                'Оповещатель',\n                'Извещатель',\n                'ППК, и его переферия',\n                'Бокс, коробка, щит, шкаф, ящик',\n                'Питание',\n                'Лучи (шлейфа)',\n                'Оборудование КИПиА',\n                'Пожаротушение',\n                'Реле',\n                'Система речевого оповещения',\n                'Кабель',\n                'Прочее оборудование',\n            ],\n        kind_app_second:\n            [\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Бокс'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Колодка'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Коробка'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Корпус'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Щиты, шкафы'},\n                {kind_app: 'Бокс, коробка, щит, шкаф, ящик', kind_app_second: 'Ящик'},\n                {kind_app: 'Извещатель', kind_app_second: 'Аналоговый'},\n                {kind_app: 'Извещатель', kind_app_second: 'Блок дистанционного ручного пуска'},\n                {kind_app: 'Извещатель', kind_app_second: 'Весовые устройства баллонов'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дискретный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой автономный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Дымовой адресный'},\n                {kind_app: 'Извещатель', kind_app_second: 'Извещатель комбинированый'},\n                {kind_app: 'Извещатель', kind_app_second: 'Извещатель охранный'},\n                {kind_app: 'Извещатель', kind_app_second: 'ИК, УФ пламени'},\n                {kind_app: 'Извещатель', kind_app_second: 'Кнопка'},\n                {kind_app: 'Извещатель', kind_app_second: 'Кнопка КУ'},\n                {kind_app: 'Извещатель', kind_app_second: 'Концевик'},\n                {kind_app: 'Извещатель', kind_app_second: 'Расход'},\n                {kind_app: 'Извещатель', kind_app_second: 'Ручник'},\n                {kind_app: 'Извещатель', kind_app_second: 'Сигнализатор давления'},\n                {kind_app: 'Извещатель', kind_app_second: 'Сигнализатор уровня'},\n                {kind_app: 'Извещатель', kind_app_second: 'Тепловой'},\n                {kind_app: 'Извещатель', kind_app_second: 'Тепловой ДПС'},\n                {kind_app: 'Кабель', kind_app_second: 'Кабель'},\n                {kind_app: 'Лучи (шлейфа)', kind_app_second: 'Лучи (шлейфа)'},\n                {kind_app: 'Оборудование КИПиА', kind_app_second: 'Манометр'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Арматура светосигнальная'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Звонок громкого боя'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Звуковой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'ИК, УФ пламени'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Оповещател'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Светильник'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Световой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Светозвуковой'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Сирена'},\n                {kind_app: 'Оповещатель', kind_app_second: 'Табло'},\n                {kind_app: 'Питание', kind_app_second: 'Аккумулятор'},\n                {kind_app: 'Питание', kind_app_second: 'Блок питания'},\n                {kind_app: 'Питание', kind_app_second: 'Бокс'},\n                {kind_app: 'Питание', kind_app_second: 'Кнопка'},\n                {kind_app: 'Питание', kind_app_second: 'Питание'},\n                {kind_app: 'Питание', kind_app_second: 'Фильтр сетевой'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Баллоны'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Весовые устройства баллонов'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Модуль газового пожаротушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Направления тушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Пиропатроны'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Пожаротушение'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Сигнализатор давления'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Сигнализатор уровня'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Установка аэрозольного ПТ'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Устройство пожаротушения'},\n                {kind_app: 'Пожаротушение', kind_app_second: 'Электромагнитный клапан'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Адресный расширитель'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'АРМ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас пульт оператора'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Атлас устройство ретрансляции'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Блок индикации'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Блок сигнально-пусковой'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Интерфейс'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Контроллер'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Контрольно-пусковой блок'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'МПКЗ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Приборы приёмно-контрольные'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'ПСУ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Пульт'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Составная чать ППК'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'УКЛСиП'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'УПИ'},\n                {kind_app: 'ППК, и его переферия', kind_app_second: 'Фобос'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Автоматический выключатель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Альбатрос'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Аналоговый  ввод-вывод'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'База'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Блок зажимов'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Блок сигнализации БС'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Дискретный'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Дискретный ввод-вывод'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Заземление'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Звуковой'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Интерфейс'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Карта пямяти'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Конденсатор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Концевик'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Лампа'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Модуль расширения'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Плата с радиоэлементами'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Предохранитель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Привод'},\n                {\n                    kind_app: 'Прочее оборудование',\n                    kind_app_second: 'Промежуточные устройства типа ПИО, АСБ, УКЛСиП, МК…ИК, БИВ (УПКОП), Альбатрос, ПИМ, ВУОС, УКШ'\n                },\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Процессор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Прочее оборудовани'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Прочее оборудование'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Пускатель магнитный'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Резистор'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Светильник'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Считыватель'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Транспордер'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Устройство молниезащиты'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'часы'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Электромагнитный клапан'},\n                {kind_app: 'Прочее оборудование', kind_app_second: 'Термостат'},\n                {kind_app: 'Реле', kind_app_second: 'Реле'},\n                {kind_app: 'Реле', kind_app_second: 'УК-ВК'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Громкоговоритель'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Звуковой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Комплекс аппаратуры оповещения о пожаре'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Контроллер'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Микрофон'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Оповещатель речевой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Плата с радиоэлементами'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Проигрыватель'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Селектор'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Система речевого оповещения'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Тюнер'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Усилитель звуковой'},\n                {kind_app: 'Система речевого оповещения', kind_app_second: 'Устройство трансляционное'},\n            ],\n    },\n    faultReasonGroup: [\n        {\n            name: '1. Проектные ошибки и недоработки',\n            faultReasonTypes: [\n                '1.1 Ошибки, недоработки проектной документации (принципиальные и монтажные схемы, ' +\n                'описание алгоритмов управления, защиты и т.п.)',\n                '1.2 Несоответствие характеристик примененных элементов и оборудования реальным условиям эксплуатации',\n                '1.3 Недостаточность принятых решений по защите оборудования от внешнего воздействия (механического,' +\n                ' термического,электромагнитного, влага и т.п.)'\n            ]\n        },\n        {\n            name: '2. Монтажные, наладочные дефекты и недоработки',\n            faultReasonTypes: [\n                '2.1 Ошибки монтажа, отклонения от проектной (рабочей, конструкторской) документации',\n                '2.2 Применение непроектных элементов и оборудования',\n                '2.3 Ошибки при наладке',\n                '2.4 Нарушение электрического контакта, обрыв, замыкание цепи',\n                '2.5 Нарушение герметичности уплотнений и соединений',\n                '2.6 Повреждение изоляции вследствие некачественного монтажа'\n            ]\n        },\n        {\n            name: '3. Конструктивные дефекты элементов и оборудования',\n            faultReasonTypes: [\n                '3.1 Несоответствие фактических технических характеристик заявленным',\n                '3.2 Несоответствие фактических показателей надёжности заявленным'\n            ]\n        },\n        {\n            name: '4. Дефекты программного обеспечения',\n            faultReasonTypes: [\n                '4.1 Ошибки, недоработки информационного обеспечения (интерфейс, протоколы информационного обмена и т.п.)',\n                '4.2 Ошибки, недоработки реализации математического обеспечения (алгоритмы, расчёты, защиты и т.п.)',\n                '4.3 Ошибки, недоработки общего системного программного обеспечения (операционные системы, СУБД и т.п.)',\n                '4.4 Ошибки, недоработки прикладного программного обеспечения (SCADA, прикладное ПО контроллеров и т.п.)',\n                '4.5 Прочие ошибки и недоработки',\n            ]\n        },\n        {\n            name: '5. Неудовлетворительное техническое состояние',\n            faultReasonTypes: [\n                '5.5 Нарушение механического соединения деталей и узлов',\n                '5.6 Нарушение герметичности уплотнений и соединений',\n                '5.7 Снижение сопротивления изоляции цепей',\n                '5.8 Нарушение электрического контакта, замыкание, обрыв цепи',\n                '5.9 Исчерпание ресурса',\n                '5.1О Засорение примесями из рабочей или окружающей среды',\n                '5.11 Разрушение мембран, уплотнительных колец, прокладок и т.п.',\n            ]\n        },\n        {\n            name: '6. Неправильные действия (или бездействие) персонала эксплуатирующей организации',\n            faultReasonTypes: [\n                '6.1 Неправильные действия ( ошибки, отклонения от требований документации) персонала службы автоматизации',\n                '6.2 Неправильные действия персонала других служб',\n                '6.3 Неудовлетворительное качество собственных инструкций, руководств, других нормативных и регламентирующих документов',\n                '6.4 Несоблюдение сроков, невыполнение в требуемых объёмах ТО и Р оборудования и устройств'\n            ]\n        },\n        {\n            name: '7. Неправильные действия (или бездействие) персонала подрядной организации',\n            faultReasonTypes: [\n                '7.1 Неправильные действия ( ошибки, отклонения от требований документации) персонала подрядной организации',\n                '7.2 Неудовлетворительное качество собственных инструкций, руководств, других нормативных и регламентирующих документов',\n            ]\n        },\n        {\n            name: '8. Внешнее воздействие',\n            faultReasonTypes: [\n                '8.1 Нарушение параметров внешнего электроснабжения',\n                '8.2 Внешнее механическое воздействие',\n                '8.3 Внешнее термическое воздействие',\n                '8.4 Воздействие электромагнитных полей',\n                '8.5 Воздействие электростатического разряда',\n                '8.6 Налипание механических ( смолистых, пирофорных, солевых) примесей на элементы средств автоматизации',\n            ]\n        },\n    ],\n    faultElementGroup: [\n        {\n            name: '1. Программно-технические средства уровня САУ',\n            elementTypes: [\n                '1.1 Блоки питания, гальванической развязки питания',\n                '1.2 Модули ввода/вывода',\n                '1.3 Контроллеры',\n                '1.4 Оборудование передачи данных (коммутаторы, маршрутизаторы, преобразователи интерфейсов)',\n                '1.5 Нормализаторы сигналов (входных/выходных, аналоговых/ дискретных)',\n                '1.6 Встроенные элементы организации питания (автоматические размыкатели, УЗИП, УЗО, ИБП)',\n                '1.7 Средства встроенной диагностики ( СУН, контроль сопротивления изоляции)',\n                '1.8 Линии связи (в составе шкафа), разъёмы, шлейфы, клеммники, корзина-носитель',\n                '1.9 Программное обеспечение',\n                '1.10 Усилители мощности (ШУМП ТДА)',\n                '1.11 Кнопки, посты и панели управления (в составе шкафа)',\n                '1.12 Блоки управления пожарные ППКОП, ППКУП',\n            ],\n        },\n        {\n            name: '2. Периферийное (полевое)оборудование',\n            elementTypes: [\n                '2.1 Преобразователи первичные и вторичные, сигнализаторы давления, перепада давления, разряжения',\n                '2.2 Преобразователи первичные и вторичные температуры',\n                '2.5 Преобразователи первичные и вторичные, сигнализаторы уровня',\n                '2.9 Сигнализаторы и вторичные блоки пламени',\n                '2.1 О Преобразователи первичные и вторичные прочие',\n                '2.11 Сигнализаторы прочие',\n                '2.12 Регистраторы, панели',\n                '2.13 Блоки управления исполнительными механизмами',\n                '2.14 Исполнительные механизмы в зоне ответственности',\n                '2.15 Датчики загазованности',\n                '2.16 Извещатели пожарные тепловые',\n                '2.17 Извещатели пожарные дымовые',\n                '2.18 Извещатели пожарные оптические',\n                '2.19 Извещатели пожарные ручные',\n                '2.20 Оновещатели о пожаре звуковые, речевые, световые',\n                '2.21 Оповещатели о загазованности звуковые, световые',\n                '2.22 Линии связи, разъёмы, шлейфы, клемники',\n                '2.23 Кнопки, посты и панели управления',\n                '2.24 Подключение к среде (импульсные линии, клапанные блоки,вентили, термокарманы и пр.)',\n                '2.25 Программное обеспечение',\n\n            ],\n\n        },\n        {\n            name: '3. Программно-технические средства уровня ОПС',\n            elementTypes: [\n                '3.1 АРМ ( системный блок), сервер, СХД',\n                '3.2 Устройства ввода информации (клавиатуры, ПРУ, мышь и пр.)',\n                '3.3 Устройства вывода информации (мониторы, принтеры и пр.)',\n                '3.4 Активное сетевое оборудование (коммутаторы, маршрутизаторы, МСЭ и пр.)',\n                '3.5 Комплектное электропитание (ИБП, автоматические выключатели, УЗИП, УЗО и пр.)',\n                '3.6 Линии связи, разъёмы, шлейфы, клеммники, патч-панели и пр.',\n                '3.7 Кнопки, посты, панели, пульты сигнализации и управления',\n                '3.8 Системы оповещения',\n                '3.9 Программное обеспечение',\n            ]\n        }\n    ]\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/lists.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/modal-aggrid.js":
/*!*******************************************************!*\
  !*** ./resources/js/cps_portal_table/modal-aggrid.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ModalAggrid)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\n\nclass ModalAggrid {\n    gridOptions;\n    getDataUrl;\n    cashedGridData;\n    agName;\n    textBoxFilter;\n    targetId = 'modal-aggrid';\n\n    constructor(gridOptions, getDataUrl, agName, cashedGridData = undefined) {\n        this.gridOptions = gridOptions;\n        this.getDataUrl = getDataUrl;\n        this.agName = agName;\n        this.cashedGridData = cashedGridData;\n        this.renderAgGrid();\n    }\n\n    renderAgGrid() {\n        this.prepareHtml();\n        new agGrid.Grid(document.getElementById(this.targetId), this.gridOptions);\n        this.setGridData();\n    }\n\n    prepareHtml() {\n        let pageContentHtml = document.getElementById(this.targetId);\n        pageContentHtml.innerHTML = \"\";\n        pageContentHtml.style.width = '100%';\n        pageContentHtml.classList.add('ag-theme-alpine');\n    }\n\n    getSelectedRow() {\n        let selectedRows = this.gridOptions.api.getSelectedRows();\n        if (selectedRows.length > 0) {\n            return selectedRows[0];\n        }\n    }\n\n    setGridData() {\n        // this.gridOptions.api.setRowData(lists.equipment.all);\n        if (this.cashedGridData !== undefined) {\n            this.gridOptions.api.setRowData(this.cashedGridData);\n        } else {\n            (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.getDataUrl, 'GET').then((data) => {\n                if (data === null) {\n                    throw 'setGridData data is null';\n                }\n                this.gridOptions.api.setRowData(data);\n            });\n        }\n\n\n    }\n\n    setFilterTextBox() {\n        this.textBoxFilter.addEventListener('input', () => {\n            this.gridOptions.api.setQuickFilter(\n                this.textBoxFilter.value\n            );\n        });\n    }\n\n    resetFilter() {\n        this.gridOptions.api.setQuickFilter(\"\");\n    }\n\n}\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/modal-aggrid.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/modal.js":
/*!************************************************!*\
  !*** ./resources/js/cps_portal_table/modal.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ModalForm)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-aggrid.js */ \"./resources/js/cps_portal_table/modal-aggrid.js\");\n/* harmony import */ var _page_content_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/ag-grid-parameters */ \"./resources/js/cps_portal_table/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app */ \"./resources/js/cps_portal_table/app.js\");\n\n\n\n\n\n\n\n\nclass ModalForm {\n    actionMenu;\n    tableAgGrid;\n    modalTableAgGrid;\n    agBuildingId;\n    agBuildingName;\n    modalHtml = {};\n    ui = {\n        modalForm: {\n            caption: document.getElementById('modal__caption'),\n            modal: document.getElementById('modal__new-entry'),\n            modalBody: document.querySelector('.modal__form__body'),\n            modalForm: document.querySelector('.modal-form'),\n            form: document.getElementById('form__new-entry'),\n            error: document.getElementById('form__error'),\n            listsArea: undefined,\n            group_1: undefined,\n            group_2: undefined,\n            kind_app: undefined,\n            kind_app_second: undefined,\n\n        },\n        modalContainer: document.querySelector('.modal-container'),\n        showModalButton: document.querySelector('.new-table-row'),\n        modalDialog: document.querySelector('.modal-dialog'),\n        requestUrl: undefined,\n        requestMethod: 'POST',\n        modalFormPurpose: undefined,\n    };\n    putId;\n\n    constructor() {\n        this.initiateModalHtml();\n        this.setFormSubmitHandler();\n    }\n\n    addExtraValuesRequestData(RequestData) {\n        if (this.ui.modalFormPurpose === 'buildings') {\n            RequestData.on_conserv = false;\n        }\n        if (this.ui.modalFormPurpose === 'editEquipmentInBuilding' || this.ui.modalFormPurpose === 'addEquipmentInBuilding') {\n            RequestData.id_build = this.agBuildingId;\n        }\n    }\n\n    setRequestData() {\n        let requestData = {};\n        for (const child of this.ui.modalForm.modalBody.children) {\n            if (child.classList.contains('modal-aggrid-wrapper')) {\n                let selectedRow = this.modalTableAgGrid.getSelectedRow();\n                if (selectedRow === undefined) {\n                    this.errorModalAgGridItemSelect();\n                }\n                if (this.ui.modalFormPurpose === 'newEquipment' || this.ui.modalFormPurpose === 'editEquipmentInBuilding' ||\n                    this.ui.modalFormPurpose === 'addEquipmentInBuilding') {\n                    requestData.id_equip = selectedRow.id;\n                }\n                if (this.ui.modalFormPurpose === 'copyEquipFromBuilding') {\n                    requestData.id_build_to = selectedRow.id;\n                    requestData.id_build_from = this.tableAgGrid.getSelectedRow().id;\n                }\n                if (this.ui.modalFormPurpose === 'editEquipmentInBuilding') {\n                    let selectedRowEquipInBuilding = this.tableAgGrid.getSelectedRow();\n                    requestData.quantity = selectedRowEquipInBuilding.quantity;\n                    requestData.measure = selectedRowEquipInBuilding.measure;\n                    requestData.id_build = selectedRowEquipInBuilding.id_build;\n                    this.putId = selectedRowEquipInBuilding.id;\n                    if (requestData.quantity === 0) {\n                        let massage = {};\n                        massage.status = 'ошибка ввода';\n                        massage.statusText = 'количество равно 0';\n                        this._showError(massage);\n                        throw('quantity===0');\n                    }\n                }\n            }\n        }\n        const formInputs = Array.from(this.ui.modalForm.modalForm.getElementsByClassName('form-control'));\n        formInputs.forEach((element) => {\n            if (element.id !== 'aggrid_search' && element.value !== '') {\n                requestData[element.id] = element.value;\n            }\n        });\n        requestData = (0,_helper_js__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(requestData);\n        this.addExtraValuesRequestData(requestData);\n        return requestData;\n    }\n\n    errorModalAgGridItemSelect() {\n        this._hideError();\n        let massage = {}\n        if (this.ui.modalFormPurpose === 'copyEquipFromBuilding' || this.ui.modalFormPurpose === 'buildings'\n        ) {\n            massage.status = 'ошибка ввода'\n            massage.statusText = 'здание не выбрано'\n        }\n        if (this.ui.modalFormPurpose === 'newEquipment' || this.ui.modalFormPurpose === 'editEquipmentInBuilding' ||\n            this.ui.modalFormPurpose === 'addEquipmentInBuilding') {\n            massage.status = 'ошибка ввода'\n            massage.statusText = 'прибор не выбран'\n        }\n        this._showError(massage);\n        throw 'ошибка ввода'\n    }\n\n    modalFormCallback = event => {\n        event.preventDefault();\n        try {\n            let requestData = this.setRequestData();\n            let requestUrl = this.ui.modalForm.requestUrl;\n            if (this.ui.modalForm.requestMethod === 'PUT') {\n                if (this.putId === undefined) {\n                    throw ('putId error');\n                }\n                requestUrl += '/' + this.putId;\n            }\n            let _this = this;\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(requestUrl, this.ui.modalForm.requestMethod, requestData).then((e) => {\n                _this._hideError();\n                _this.hideModal();\n                event.target.reset();\n                _this.tableAgGrid.setAndScrollToId(e.id);\n                _this.actionMenu.hideAllOneRowAction();\n                _this.ui.modalFormPurpose = undefined;\n            }).catch((e) => {\n                _this._hideError();\n                _this._showError(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    setFormSubmitHandler() {\n        this.ui.modalForm.form.addEventListener('submit', this.modalFormCallback);\n    }\n\n    _showError(message) {\n        if (message.status === 409) {\n            this.ui.modalForm.error.innerHTML += 'Ошибка: прибор в этом здании уже существует';\n            this.ui.modalForm.error.classList.remove('d-none');\n            return;\n        }\n        this.ui.modalForm.error.innerHTML += 'Ошибка: ' + message.status + ' | ' + message.statusText\n        if (message.data !== undefined) {\n            this.ui.modalForm.error.innerHTML += ' | ' + message.data;\n        }\n\n        this.ui.modalForm.error.classList.remove('d-none');\n    }\n\n    _hideError() {\n        this.ui.modalForm.error.innerHTML = '';\n        this.ui.modalForm.error.classList.add('d-none');\n    }\n\n    hideModal() {\n        // let modal = bootstrap.Modal.getInstance(this.ui.modalForm.modal)\n        // modal.hide()\n        $('#modal__new-entry').modal('hide');//ie11 compatibility\n    }\n\n\n    createModalEquipStateList(data) {\n        let selectHtml = '';\n        data.forEach(elementState => {\n            selectHtml += `<option>` + elementState.state + `</option>`\n        });\n        document.getElementById('state_tech_condition').innerHTML = selectHtml;\n    }\n\n    setModalWorkersFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить работника';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewWorker;\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers;\n    }\n\n\n    setModalCpsBuildingsFormHtmlListsListeners() {\n        this.ui.modalForm.listsArea = document.getElementById('area');\n        this.ui.modalForm.group_1 = document.getElementById('group_1');\n        this.ui.modalForm.group_2 = document.getElementById('group_2');\n        this.ui.modalForm.group_1.disabled = true;\n        this.ui.modalForm.group_2.disabled = true;\n        let listsAreaSelectedValue = '';\n        let listsGroup_1SelectedValue = '';\n\n        this.ui.modalForm.listsArea.addEventListener(\"change\", (event) => {\n            this.ui.modalForm.group_2.required = true;\n            this.ui.modalForm.group_1.disabled = false;\n            this.ui.modalForm.group_2.disabled = true;\n            listsAreaSelectedValue = this.ui.modalForm.listsArea.value;\n            this.removeOptions(this.ui.modalForm.group_1);\n            console.log(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_1);\n            this.ui.modalForm.group_1.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_1.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue) {\n                    this.ui.modalForm.group_1.add(new Option(elem.group_1, elem.group_1));\n                }\n            });\n        });\n\n        this.ui.modalForm.group_1.addEventListener(\"change\", () => {\n            this.ui.modalForm.group_2.required = true;\n            this.ui.modalForm.group_2.disabled = false;\n            listsGroup_1SelectedValue = this.ui.modalForm.group_1.value;\n            this.removeOptions(this.ui.modalForm.group_2);\n            this.ui.modalForm.group_2.add(new Option('', ''));\n            let group2Count = 0;\n            _lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.group_2.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue && elem.group_1 === listsGroup_1SelectedValue) {\n                    this.ui.modalForm.group_2.add(new Option(elem.group_2, elem.group_2));\n                    group2Count++;\n                }\n            });\n            if (group2Count === 0) {\n                this.ui.modalForm.group_2.required = false;\n            }\n        });\n    }\n\n    removeOptions(selectElement) {\n        let i, L = selectElement.options.length - 1;\n        for (i = L; i >= 0; i--) {\n            selectElement.remove(i);\n        }\n    }\n\n    setModalCpsBuildingsFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить здание';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewBuilding;\n        this.setModalCpsBuildingsFormHtmlListsListeners();\n        this.ui.modalFormPurpose = 'buildings';\n        this.ui.modalForm.requestMethod = \"POST\"\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings;\n    }\n\n    setModalCopyEquipmentToBuildingFormHtml() {\n        let selectedRow = this.tableAgGrid.getSelectedRow();\n        this.agBuildingId = selectedRow.id;\n        this.agBuildingName = selectedRow.shed;\n\n        this.ui.modalForm.caption.innerHTML = 'Копировать оборудование ' + this.agBuildingName + ' в здание:';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalCopyEquipmentFromBuilding;\n        this.setModalAgGridBuildings();\n\n        this.ui.modalForm.requestMethod = \"POST\"\n        this.ui.modalFormPurpose = 'copyEquipFromBuilding';\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postCopyEquipmentFromFromOneBuildingToAnother;\n    }\n\n    setModalCpsEquipmentFormHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить оборудование';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewEquipment;\n        this.setModalAgGridEquipmentWithFilter();\n        this.ui.modalFormPurpose = 'newEquipment';\n        this.ui.modalForm.requestMethod = \"POST\";\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteEquipment;\n    }\n\n    setModalNewEquipmentInBuildingHtml() {\n        this.ui.modalForm.caption.innerHTML = 'Добавить оборудование в ' + this.agBuildingName;\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalNewEquipmentInBuilding;\n        document.querySelector('#quantity').addEventListener('input', this.validateNumberWithDot);\n        this.setModalAgGridEquipmentWithFilter();\n        this.ui.modalForm.requestMethod = \"POST\";\n        this.ui.modalFormPurpose = 'addEquipmentInBuilding';\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding;\n        setTimeout(function () {\n            document.querySelector('#aggrid_search').focus();\n        }, 1000);\n\n    }\n\n    setModalPutEquipmentInBuildingHtml() {\n        let selectedRow = this.tableAgGrid.getSelectedRow();\n        let equipmentName = selectedRow.equip_name;\n        this.ui.modalForm.caption.innerHTML = 'Заменить ' + equipmentName + ' в ' + this.agBuildingName + ' на';\n        this.ui.modalForm.modalBody.innerHTML = this.modalHtml.modalPutEquipmentInBuilding;\n        this.setModalAgGridEquipmentWithFilter();\n        this.ui.modalForm.requestMethod = \"PUT\";\n        this.ui.modalFormPurpose = 'editEquipmentInBuilding';\n        this.ui.modalForm.requestUrl = _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding;\n    }\n\n    setModalAgGridBuildings() {\n        // let cashedAgGridEquip = undefined;\n        // if (userRole !== \"super-user\") {\n        //     cashedAgGridEquip = lists.equipment.all\n        // }\n        this.modalTableAgGrid = new _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_page_content_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableCopyEquipToBuildingParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getBuildingsALl, _page_content_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableCopyEquipToBuildingParameters.agName, undefined);\n        // this.modalTableAgGrid.textBoxFilter = document.querySelector('#aggrid_search');\n        // this.modalTableAgGrid.setFilterTextBox();\n        // this.modalTableAgGrid.resetFilter();\n    }\n\n    setModalAgGridEquipmentWithFilter() {\n        let cashedAgGridEquip = undefined;\n        if (_app__WEBPACK_IMPORTED_MODULE_5__.userRole !== \"super-user\") {\n            cashedAgGridEquip = _lists__WEBPACK_IMPORTED_MODULE_4__.lists.equipment.all\n        }\n        this.modalTableAgGrid = new _modal_aggrid_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_page_content_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.gridOptions,\n            _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getEquipmentALl, _page_content_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentForChooseParameters.agName, cashedAgGridEquip);\n        this.modalTableAgGrid.textBoxFilter = document.querySelector('#aggrid_search');\n        this.modalTableAgGrid.setFilterTextBox();\n        this.modalTableAgGrid.resetFilter();\n    }\n\n    validateNumberWithDot(e) {\n        let text = e.target.value;\n        let regText = text.match(/^[0-9]+\\.?[0-9]*$/);\n        if (regText === null) {\n            e.target.value = text.slice(0, -1);\n        } else {\n            e.target.value = regText[0];\n        }\n    }\n\n    makeOptionsFromArray(arr) {\n        let options;\n        options = options + '<option value=\"\"></option>';\n        arr.forEach((elem) => {\n            options = options + '<option value=\"' + elem + '\">' + elem + '</option>';\n        });\n        return options;\n    }\n\n    initiateModalHtml() {\n        this.modalHtml.modalNewEquipmentInBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"aggrid_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\"  id=\"aggrid_search\" class=\"form-control\" name=\"aggrid_search\">\n                            </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>\n                        <div class=\"d-flex justify-content-around\">\n                            <div class=\"p-2\">\n                                <label for=\"quantity\" class=\"col-form-label\">Количество</label>\n                            </div>\n                            <div class=\"p-2\">\n                                 <input type=\"text\" class=\"form-control\" id=\"quantity\" required name=\"quantity\">\n                            </div>\n                            <div class=\"p-2\">\n                                <label for=\"measure\" class=\"col-form-label\">Мера</label>\n                            </div>\n                            <div class=\"p-2\">\n                                 <select class=\"form-control\" id=\"measure\" required name=\"measure\">\n                                    <option value=\"шт.\">шт.</option>\n                                    <option value=\"км.\">км.</option>\n                                 </select>\n                            </div>\n                        </div>\n                        `;\n\n        this.modalHtml.modalPutEquipmentInBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"aggrid_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\"  id=\"aggrid_search\" class=\"form-control\" name=\"aggrid_search\">\n                            </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>`;\n        this.modalHtml.modalCopyEquipmentFromBuilding = `\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>`;\n        this.modalHtml.modalNewWorker = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fio\" class=\"col-form-label\">Ф.И.О.</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"fio\" required name=\"fio\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"tab_nom\" class=\"col-form-label\">Тебельный N</label>\n                            </div>\n                            <div class=\"col-9\">\n                                <input type=\"text\" class=\"form-control\" id=\"tab_nom\" required name=\"tab_nom\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\\\..*)\\\\./g, '$1');\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"worker_position\" class=\"col-form-label\">Должность</label>\n                            </div>\n                            <div class=\"col-9\">\n                                <input type=\"text\" class=\"form-control\" id=\"worker_position\" name=\"worker_position\">\n                            </div>\n                        </div>`;\n        this.modalHtml.modalNewBuilding = `\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"area\" class=\"col-form-label\">Участок</label>\n                            </div>\n                            <div class=\"col-9\">\n                              <select class=\"form-control\" id=\"area\" required name=\"area\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.area) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"group_1\" class=\"col-form-label\">Группа</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"group_1\" required name=\"group_1\">\n                                 </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"group_2\" class=\"col-form-label\">Подгруппа</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"group_2\" required name=\"group_2\">\n                                 </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"shed\" class=\"col-form-label\">Здание</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"shed\" required name=\"shed\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"queue\" class=\"col-form-label\">Очередь</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"queue\"  name=\"queue\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.queue) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"affiliate\" class=\"col-form-label\">Филиал</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"affiliate\" required name=\"affiliate\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.affiliate) +\n            `\n                                 </select>\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"proj\" class=\"col-form-label\">Проект</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"proj\" required name=\"proj\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"proj_year\" class=\"col-form-label\">Проект год </label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"number\" class=\"form-control\" id=\"proj_year\" required name=\"proj_year\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fitt\" class=\"col-form-label\">Монтаж</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"fitt\" required name=\"fitt\">\n                            </div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"fitt_year\" class=\"col-form-label\">Монтаж год</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"number\" class=\"form-control\" id=\"fitt_year\" required name=\"fitt_year\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"type_aups\" class=\"col-form-label\">ТипАУПС</label>\n                            </div>\n                            <div class=\"col-9\">\n                               <select class=\"form-control\" id=\"type_aups\" required name=\"type_aups\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.type_aups) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"aud_warn_type\" class=\"col-form-label\">типСОУЭ</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"aud_warn_type\" required name=\"aud_warn_type\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.aud_warn_type) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"categ_asu\" class=\"col-form-label\">Категоря сложности АСУ</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"categ_asu\" required name=\"categ_asu\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.categ_asu) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"plan_graf_name\" class=\"col-form-label\">ПланГрафик</label>\n                            </div>\n                            <div class=\"col-9\">\n                                  <select class=\"form-control\" id=\"plan_graf_name\" required name=\"plan_graf_name\">` + this.makeOptionsFromArray(_lists__WEBPACK_IMPORTED_MODULE_4__.lists.buildings.planGraf) +\n            `\n                              </select>\n                            </div>\n                        </div>\n                        `;\n        this.modalHtml.modalNewEquipment = `\n                        <div class=\"col-9\">\n                             <div>Выберите наиболее похожий прибор из существующих:</div>\n                        </div>\n                         <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"aggrid_search\" class=\"col-form-label\">Поиск</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\"  id=\"aggrid_search\" class=\"form-control\"  name=\"aggrid_search\">\n                            </div>\n                        </div>\n                        </div>\n                        <div class=\"modal-aggrid-wrapper\">\n                            <div id=\"modal-aggrid\" style=\"width: 100%; height: 100%;\"></div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"equip_name\" class=\"col-form-label\">Название нового прибора</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_name\" required name=\"equip_name\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"brand_name\" class=\"col-form-label\">Производитель</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"brand_name\" required name=\"brand_name\">\n                            </div>\n                        </div>\n                        `;\n    }\n}\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/modal.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/act-investigation.js":
/*!*************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/act-investigation.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActInvestigation)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper */ \"./resources/js/cps_portal_table/helper.js\");\n\n\n\n\nclass ActInvestigation {\n    idPageContent;\n    actOptionsHtml;\n    usageHours;\n\n    constructor(idPageContent) {\n        this.idPageContent = idPageContent;\n        this.assignHtml();\n        this.idPageContent.innerHTML = this.actOptionsHtml;\n        this.assignBuildingFilters();\n        this.assignFaultsFilters();\n        this.assignElementsFilters();\n        this.assignOccupations();\n        document.querySelector('.act-investigate-form').addEventListener(\"submit\", (event) => {\n            event.preventDefault();\n            try {\n                let requestData = {};\n                const formDataArray = Array.from(document.querySelector('.act-investigate-form').getElementsByClassName('form-control'));\n                formDataArray.forEach((element) => {\n                    requestData[element.name] = element.value;\n                });\n                requestData.usage_hours = this.usageHours;\n                requestData = (0,_helper__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(requestData);\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.downloadFile)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postExportActInvestigation, 'POST', requestData)\n            } catch (e) {\n                console.log(e);\n            }\n        });\n    }\n\n    assignOccupations() {\n        const occupation1 = document.querySelector('#act-investigate-commission-memb-1-occupation');\n        const occupation2 = document.querySelector('#act-investigate-commission-memb-2-occupation');\n        const occupation3 = document.querySelector('#act-investigate-commission-memb-3-occupation');\n        let arrOccup = [occupation1, occupation2, occupation3,];\n        arrOccup.forEach((occupDiv) => {\n            occupDiv.innerHTML = `\n        <option value=\"слесарь КИПиА, ф.УАиМО ЦПС на ГП\" selected>слесарь КИПиА, ф.УАиМО ЦПС на ГП</option>\n        <option value=\"электромантер ОПС, ф.УАиМО ЦПС на ГП\">электромантер ОПС, ф.УАиМО ЦПС на ГП</option>\n        <option value=\"инженер-электроник,  ф.УАиМО ЦПС на ГП\">инженер-электроник, ф.УАиМО ЦПС на ГП</option>\n        <option value=\"инженер КИПиА, ф.ГПУ\">инженер КИПиА, ф.ГПУ</option>\n        <option value=\"инженер КИПиА, ф.ГПУ\">инженер по ЭОГО, ф.ГПУ</option>\n        <option value=\" \">заполнить позже</option>`\n        })\n\n\n    }\n\n    assignElementsFilters() {\n        let elementsGroup = document.getElementById('act-investigate-element-code-group');\n        let elementType = document.getElementById('act-investigate-element-code');\n\n        elementsGroup.addEventListener(\"change\", (event) => {\n            this.removeOptions(elementType);\n            elementType.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.faultElementGroup.forEach((faultElementGroup) => {\n                if (faultElementGroup.name === elementsGroup.value) {\n                    faultElementGroup.elementTypes.forEach((elem) => {\n                        elementType.add(new Option(elem, elem));\n                    });\n                }\n            });\n            elementType.disabled = false;\n            elementType.required = true;\n        });\n    }\n\n    assignFaultsFilters() {\n        let faultReasonsGroup = document.getElementById('act-investigate-fault-reason-group');\n        let faultReason = document.getElementById('act-investigate-fault-reason');\n\n        faultReasonsGroup.addEventListener(\"change\", (event) => {\n\n            this.removeOptions(faultReason);\n            faultReason.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.faultReasonGroup.forEach((faultReasonGroup) => {\n                if (faultReasonGroup.name === faultReasonsGroup.value) {\n                    faultReasonGroup.faultReasonTypes.forEach((reason) => {\n                        faultReason.add(new Option(reason, reason));\n                    });\n                }\n            });\n            faultReason.disabled = false;\n            faultReason.required = true;\n        });\n\n        this.setDefaultFaultReasonsGroup(faultReasonsGroup, faultReason);\n    }\n\n    setDefaultFaultReasonsGroup(faultReasonsGroup, faultReason) {\n        Array.from(faultReasonsGroup.options).forEach(function (option_element) {\n            if (option_element.text === '5. Неудовлетворительное техническое состояние')\n                option_element.selected = true;\n        });\n        faultReason.add(new Option('', ''));\n        _lists__WEBPACK_IMPORTED_MODULE_1__.lists.faultReasonGroup.forEach((faultReasonGroupElem) => {\n            if (faultReasonGroupElem.name === '5. Неудовлетворительное техническое состояние') {\n                faultReasonGroupElem.faultReasonTypes.forEach((reason) => {\n                    faultReason.add(new Option(reason, reason));\n                });\n            }\n        });\n        faultReason.disabled = false;\n        Array.from(faultReason.options).forEach(function (faultReasonElem) {\n            if (faultReasonElem.text === '5.9 Исчерпание ресурса')\n                faultReasonElem.selected = true;\n        });\n    }\n\n    assignBuildingFilters() {\n        let listsArea = document.getElementById('act-investigate-area');\n        let group_1 = document.getElementById('act-investigate-group_1');\n        let group_2 = document.getElementById('act-investigate-group_2');\n        let shed = document.getElementById('act-investigate-shed');\n\n        group_1.disabled = true;\n        group_2.disabled = true;\n        shed.disabled = true;\n\n\n        let listsAreaSelectedValue = '';\n        let listsGroup_1SelectedValue = '';\n        let listsGroup_2SelectedValue = '';\n\n        listsArea.addEventListener(\"change\", (event) => {\n            group_1.disabled = false;\n            group_2.disabled = true;\n            shed.disabled = true;\n            group_2.required = true;\n\n            listsAreaSelectedValue = listsArea.value;\n            this.removeOptions(group_1);\n            this.removeOptions(group_2);\n            this.removeOptions(shed);\n            group_1.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.buildings.group_1.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue) {\n                    group_1.add(new Option(elem.group_1, elem.group_1));\n                }\n            });\n\n        });\n\n        group_1.addEventListener(\"change\", (event) => {\n            group_2.disabled = false;\n            group_2.required = true;\n            shed.disabled = true;\n\n            listsGroup_1SelectedValue = group_1.value;\n            let group2Count = 0;\n            this.removeOptions(group_2);\n            this.removeOptions(shed);\n\n            group_2.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.buildings.group_2.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue && elem.group_1 === listsGroup_1SelectedValue) {\n                    group_2.add(new Option(elem.group_2, elem.group_2));\n                    group2Count++;\n                }\n            });\n            if (group2Count === 0) {\n                group_2.required = false;\n                group_2.disabled = true;\n                shed.disabled = false;\n                shed.required = true;\n                shed.add(new Option('', ''));\n                _lists__WEBPACK_IMPORTED_MODULE_1__.lists.buildings.all.forEach((elem) => {\n                    if (elem.area === listsAreaSelectedValue && elem.group_1 === listsGroup_1SelectedValue) {\n                        shed.add(new Option(elem.shed, elem.id));\n                    }\n                });\n            }\n\n        });\n\n        group_2.addEventListener(\"change\", (event) => {\n            shed.disabled = false;\n            shed.required = true;\n\n            listsGroup_2SelectedValue = group_2.value;\n\n            this.removeOptions(shed);\n            shed.add(new Option('', ''));\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.buildings.all.forEach((elem) => {\n                if (elem.area === listsAreaSelectedValue && elem.group_1 === listsGroup_1SelectedValue &&\n                    elem.group_2 === listsGroup_2SelectedValue) {\n                    shed.add(new Option(elem.shed, elem.id));\n                }\n            });\n        });\n\n        shed.addEventListener(\"change\", (event) => {\n            let calculatedUsedHours = document.querySelector('.calculated-used-hours');\n            let shedId = parseInt(shed.value);\n            _lists__WEBPACK_IMPORTED_MODULE_1__.lists.buildings.all.forEach((row) => {\n                if (row.id === shedId) {\n                    const fittYear = parseInt(row.fitt_year);\n                    const todayDate = new Date();\n                    const todayYear = todayDate.getFullYear();\n                    const usageYears = todayYear - fittYear;\n                    this.usageHours = 8760 * usageYears;\n                    calculatedUsedHours.textContent = 'Наработка отказавшего элемента = (тек.год - монтажздания год ) * 8760 = ' + '(' +\n                        todayYear + ' - ' + fittYear + ') * 8760 = ' + this.usageHours + ' часов';\n                }\n            });\n        });\n\n    }\n\n    removeOptions(selectElement) {\n        let i, L = selectElement.options.length - 1;\n        for (i = L; i >= 0; i--) {\n            selectElement.remove(i);\n        }\n    }\n\n    assignHtml() {\n        let faultReasonGroup = '';\n        faultReasonGroup += '<option value=\"\"></option>'\n        _lists__WEBPACK_IMPORTED_MODULE_1__.lists.faultReasonGroup.forEach((elem) => {\n            faultReasonGroup += '<option value=\"' + elem.name + '\">' + elem.name + '</option>'\n        })\n        let faultElementGroup = '';\n        faultElementGroup += '<option value=\"\"></option>'\n        _lists__WEBPACK_IMPORTED_MODULE_1__.lists.faultElementGroup.forEach((elem) => {\n            faultElementGroup += '<option value=\"' + elem.name + '\">' + elem.name + '</option>'\n        })\n        this.actOptionsHtml = `\n        <form  class=\"act-investigate-form col-md-8 mt-5\" style=\"max-width: 900px;margin-left: 80px;\">\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-approve_fio\" class=\"col-form-label\">Кто утвердит (Деревянных в первую\n                        очередь)</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-approve_fio\" required name=\"act_investigate_approve_fio\">\n                        <option value=\"О.Л. Деревянных\" selected>О.Л. Деревянных</option>\n                        <option value=\"А.А. Турбин\">А.А. Турбин</option>\n                        <option value=\"С.И. Гункин\">С.И. Гункин</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-area\" class=\"col-form-label\">Участок</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-area\" required name=\"act_investigate_area\">\n                        <option value=\"\" selected></option>\n                        <option value=\"ГП\">ГП</option>\n                        <option value=\"Ямбург\">Ямбург</option>\n                        <option value=\"Новый Уренгой\">Новый Уренгой</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-group_1\" class=\"col-form-label\">Группа</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-group_1\" required disabled name=\"act_investigate_group_1\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-group_2\" class=\"col-form-label\">Подгруппа</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-group_2\" required disabled name=\"act_investigate_group_2\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2 act-investigate-shed-wrapper\">\n                  <div class=\"col-3\">\n                    <label for=\"act-investigate-shed\" class=\"col-form-label\">Здание</label>\n                  </div>\n                    <div class=\"col-9\">\n                        <select class=\"form-control\" id=\"act-investigate-shed\" required disabled name=\"act_investigate_shed\">\n                        </select>\n                    </div>\n            </div>\n            <div class=\"calculated-used-hours-wrapper m-2\">\n                <label class=\"calculated-used-hours col-form-label\"></label>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-date-issue\" class=\"col-form-label\" >Дата составления акта</label>\n                </div>\n                <div class=\"col-9\">\n                    <input type=\"date\" class=\"form-control\" id=\"act-investigate-date-issue\" name=\"act_investigate_date_issue\"\n                           min=\"2023-01-01\" required> </input>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-date\" class=\"col-form-label\" >Дата отказа</label>\n                </div>\n                <div class=\"col-9\">\n                    <input type=\"date\" class=\"form-control\" id=\"act-investigate-date\" name=\"act_investigate_date\"\n                           min=\"2023-01-01\" required> </input>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-time\" class=\"col-form-label\">Время отказа</label>\n                </div>\n                <div class=\"col-9\">\n                    <input type=\"time\" class=\"form-control\" id=\"act-investigate-time\" name=\"act_investigate_time\" required></input>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-external-signs\" class=\"col-form-label\">Указать текст сообщения в журнале событий АРМ, либо видимую неисправность оборудования</label>\n                </div>\n                <div class=\"col-9\">\n                    <textarea class=\"form-control\" id=\"act-investigate-external-signs\" name=\"act_investigate_external_signs\" required></textarea>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-short-description\" class=\"col-form-label\">Краткое описание неисправности</label>\n                </div>\n                <div class=\"col-9\">\n                    <textarea class=\"form-control\" id=\"act-investigate-short-description\" name=\"act_investigate_short_description\" required></textarea>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"act-investigate-full-description-hint m-2\">\n                <label for=\"act-investigate-full-description\" class=\"col-form-label\">Подробное описание выполненных мероприятий по обнаружению причины отказа оборудования. Указать: заводской (серийный) номер неисправного устройства и его позиционное обозначение; какой ЗИП (ОС, заказчика, подрядчика) был использован при замене. Если неисправность СПА ГПА, то указать в каком режиме находился агрегат (Ремонт, Резерв, Магистраль)</label>\n            </div>\n            <div class=\"col-12 p-2\">\n                    <textarea class=\"form-control\" id=\"act-investigate-full-description\" name=\"act_investigate_full_description\" required></textarea>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"act-investigate-immediately-actions-hint m-2\">\n                <label for=\"act-investigate-immediately-actions\" class=\"col-form-label\">Оперативные меры. Указать: отправили для диагностики и ремонта в ЦОиР КТС или выполнили ремонт самостоятельно</label>\n            </div>\n            <div class=\"col-12 p-2\">\n                    <textarea class=\"form-control\" id=\"act-investigate-immediately-actions\" name=\"act_investigate_immediately_actions\" required>....были переданы в ЦОиР КТС для диагностики и ремонта</textarea>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"act-investigate-prevent-actions-hint m-2\">\n                <label for=\"act-investigate-prevent-actions\" class=\"col-form-label\">Мероприятия по устранению причины и последствий отказа. Указать, если таковые имеются (например ежемесячное тестирование жесткого диска), если нет, то - мероприятия не предусмотрены</label>\n            </div>\n            <div class=\"col-12 p-2\">\n                    <textarea class=\"form-control\" id=\"act-investigate-prevent-actions\" name=\"act_investigate_prevent_actions\" required>Мероприятия не предусмотрены.</textarea>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-1\" class=\"col-form-label\">Коммисся ФИО1</label>\n                </div>\n                <div class=\"col-3\">\n                    <input class=\"form-control\" id=\"act-investigate-commission-memb-1\"\n                           name=\"act_investigate_commission_memb_1\" required> </input>\n                </div>\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-1-occupation\" class=\"col-form-label\">Должность</label>\n                </div>\n                <div class=\"col-5\">\n                    <select class=\"form-control\" id=\"act-investigate-commission-memb-1-occupation\" required\n                            name=\"act_investigate_commission_memb_1_occupation\">\n\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-2\" class=\"col-form-label\">Коммисся ФИО2</label>\n                </div>\n                <div class=\"col-3\">\n                    <input class=\"form-control\" id=\"act-investigate-commission-memb-2\"\n                           name=\"act_investigate_commission_memb_2\" required> </input>\n                </div>\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-2-occupation\" class=\"col-form-label\">Должность</label>\n                </div>\n                <div class=\"col-5\">\n                    <select class=\"form-control\" id=\"act-investigate-commission-memb-2-occupation\" required\n                            name=\"act_investigate_commission_memb_2_occupation\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-3\" class=\"col-form-label\">Коммисся ФИО3</label>\n                </div>\n                <div class=\"col-3\">\n                    <input class=\"form-control\" id=\"act-investigate-commission-memb-3\"\n                           name=\"act_investigate_commission_memb_3\" required> </input>\n                </div>\n                <div class=\"col-2\">\n                    <label for=\"act-investigate-commission-memb-3-occupation\" class=\"col-form-label\">Должность</label>\n                </div>\n                <div class=\"col-5\">\n                    <select class=\"form-control\" id=\"act-investigate-commission-memb-3-occupation\" required\n                            name=\"act_investigate_commission_memb_3_occupation\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-fault-reason-tu\" class=\"col-form-label\">Причина отказа ТУ</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-fault-reason-tu\" required name=\"act_investigate_fault_reason_tu\">\n                        <option value=\"R2.1\" selected>R2.1 (все что в поле, что в агрегатах, уптиг итд.)</option>\n                        <option value=\"R4.2.1\">R4.2.1 (все что находится в операторной - АРМ и его части, УПИ)</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-fault-reason-group\" class=\"col-form-label\">Группа причины отказа</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-fault-reason-group\" required name=\"act_investigate_fault_reason_group\">\n                       ` + faultReasonGroup + `\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-fault-reason\" class=\"col-form-label\">Причина отказа</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-fault-reason\" required disabled name=\"act_investigate_fault_reason\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"separated-line row\"></div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-element-code-group\" class=\"col-form-label\">Группа элементов</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-element-code-group\"\n                    required name=\"act_investigate_element_code_group\">`\n            + faultElementGroup + `\n                    </select>\n                </div>\n            </div>\n            <div class=\"row p-2\">\n                <div class=\"col-3\">\n                    <label for=\"act-investigate-element-code\" class=\"col-form-label\">Код отказавшего элемента</label>\n                </div>\n                <div class=\"col-9\">\n                    <select class=\"form-control\" id=\"act-investigate-element-code\" required\n                     disabled name=\"act_investigate_element_code\">\n                    </select>\n                </div>\n            </div>\n            <div class=\"d-flex flex-row-reverse bd-highlight last-div\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-create-act\">Создать</button>\n            </div>\n        </form>\n        `;\n    }\n\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/act-investigation.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag-grid-parameters.js":
/*!**************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag-grid-parameters.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"agGridParameters\": () => (/* binding */ agGridParameters),\n/* harmony export */   \"initializeAgGridParameters\": () => (/* binding */ initializeAgGridParameters)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ag_grid_classes/numeric-cell-editor.js */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/numeric-cell-editor.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ag_grid_classes/check-box-render */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/check-box-render.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app */ \"./resources/js/cps_portal_table/app.js\");\n/* harmony import */ var _ag_grid_classes_date_formatter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ag_grid_classes/date-formatter */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/date-formatter.js\");\n/* harmony import */ var _ag_grid_classes_string_date_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ag_grid_classes/string-date-editor */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/string-date-editor.js\");\n/* harmony import */ var _ag_grid_classes_cellStyleTimeToExam__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ag_grid_classes/cellStyleTimeToExam */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/cellStyleTimeToExam.js\");\n\n\n\n\n\n\n\n\n\n\n\nlet agGridParameters = {\n    agOuterId: undefined,\n    actionMenu: undefined,\n    warehouseRemainsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    sortable: true\n                },\n                {\n                    headerName: \"Название ОС\",\n                    field: \"siz_item\",\n                    minWidth: 40,\n                    tooltipField: 'siz_item',\n                    sortable: true\n                },\n                {\n                    headerName: \"Дата оприходования\",\n                    field: \"posting\",\n                    minWidth: 40,\n                    tooltipField: 'posting',\n                    sortable: true\n                },\n                {\n                    headerName: \"ЗапланирДатаВыбытия\",\n                    field: \"disposal\",\n                    minWidth: 40,\n                    tooltipField: 'disposal',\n                    sortable: true\n                },\n\n\n\n            ],\n            rowSelection: 'single',\n            suppressCopyRowsToClipboard: true,\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                // httpRequest(config.api.postPutDeleteWorkers, \"PUT\", addCSRF(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'warehouseRemainsParameters',\n    },\n    cpsScheduleParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    editable: false,\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    editable: false,\n                },\n                {\n                    headerName: \"Должность\",\n                    field: \"worker_position\",\n                    minWidth: 100,\n                    tooltipField: 'worker_position',\n                    editable: false,\n                },\n                {\n                    headerName: \"Высота\",\n                    field: \"height_next\",\n                    minWidth: 60,\n                    tooltipField: 'height_next',\n                    cellEditor: _ag_grid_classes_string_date_editor__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n                    valueFormatter: _ag_grid_classes_date_formatter__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n                    cellStyle: _ag_grid_classes_cellStyleTimeToExam__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n                },\n                {\n                    headerName: \"Электобез\",\n                    field: \"electrobez_next\",\n                    minWidth: 60,\n                    tooltipField: 'electrobez_next',\n                    cellEditor: _ag_grid_classes_string_date_editor__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n                    valueFormatter: _ag_grid_classes_date_formatter__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n                    cellStyle: _ag_grid_classes_cellStyleTimeToExam__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n                },\n                {\n                    headerName: \"Медосмотр\",\n                    field: \"medcheck_next\",\n                    minWidth: 60,\n                    tooltipField: 'medcheck_next',\n                    cellEditor: _ag_grid_classes_string_date_editor__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n                    valueFormatter: _ag_grid_classes_date_formatter__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n                    cellStyle: _ag_grid_classes_cellStyleTimeToExam__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n                },\n\n\n            ],\n            rowSelection: 'single',\n            suppressCopyRowsToClipboard: true,\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers, \"PUT\", (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onCellEditingStarted: function (event) {\n                let columnName = event.colDef.field;\n                if (columnName.includes('last') === true) {\n                    agGridParameters.actionMenu.showPlusSixButton();\n                    agGridParameters.actionMenu.showPlusThreeButton();\n                    agGridParameters.actionMenu.showPlusTwelveButton();\n                }\n\n            },\n            onCellEditingStopped: function () {\n                agGridParameters.actionMenu.hidePlusSixButton();\n                agGridParameters.actionMenu.hidePlusThreeButton();\n                agGridParameters.actionMenu.hidePlusTwelveButton();\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cpsScheduleParameters',\n    },\n    cpsWarehouseParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    editable: false,\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    editable: false,\n                },\n                {\n                    headerName: \"N табеляСтарый\",\n                    field: \"tab_nom_old\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom_old',\n                    editable: false,\n                },\n                {\n                    headerName: \"Должность\",\n                    field: \"worker_position\",\n                    minWidth: 100,\n                    tooltipField: 'worker_position',\n                    editable: false,\n                },\n                {\n                    headerName: \"ШаблонКарточки\",\n                    field: \"template_card\",\n                    minWidth: 100,\n                    tooltipField: 'template_card',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Пол\",\n                    field: \"sex\",\n                    minWidth: 60,\n                    tooltipField: 'sex',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Рост\",\n                    field: \"height\",\n                    minWidth: 60,\n                    tooltipField: 'height',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Одежда\",\n                    field: \"clothes_size\",\n                    minWidth: 60,\n                    tooltipField: 'clothes_size',\n                },\n                {\n                    headerName: \"Обувь\",\n                    field: \"shoes_size\",\n                    minWidth: 60,\n                    tooltipField: 'shoes_size',\n                },\n                {\n                    headerName: \"Шапка\",\n                    field: \"hat_size\",\n                    minWidth: 60,\n                    tooltipField: 'hat_size',\n                },\n                {\n                    headerName: \"РаботаДатаПоступления\",\n                    field: \"job_start\",\n                    minWidth: 60,\n                    tooltipField: 'job_start',\n                },\n\n\n            ],\n            rowSelection: 'single',\n            suppressCopyRowsToClipboard: true,\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers, \"PUT\", (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onCellEditingStarted: function (event) {\n\n            },\n            onCellEditingStopped: function () {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cpsWarehouseParameters',\n    },\n    buildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 100,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"queue\",\n                    minWidth: 100,\n                    tooltipField: 'queue',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"toDateTMP\",\n                    field: \"to_date\",\n                    minWidth: 100,\n                    tooltipField: 'to_date',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Монтаж\",\n                    field: \"fitt\",\n                    minWidth: 100,\n                    tooltipField: 'fitt',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"МонтажГод\",\n                    field: \"fitt_year\",\n                    minWidth: 100,\n                    tooltipField: 'fitt_year',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                },\n                {\n                    headerName: \"Проект\",\n                    field: \"proj\",\n                    minWidth: 100,\n                    tooltipField: 'proj',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ПроектГод\",\n                    field: \"proj_year\",\n                    minWidth: 100,\n                    tooltipField: 'proj_year',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                },\n                {\n                    headerName: \"Назв.ППК\",\n                    field: \"equip_master_type\",\n                    minWidth: 100,\n                    tooltipField: 'equip_master_type',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"АУПС\",\n                    field: \"type_aups\",\n                    minWidth: 100,\n                    tooltipField: 'type_aups',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"СОУЭтип\",\n                    field: \"aud_warn_type\",\n                    minWidth: 100,\n                    tooltipField: 'aud_warn_type',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"КатТехСложАСУ\",\n                    field: \"categ_asu\",\n                    minWidth: 100,\n                    tooltipField: 'categ_asu',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"НаКонсерв\",\n                    field: \"on_conserv\",\n                    minWidth: 50,\n                    tooltipField: 'on_conserv',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n                agGridParameters.actionMenu.showPassportButton();\n                agGridParameters.actionMenu.showTepExportButton();\n                agGridParameters.actionMenu.showCopyPathToProjectButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            },\n        },\n        agName: 'cps_buildings',\n    },\n    uneditableBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 50,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 50,\n                    tooltipField: 'group_1',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 50,\n                    tooltipField: 'group_2',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 300,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"queue\",\n                    minWidth: 100,\n                    tooltipField: 'queue',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showCopyEquipOfBuildingButton();\n                agGridParameters.actionMenu.showGoToEquipButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableBuildings',\n    },\n    uneditableCopyEquipToBuildingParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    width: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    width: 100,\n                    tooltipField: 'group_1',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    width: 50,\n                    tooltipField: 'group_2',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 300,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"queue\",\n                    width: 100,\n                    tooltipField: 'queue',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            // onFirstDataRendered: (params) => {\n            //     params.api.sizeColumnsToFit();\n            // }\n        },\n        agName: 'uneditableCopyEquipToBuildingParameters',\n    },\n    buildingsPlanGrafParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Здание\",\n                    children: [\n                        {\n                            headerName: \"Участок\",\n                            field: \"area\",\n                            minWidth: 100,\n                            tooltipField: 'area',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n                        },\n                        {\n                            headerName: \"Группа\",\n                            field: \"group_1\",\n                            minWidth: 100,\n                            tooltipField: 'group_1',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Подгруппа\",\n                            field: \"group_2\",\n                            minWidth: 100,\n                            tooltipField: 'group_2',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Здание\",\n                            field: \"shed\",\n                            minWidth: 100,\n                            tooltipField: 'shed',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Очередь\",\n                            field: \"queue\",\n                            minWidth: 100,\n                            tooltipField: 'queue',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                        {\n                            headerName: \"Филиал\",\n                            field: \"affiliate\",\n                            minWidth: 100,\n                            tooltipField: 'affiliate',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                    ]\n\n                },\n                {\n                    headerName: 'ПланГрафик',\n                    children: [\n                        {\n                            headerName: \"ПланГрНазвание\",\n                            field: \"plan_graf_name\",\n                            minWidth: 100,\n                            tooltipField: 'plan_graf_name',\n                            filter: 'agTextColumnFilter',\n                            editable: true,\n                            cellEditor: 'agSelectCellEditor',\n                            singleClickEdit: true,\n                            cellEditorParams: {\n                                values: []\n                            }\n                        },\n                        {\n                            headerName: \"ДатыТО\",\n                            field: \"to_date\",\n                            minWidth: 100,\n                            tooltipField: 'to_date',\n                            filter: 'agTextColumnFilter',\n                            editable: true,\n                            cellStyle: {'font-weight': 'bold'}\n                        },\n                        {\n                            headerName: \"ПорядНомер\",\n                            field: \"gr_numb\",\n                            minWidth: 50,\n                            tooltipField: 'gr_numb',\n                            filter: 'agTextColumnFilter',\n                            editable: false,\n\n                        },\n                    ]\n                }\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteBuildings, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showInnerMonthButton();\n                agGridParameters.actionMenu.showPlanGrafSequenceButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'buildingsPlanGraf',\n    },\n    buildingsPlanGrafSequnceParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                    rowDrag: true\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 200,\n                    tooltipField: 'shed',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"queue\",\n                    minWidth: 100,\n                    tooltipField: 'queue',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"ПланГрНазвание\",\n                    field: \"plan_graf_name\",\n                    minWidth: 100,\n                    tooltipField: 'plan_graf_name',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"ДатыТО\",\n                    field: \"to_date\",\n                    minWidth: 100,\n                    tooltipField: 'to_date',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"ПорядНомер\",\n                    field: \"gr_numb\",\n                    minWidth: 50,\n                    tooltipField: 'gr_numb',\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            },\n            rowDragManaged: true,\n            animateRows: true,\n        },\n        agName: 'buildingsPlanGrafSequnce',\n    },\n    uneditableBuildingsPlanGrafikParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ПланГрафик\",\n                    field: \"plan_graf_name\",\n                    minWidth: 100,\n                    tooltipField: 'plan_graf_name',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: null,\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showPlanGrafButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableBuildingsPlanGrafik',\n    },\n    uneditableEquipmentItemBuildingsUsageParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Участок\",\n                    field: \"area\",\n                    minWidth: 100,\n                    tooltipField: 'area',\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Группа\",\n                    field: \"group_1\",\n                    minWidth: 100,\n                    tooltipField: 'group_1',\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Подгруппа\",\n                    field: \"group_2\",\n                    minWidth: 100,\n                    tooltipField: 'group_2',\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Здание\",\n                    field: \"shed\",\n                    minWidth: 200,\n                    tooltipField: 'shed',\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Очередь\",\n                    field: \"queue\",\n                    minWidth: 100,\n                    tooltipField: 'queue',\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Филиал\",\n                    field: \"affiliate\",\n                    minWidth: 100,\n                    tooltipField: 'affiliate',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 100,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 100,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                },\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: null,\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableBuildingsPlanGrafik',\n    },\n    equipmentParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 100,\n                    tooltipField: 'equip_name',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app_second\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app_second',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    minWidth: 100,\n                    tooltipField: 'kind_signal',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    minWidth: 100,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ТОостанов\",\n                    field: \"to_ostanov\",\n                    minWidth: 100,\n                    tooltipField: 'to_ostanov',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"ТОостановИТР\",\n                    field: \"to_ostanov_itr\",\n                    minWidth: 50,\n                    tooltipField: 'to_ostanov_itr',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteEquipment, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                agGridParameters.actionMenu.showDelButton();\n                agGridParameters.actionMenu.showEquipUsageButton();\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cps_equipment',\n    },\n    uneditableEquipmentParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 100,\n                    tooltipField: 'equip_name',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app_second\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app_second',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    minWidth: 100,\n                    tooltipField: 'kind_signal',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    minWidth: 100,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableEquipmentParameters',\n    },\n    uneditableEquipmentParameters2: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 100,\n                    tooltipField: 'equip_name',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app_second\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app_second',\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    minWidth: 100,\n                    tooltipField: 'kind_signal',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    minWidth: 100,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'uneditableEquipmentParameters2',\n    },\n    equipmentInBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 350,\n                    tooltipField: 'equip_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    editable: false,\n                    rowDrag: true,\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app\",\n                    minWidth: 100,\n                    tooltipField: 'kind_app',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 100,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 100,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    },\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Год\",\n                    field: \"equip_year\",\n                    minWidth: 100,\n                    tooltipField: 'equip_year',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    cellEditor: _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                    cellStyle: {'font-weight': 'bold'}\n                },\n                {\n                    headerName: \"Коментарии\",\n                    field: \"equip_comments\",\n                    minWidth: 100,\n                    tooltipField: 'equip_comments',\n                    sortable: false,\n                    filter: false,\n                    cellEditor: 'agLargeTextCellEditor',\n\n                },\n                {\n                    headerName: \"Удалить\",\n                    field: \"deleted_by_worker\",\n                    minWidth: 50,\n                    tooltipField: 'deleted_by_worker',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                    cellStyle: {'background-color': '#b6bec5'}\n                },\n                {\n                    headerName: \"Ред\",\n                    field: \"edited_by_worker\",\n                    minWidth: 50,\n                    tooltipField: 'edited_by_worker',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                    hide: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                    cellStyle: {'background-color': '#b6bec5'}\n                },\n                {\n                    headerName: \"Созд\",\n                    field: \"created_by_worker\",\n                    minWidth: 50,\n                    tooltipField: 'created_by_worker',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                    hide: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                    cellStyle: {'background-color': '#b6bec5'}\n                },\n\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            onCellEditingStarted: (event) => {\n\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n                if (_app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Nur_master\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Yamburg_master\" ||\n                    _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Zapolyarka_master\") {\n                    agGridParameters.actionMenu.showDelButton();\n                    agGridParameters.actionMenu.showEditButton();\n                }\n                agGridParameters.actionMenu.showReturnToBuildingsButton();\n\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            },\n            rowDragManaged: true,\n            animateRows: true,\n        },\n        agName: 'equipmentInBuildings',\n    },\n    tehnObslMonthInBuildingsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 200,\n                    tooltipField: 'equip_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Количество\",\n                    field: \"quantity\",\n                    minWidth: 100,\n                    tooltipField: 'quantity',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Измерение\",\n                    field: \"measure\",\n                    minWidth: 100,\n                    tooltipField: 'measure',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: false,\n                },\n                {\n                    headerName: \"Январь текст\",\n                    field: \"cel_january\",\n                    minWidth: 100,\n                    tooltipField: 'cel_january',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ЯнварьПров\",\n                    field: \"cel_january_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_january_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Февраль текст\",\n                    field: \"cel_february\",\n                    minWidth: 100,\n                    tooltipField: 'cel_february',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ФевральПров\",\n                    field: \"cel_february_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_february_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Март текст\",\n                    field: \"cel_march\",\n                    minWidth: 100,\n                    tooltipField: 'cel_march',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ЯнварьПров\",\n                    field: \"cel_march_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_march_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Апрель текст\",\n                    field: \"cel_april\",\n                    minWidth: 100,\n                    tooltipField: 'cel_april',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"АпрельПров\",\n                    field: \"cel_april_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_april_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Май текст\",\n                    field: \"cel_may\",\n                    minWidth: 100,\n                    tooltipField: 'cel_may',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"МайПров\",\n                    field: \"cel_may_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_may_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Июнь текст\",\n                    field: \"cel_june\",\n                    minWidth: 100,\n                    tooltipField: 'cel_june',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ИюньПров\",\n                    field: \"cel_june_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_june_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Июль текст\",\n                    field: \"cel_july\",\n                    minWidth: 100,\n                    tooltipField: 'cel_july',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ИюльПров\",\n                    field: \"cel_july_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_july_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Август текст\",\n                    field: \"cel_august\",\n                    minWidth: 100,\n                    tooltipField: 'cel_august',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"АвгустПров\",\n                    field: \"cel_august_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_august_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Сентябрь текст\",\n                    field: \"cel_september\",\n                    minWidth: 100,\n                    tooltipField: 'cel_september',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"СентябрьПров\",\n                    field: \"cel_september_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_september_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Октябрь текст\",\n                    field: \"cel_october\",\n                    minWidth: 100,\n                    tooltipField: 'cel_october',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ОктябрьПров\",\n                    field: \"cel_october_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_october_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n                {\n                    headerName: \"Ноябрь текст\",\n                    field: \"cel_november\",\n                    minWidth: 100,\n                    tooltipField: 'cel_november',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"НоябрьПров\",\n                    field: \"cel_november_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_november_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n\n                {\n                    headerName: \"Декабрь текст\",\n                    field: \"cel_december\",\n                    minWidth: 100,\n                    tooltipField: 'cel_december',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                },\n                {\n                    headerName: \"ДекабрьПров\",\n                    field: \"cel_december_gray\",\n                    minWidth: 50,\n                    tooltipField: 'cel_december_gray',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                    editable: true,\n                    cellRenderer: _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                },\n\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getPutDeleteEquipmentInBuilding, \"PUT\",\n                    (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'TehnObslMonthInBuilding',\n    },\n    equipmentForChooseParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"Название\",\n                    field: \"equip_name\",\n                    minWidth: 400,\n                    tooltipField: 'area',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Тип\",\n                    field: \"kind_app\",\n                    minWidth: 60,\n                    tooltipField: 'group_2',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"ТипОбобщенный\",\n                    field: \"kind_app_second\",\n                    minWidth: 60,\n                    tooltipField: 'shed',\n                    sortable: true,\n                    filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Сигнал\",\n                    field: \"kind_signal\",\n                    maxWidth: 120,\n                    tooltipField: 'group_1',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n                {\n                    headerName: \"Производитель\",\n                    field: \"brand_name\",\n                    maxWidth: 120,\n                    tooltipField: 'brand_name',\n                    sortable: true, filter: 'agTextColumnFilter',\n                },\n\n            ],\n            rowSelection: 'single',\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            suppressContextMenu: true,\n            enableBrowserTooltips: true,\n            onRowSelected: function () {\n            },\n        },\n        agName: 'cps_equipment_for_choose',\n    },\n}\n\nfunction initializeAgGridParameters() {\n\n    agGridParameters.cpsWarehouseParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'sex') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.sex;\n        }\n        if (columnDefs.field === 'height') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.height;\n        }\n        if (columnDefs.field === 'template_card') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.template_card;\n        }\n    });\n    agGridParameters.equipmentParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'kind_app') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.equipment.kind_app;\n        }\n        if (columnDefs.field === 'kind_app_second') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.equipment.kind_app_second.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem.kind_app_second);\n            })\n        }\n        if (columnDefs.field === 'kind_signal') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.equipment.kind_signal.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n    });\n    agGridParameters.buildingsParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'area') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.area;\n        }\n        if (columnDefs.field === 'group_1') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.group_1.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem.group_1);\n            })\n        }\n        if (columnDefs.field === 'type_aups') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.type_aups.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'aud_warn_type') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.aud_warn_type.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'categ_asu') {\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.categ_asu.forEach((elem) => {\n                columnDefs.cellEditorParams.values.push(elem);\n            })\n        }\n        if (columnDefs.field === 'group_2') {\n            columnDefs.cellEditorParams.values.push('');\n            _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.group_2.forEach((elem) => {\n                if (columnDefs.cellEditorParams.values.indexOf(elem.group_2) === -1) {\n                    columnDefs.cellEditorParams.values.push(elem.group_2);\n                }\n            })\n        }\n        if (columnDefs.field === 'queue') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.queue;\n        }\n        if (columnDefs.field === 'affiliate') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.affiliate;\n        }\n    });\n    agGridParameters.equipmentInBuildingsParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'measure') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.equipment.measure;\n        }\n\n        if ((columnDefs.field === 'edited_by_worker' || columnDefs.field === 'created_by_worker') &&\n            (_app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Nur_master\" ||\n                _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Yamburg_master\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Zapolyarka_master\")) {\n            columnDefs.hide = false;\n            columnDefs.editable = false;\n        }\n        if ((columnDefs.field === 'deleted_by_worker') &&\n            (_app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Nur_master\" ||\n                _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Yamburg_master\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Zapolyarka_master\")) {\n            columnDefs.editable = false;\n        }\n    });\n\n    agGridParameters.buildingsPlanGrafParameters.gridOptions.columnDefs[1].children.forEach((columnDefs) => {\n        if (columnDefs.field === 'plan_graf_name') {\n            if (_app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"super-user\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Nur_master\" ||\n                _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Yamburg_master\" || _app__WEBPACK_IMPORTED_MODULE_5__.userRole === \"Zapolyarka_master\") {\n                columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.buildings.planGraf;\n            } else {\n                delete columnDefs.cellEditorParams;\n                delete columnDefs.cellEditor;\n            }\n        }\n    });\n\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag-grid-parameters.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/cellStyleTimeToExam.js":
/*!*******************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/cellStyleTimeToExam.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StyleTimeToExam)\n/* harmony export */ });\nfunction StyleTimeToExam(params) {\n    const todayDate = Date.now();\n    const dateWorkerCheck  = Date.parse(params.value);\n    if (todayDate > dateWorkerCheck) {\n        return { backgroundColor: '#f7ad97'};\n    } else {\n        return null;\n    }\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/cellStyleTimeToExam.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/check-box-render.js":
/*!****************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/check-box-render.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CheckboxRenderer)\n/* harmony export */ });\nclass CheckboxRenderer {\n    init(params) {\n        this.params = params;\n        this.eGui = document.createElement('input');\n        this.eGui.type = 'checkbox';\n        this.eGui.checked = params.value;\n\n\n        if (params.colDef.editable !== false) {\n            this.checkedHandler = this.checkedHandler.bind(this);\n            this.eGui.addEventListener('click', this.checkedHandler);\n            // return this.cancelBeforeStart = true;\n        } else {\n            this.eGui.addEventListener('click', (e)=>{\n                e.preventDefault();\n            })\n        }\n    }\n\n    checkedHandler(e) {\n        let checked = e.target.checked;\n        let colId = this.params.column.colId;\n        this.params.node.setDataValue(colId, checked);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    destroy() {\n        this.eGui.removeEventListener('click', this.checkedHandler);\n    }\n\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/check-box-render.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/date-formatter.js":
/*!**************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/date-formatter.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateFormatter)\n/* harmony export */ });\nfunction DateFormatter(params) {\n    if (params.value !== undefined && params.value !== null && params.value.includes('-') === true) {\n        let dateAsString = params.value;\n        let dateParts = dateAsString.split('-');\n        return `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/date-formatter.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/excel-export.js":
/*!************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/excel-export.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"myExcelXML\": () => (/* binding */ myExcelXML)\n/* harmony export */ });\nlet myExcelXML = (function () {\n    let Workbook, WorkbookStart = '<?xml version=\"1.0\"?><ss:Workbook  ' +\n        'xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" ' +\n        'xmlns:o=\"urn:schemas-microsoft-com:office:office\" ' +\n        'xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ' +\n        'xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\">';\n    const WorkbookEnd = '</ss:Workbook>';\n    let fs, SheetName = 'SHEET 1', styleID = 1, columnWidth = 80, fileName = \"data\", uri, link;\n\n    class myExcelXML {\n        constructor(o, tableName) {\n            fileName = tableName + \".xls\";\n            let respArray = o;\n            let finalDataArray = [];\n\n            for (let i = 0; i < respArray.length; i++) {\n                finalDataArray.push(flatten(respArray[i]));\n            }\n\n            let s = JSON.stringify(finalDataArray);\n            fs = s.replace(/&/gi, '&amp;');\n        }\n\n        downLoad() {\n            const Worksheet = myXMLWorkSheet(SheetName, fs);\n            Workbook = WorkbookStart + Worksheet + WorkbookEnd;\n            let fileNameToDownload = fileName;\n            let blob = new Blob([Workbook], {type: 'text/xls'});\n            if (window.navigator.msSaveOrOpenBlob) {\n                window.navigator.msSaveBlob(blob, fileNameToDownload);\n            } else {\n                let elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(blob);\n                elem.download = fileNameToDownload;\n                document.body.appendChild(elem);\n                elem.click();\n                document.body.removeChild(elem);\n            }\n        }\n\n        get fileName() {\n            return fileName;\n        }\n\n        set fileName(n) {\n            fileName = n;\n        }\n\n        get SheetName() {\n            return SheetName;\n        }\n\n        set SheetName(n) {\n            SheetName = n;\n        }\n\n        get styleID() {\n            return styleID;\n        }\n\n        set styleID(n) {\n            styleID = n;\n        }\n    }\n\n    const myXMLWorkSheet = function (name, o) {\n        const Table = myXMLTable(o);\n        let WorksheetStart = '<ss:Worksheet ss:Name=\"' + name + '\">';\n        const WorksheetEnd = '</ss:Worksheet>';\n\n        return WorksheetStart + Table + WorksheetEnd;\n    }\n\n    const myXMLTable = function (o) {\n        let TableStart = '<ss:Table>';\n        const TableEnd = '</ss:Table>';\n\n        const tableData = JSON.parse(o);\n\n        if (tableData.length > 0) {\n            const columnHeader = Object.keys(tableData[0]);\n            let rowData;\n            for (let i = 0; i < columnHeader.length; i++) {\n                TableStart += myXMLColumn(columnWidth);\n\n            }\n            for (let j = 0; j < tableData.length; j++) {\n                rowData += myXMLRow(tableData[j], columnHeader);\n            }\n            // TableStart += myXMLHead(1, columnHeader);  //columns numbers\n            TableStart += rowData;\n        }\n\n        return TableStart + TableEnd;\n    }\n\n    const myXMLColumn = function (w) {\n        return '<ss:Column ss:AutoFitWidth=\"0\" ss:Width=\"' + w + '\"/>';\n    }\n\n\n    const myXMLHead = function (id, h) {\n        let HeadStart = '<ss:Row ss:StyleID=\"' + id + '\">';\n        const HeadEnd = '</ss:Row>';\n\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(h[i].toUpperCase());\n            HeadStart += Cell;\n        }\n\n        return HeadStart + HeadEnd;\n    }\n\n    const myXMLRow = function (r, h) {\n        let RowStart = '<ss:Row>';\n        const RowEnd = '</ss:Row>';\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(r[h[i]]);\n            RowStart += Cell;\n        }\n\n        return RowStart + RowEnd;\n    }\n\n    const myXMLCell = function (n) {\n        let CellStart = '<ss:Cell>';\n        const CellEnd = '</ss:Cell>';\n\n        const Data = myXMLData(n);\n        CellStart += Data;\n\n        return CellStart + CellEnd;\n    }\n\n    const myXMLData = function (d) {\n        let DataStart = '<ss:Data ss:Type=\"String\">';\n        const DataEnd = '</ss:Data>';\n\n        return DataStart + d + DataEnd;\n    }\n\n    const flatten = function (obj) {\n        var obj1 = JSON.parse(JSON.stringify(obj));\n        const obj2 = JSON.parse(JSON.stringify(obj));\n        if (typeof obj === 'object') {\n            for (var k1 in obj2) {\n                if (obj2.hasOwnProperty(k1)) {\n                    if (typeof obj2[k1] === 'object' && obj2[k1] !== null) {\n                        delete obj1[k1]\n                        for (var k2 in obj2[k1]) {\n                            if (obj2[k1].hasOwnProperty(k2)) {\n                                obj1[k1 + '-' + k2] = obj2[k1][k2];\n                            }\n                        }\n                    }\n                }\n            }\n            var hasObject = false;\n            for (var key in obj1) {\n                if (obj1.hasOwnProperty(key)) {\n                    if (typeof obj1[key] === 'object' && obj1[key] !== null) {\n                        hasObject = true;\n                    }\n                }\n            }\n            if (hasObject) {\n                return flatten(obj1);\n            } else {\n                return obj1;\n            }\n        } else {\n            return obj1;\n        }\n    }\n\n    return myExcelXML;\n})();\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/excel-export.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/local.ru.js":
/*!********************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/local.ru.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AG_GRID_LOCALE_RU\": () => (/* binding */ AG_GRID_LOCALE_RU)\n/* harmony export */ });\nconst AG_GRID_LOCALE_RU = {\n    // for filter panel\n    page: 'Страница',\n    more: 'ещё',\n    to: 'к',\n    of: 'из',\n    next: 'Следующая',\n    last: 'Последняя',\n    first: 'Первая',\n    previous: 'Предыдущая',\n    loadingOoo: 'Загрузка...',\n\n    // for set filter\n    selectAll: 'Выделить всё',\n    searchOoo: 'Поиск...',\n    blanks: 'Ничего не найдено',\n\n    // for number filter and text filter\n    filterOoo: 'Фильтровать...',\n    applyFilter: 'Применить фильтр...',\n    equals: 'Равно',\n    notEqual: 'Не равно',\n\n    // for number filter\n    lessThan: 'Меньше чем',\n    greaterThan: 'Больше чем',\n    lessThanOrEqual: 'Меньше или равно',\n    greaterThanOrEqual: 'Больше или равно',\n    inRange: 'В промежутке',\n\n    // for text filter\n    contains: 'Содержит',\n    notContains: 'Не содержит',\n    startsWith: 'Начинается с',\n    endsWith: 'Заканчивается',\n\n    // filter conditions\n    andCondition: '\"И\"',\n    orCondition: '\"ИЛИ\"',\n\n    // the header of the default group column\n    group: 'Группа',\n\n    // tool panel\n    columns: 'Столбцы',\n    filters: 'Фильтры',\n    rowGroupColumns: 'Столбцы группировки по строкам',\n    rowGroupColumnsEmptyMessage: 'Перетащите сюда для группировки по строкам',\n    valueColumns: 'Столбцы со значениями',\n    pivotMode: 'Режим сводной таблицы',\n    groups: 'Группы',\n    values: 'Значения',\n    pivots: 'Заголовки столбцов',\n    valueColumnsEmptyMessage: 'Перетащите сюда для агрегации',\n    pivotColumnsEmptyMessage: 'Перетащите сюда, чтобы задать заголовки столбам',\n    toolPanelButton: 'Панель инструментов',\n\n    // other\n    noRowsToShow: 'Нет данных',\n\n    // enterprise menu\n    pinColumn: 'Закрепить колонку',\n    valueAggregation: 'Агрегация по значению',\n    autosizeThiscolumn: 'Автоматически задавать размер этой колонки',\n    autosizeAllColumns: 'Автоматически задавать размер всем колонкам',\n    groupBy: 'Группировать по',\n    ungroupBy: 'Разгруппировать по',\n    resetColumns: 'Сбросить столбцы',\n    expandAll: 'Развернуть всё',\n    collapseAll: 'Свернуть всё',\n    toolPanel: 'Панель инструментов',\n    export: 'Экспорт',\n    csvExport: 'Экспорт в CSV',\n    excelExport: 'Экспорт в Excel (.xlsx)',\n    excelXmlExport: 'Экспорт в XML (.xml)',\n\n    // enterprise menu pinning\n    pinLeft: 'Закрепить слева <<',\n    pinRight: 'Закрепить справа >>',\n    noPin: 'Не закреплять <>',\n\n    // enterprise menu aggregation and status bar\n    sum: 'Сумма',\n    min: 'Минимум',\n    max: 'Максимум',\n    none: 'Пусто',\n    count: 'Количество',\n    average: 'Среднее значение',\n    filteredRows: 'Отфильтрованные',\n    selectedRows: 'Выделенные',\n    totalRows: 'Всего строк',\n    totalAndFilteredRows: 'Строк',\n\n    // standard menu\n    copy: 'Копировать',\n    copyWithHeaders: 'Копировать с заголовком',\n    ctrlC: 'Ctrl+C',\n    paste: 'Вставить',\n    ctrlV: 'Ctrl+V'\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/local.ru.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/numeric-cell-editor.js":
/*!*******************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/numeric-cell-editor.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NumericCellEditor)\n/* harmony export */ });\nclass NumericCellEditor {\n    // gets called once before the renderer is used\n    init(params) {\n        // create the cell\n        this.eInput = document.createElement('input');\n        this.eInput.className = 'simple-input-editor';\n\n        if (this.isCharNumeric(params.charPress)) {\n            this.eInput.value = params.charPress;\n        } else {\n            if (params.value !== undefined && params.value !== null) {\n                this.eInput.value = params.value;\n            }\n        }\n\n        this.eInput.addEventListener('keypress', (event) => {\n            if (!this.isKeyPressedNumeric(event)) {\n                this.eInput.focus();\n                if (event.preventDefault) event.preventDefault();\n            } else if (this.isKeyPressedNavigation(event)) {\n                event.stopPropagation();\n            }\n        });\n\n        // only start edit if key pressed is a number, not a letter\n        var charPressIsNotANumber =\n            params.charPress && '1234567890'.indexOf(params.charPress) < 0;\n        this.cancelBeforeStart = !!charPressIsNotANumber;\n    }\n\n    isKeyPressedNumeric(event) {\n        const charStr = event.key;\n        return this.isCharNumeric(charStr);\n    }\n\n    isKeyPressedNavigation(event) {\n        return event.key === 'ArrowLeft' || event.key === 'ArrowRight';\n    }\n\n    isCharNumeric(charStr) {\n        return charStr && !!/\\d|\\./.test(charStr);\n    }\n\n    // gets called once when grid ready to insert the element\n    getGui() {\n        return this.eInput;\n    }\n\n    // focus and select can be done after the gui is attached\n    afterGuiAttached() {\n        this.eInput.focus();\n    }\n\n    // returns the new value after editing\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n    // example - will reject the number if it contains the value 007\n    // - not very practical, but demonstrates the method.\n    isCancelAfterEnd() {\n        // var value = this.getValue();\n        // return value.indexOf('007') >= 0;\n    }\n\n    // returns the new value after editing\n    getValue() {\n        return this.eInput.value;\n    }\n\n    // any cleanup we need to be done here\n    destroy() {\n        // but this example is simple, no cleanup, we could  even leave this method out as it's optional\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/numeric-cell-editor.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/ag_grid_classes/string-date-editor.js":
/*!******************************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/ag_grid_classes/string-date-editor.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StringDateEditor)\n/* harmony export */ });\nclass StringDateEditor {\n    // gets called once before the renderer is used\n    init(params) {\n        // create the cell\n        this.eInput = document.createElement('input');\n        this.eInput.setAttribute('style', 'whidth:100%;border:0;outline:none;');\n\n        let postgresqlFormat = params.value;\n        // console.log(postgresqlFormat)\n        const mask = IMask(\n            this.eInput,\n            {\n                mask: Date,\n                min: new Date(1990, 0, 1),\n                lazy: false\n            }\n        );\n\n        if (postgresqlFormat !== null && postgresqlFormat !== undefined) {\n            let userFormatParts = postgresqlFormat.split('-');\n            mask.value = `${userFormatParts[2]}.${userFormatParts[1]}.${userFormatParts[0]}`;\n        }\n\n    }\n\n\n    // gets called once when grid ready to insert the element\n    getGui() {\n        return this.eInput;\n    }\n\n    // focus and select can be done after the gui is attached\n    afterGuiAttached() {\n        this.eInput.focus();\n    }\n\n    // returns the new value after editing\n    isCancelBeforeStart() {\n    }\n\n    isCancelAfterEnd() {\n        if (this.eInput.value === null || this.eInput.value === undefined || this.eInput.value === \"\" ||\n            this.eInput.value.includes('_')) {\n            return true;\n        }\n        return false;\n    }\n\n    // returns the new value after editing\n    getValue() {\n\n        let userFormatParts = this.eInput.value.split('.');\n        return `${userFormatParts[2]}-${userFormatParts[1]}-${userFormatParts[0]}`;\n    }\n\n    // any cleanup we need to be done here\n    destroy() {\n        // but this example is simple, no cleanup, we could  even leave this method out as it's optional\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/ag_grid_classes/string-date-editor.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/aggrid.js":
/*!**************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/aggrid.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TableAgGrid)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ag_grid_classes/excel-export.js */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/excel-export.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag_grid_classes/local.ru */ \"./resources/js/cps_portal_table/page_content/ag_grid_classes/local.ru.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\n\n\n\n\n//ag grid wrapper, first field from DAO has to have the name \"id\".\n// constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu, idToScroll = undefined,\n//     agFilterModel = undefined, cashedGridData = undefined)\nclass TableAgGrid {\n    cashedGridData;\n    actionMenu;\n    gridOptions;\n    getDataUrl;\n    delUrl;\n    idToScroll;\n    agFilterModel;\n    isReady = false;\n    targetId;\n    confirmDeleteBtn = document.querySelector('.modal__confirm-delete-entry-btn');\n    agName;\n\n    constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu, idToScroll = undefined,\n                agFilterModel = undefined, cashedGridData = undefined, targetId = 'page-content') {\n        this.gridOptions = gridOptions;\n        this.getDataUrl = getDataUrl;\n        this.delUrl = delUrl;\n        this.agName = agName;\n        this.actionMenu = actionMenu;\n        this.idToScroll = idToScroll;\n        this.agFilterModel = agFilterModel;\n        this.cashedGridData = cashedGridData;\n        this.targetId = targetId;\n        this.renderAgGrid();\n    }\n\n    renderAgGrid() {\n        this.prepareHtml();\n        this.gridOptions.localeText = _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__.AG_GRID_LOCALE_RU;\n        new agGrid.Grid(document.getElementById(this.targetId), this.gridOptions);\n        this.setGridData();\n        // this.setGridCloseObserver();\n        this.setDeleteButtonAction();\n        this.isReady = true;\n        this.actionMenu.hideALl();\n        this.actionMenu.setExportExcelAction();\n    }\n\n    setGridData() {\n        if (this.cashedGridData !== undefined) {\n            this.scrollAndFilter(this.cashedGridData);\n        } else {\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.getDataUrl, 'GET').then((data) => {\n                if (data === null) {\n                    throw 'setGridData data is null';\n                }\n                this.scrollAndFilter(data);\n            });\n        }\n\n    }\n\n    setAndScrollToId(id) {\n        this.setGridData();\n        this.idToScroll = id;\n        this.scrollToid();\n    }\n\n    scrollAndFilter(data) {\n        this.gridOptions.api.setRowData(data);\n        if (this.idToScroll !== undefined) {\n            this.scrollToid(this.idToScroll);\n            this.idToScroll = undefined;\n        }\n        if (this.agFilterModel !== undefined) {\n            this.restoreFilterModel(this.agFilterModel);\n            this.agFilterModel = undefined;\n        }\n    }\n\n    scrollToid() {\n        let _this = this;\n        this.gridOptions.api.forEachNode(function (node) {\n            if (node.data.id === _this.idToScroll) {\n                node.setSelected(true);\n                _this.gridOptions.api.ensureIndexVisible(node.rowIndex, 'middle');\n            }\n        });\n\n    }\n\n    getSelectedRow() {\n        let selectedRows = this.gridOptions.api.getSelectedRows()\n        if (selectedRows.length > 0) {\n            return selectedRows[0];\n        }\n    }\n\n    setDeleteButtonAction() {\n        if (this.delUrl !== null) {\n            this.confirmDeleteBtn.onclick = () => {\n                let selectedRow = this.getSelectedRow();\n                let csrf = {};\n                csrf = (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(csrf);\n                (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.delUrl, 'DELETE', csrf, selectedRow.id).then(() => {\n                    this.actionMenu.hideAllOneRowAction();\n                    this.setGridData();\n                    $('#modal__confirm-delete-entry').modal('hide');\n                });\n            };\n        }\n\n    }\n\n    setGridCloseObserver() {\n        let this_ = this;\n        const observer = new MutationObserver(function (mutations_list) {\n            console.log(mutations_list)\n            this_.actionMenu.hideALl();\n            observer.disconnect();\n            //if another one mutation observer has been started\n            // if (mutations_list.length > 1) {\n            //     observer.disconnect();\n            //     return;\n            // }\n\n            // console.log(mutations_list);\n\n            // let this__ =  this_;\n            // mutations_list.forEach(node => {\n            //     if (node.removedNodes.length > 0) {\n            //         // this__.actionMenu.hideALl();\n            //         // console.log('setGridCloseObserver');\n            //         observer.disconnect();\n            //     }\n            // })\n        });\n        observer.observe(document.getElementById(this.targetId), {subtree: false, childList: true});\n    }\n\n    prepareHtml() {\n        let pageContentHtml = document.getElementById(this.targetId);\n        pageContentHtml.innerHTML = \"\";\n        pageContentHtml.style.width = '100%'\n        pageContentHtml.classList.add('ag-theme-alpine');\n    }\n\n    getAgFilterModel() {\n        return this.gridOptions.api.getFilterModel();\n    }\n\n    restoreFilterModel(savedFilterModel) {\n        this.gridOptions.api.setFilterModel(savedFilterModel);\n    }\n\n    exportDisplyedDataToExcel() {\n        let agHeaders = [];\n        let agFields = [];\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agHeaders.push(element.colDef.headerName)));\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agFields.push(element.colDef.field)));\n        let agData = [];\n        this.gridOptions.api.forEachNode((rowNode, index) => {\n            agData[index] = rowNode.data;\n            let agDataTmp = Object.keys(agData[index])\n                .filter(key => agFields.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = agData[index][key];\n                    return obj;\n                }, {});\n            agData[index] = agDataTmp;\n        });\n\n        let excelData = [];\n        let tmpArray = [];\n        for (const elementAgData of agData) {\n            tmpArray = [];\n            for (const elementAgFields of agFields) {\n                for (const [key, value] of Object.entries(elementAgData)) {\n\n                    if (elementAgFields === key) {\n                        tmpArray.push(value)\n                    }\n                }\n            }\n            excelData.push(tmpArray);\n        }\n        //format text \"null, false, true values\"\n        for (let i = 0; i < excelData.length; i++) {\n            for (let j = 0; j < excelData[i].length; j++) {\n                if (excelData[i][j] === null) {\n                    excelData[i][j] = \"\";\n                }\n                if (excelData[i][j] === false) {\n                    excelData[i][j] = \"нет\";\n                }\n                if (excelData[i][j] === true) {\n                    excelData[i][j] = \"да\";\n                }\n            }\n        }\n\n        excelData.unshift(agHeaders);\n        let myTestXML = new _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__.myExcelXML(excelData, this.agName);\n        myTestXML.downLoad();\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/aggrid.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/delete_duplicates.js":
/*!*************************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/delete_duplicates.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createDeleteDuplicatesForm\": () => (/* binding */ createDeleteDuplicatesForm)\n/* harmony export */ });\n/* harmony import */ var _aggrid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aggrid */ \"./resources/js/cps_portal_table/page_content/aggrid.js\");\n/* harmony import */ var _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ag-grid-parameters */ \"./resources/js/cps_portal_table/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helper */ \"./resources/js/cps_portal_table/helper.js\");\n\n\n\n\n\nfunction createDeleteDuplicatesForm(idDiv) {\n    let duplicatesDelMenu = document.createElement('div');\n    duplicatesDelMenu.setAttribute(\"id\", \"duplicate-menu\");\n    duplicatesDelMenu.setAttribute('style', 'display:flex; flex-direction: column; height: 100%;');\n    duplicatesDelMenu.innerHTML = `\n                <div class='duplicate_menu_upper_part'>\n                     <div class=\"row p-2\">\n                            <div class=\"col-1\">\n                                <label for=\"equip_remain\" class=\"col-form-label\">Остается</label>\n                            </div>\n                            <div class=\"col-1\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_remain_id\"  name=\"equip_remain_id\" readonly>\n\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_remain\"  name=\"equip_remain\" readonly>\n\n                            </div>\n                     </div>\n\n                     <div class=\"row p-2\">\n                            <div class=\"col-1\">\n                                <label for=\"equip_to_del\" class=\"col-form-label\">Удаляется</label>\n                            </div>\n                            <div class=\"col-1\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_to_del_id\"  name=\"equip_to_del_id\" readonly>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"text\" class=\"form-control\" id=\"equip_to_del\"  name=\"equip_to_del\" readonly>\n                            </div>\n                     </div>\n                </div>\n                <div class=\"row p-2\">\n                    <div class=\"col-sm\">\n                        <button type=\"button\" class=\"btn btn-primary \" id=\"btn_equip_remain\">Оставить</button>\n                    </div>\n                    <div class=\"col-sm\">\n                        <button type=\"button\" class=\"btn btn-success\" id=\"btn_equip_to_del\">Удалить</button>\n                    </div>\n                    <div class=\"col-sm-8\">\n                        <div class=\"row justify-content-center\">\n                            <button type=\"button\" class=\"btn btn-danger\" id=\"btn_del_equip_duplicate\">Выполнить</button>\n                        </div>\n                    </div>\n                </div>\n                <div class='duplicate_menu_bottom_part' style=\"display:flex; height: 100%;\">\n                    <div id=\"duplicate_menu_bottom_part__left_agGrid\" \">\n                    </div>\n                    <div id=\"duplicate_menu_bottom_part__right_agGrid\" \">\n                    </div>\n                </div>\n        `\n\n    idDiv.prepend(duplicatesDelMenu);\n    let tableAgGridRemain = new _aggrid__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_1__.agGridParameters.uneditableEquipmentParameters.gridOptions,\n        _cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.config.api.getEquipmentALl, _cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.config.api.postPutDeleteEquipment,\n        _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_1__.agGridParameters.equipmentParameters.agName, this.actionMenu, undefined,\n        undefined, undefined, \"duplicate_menu_bottom_part__left_agGrid\");\n    let tableAgGridToDel = new _aggrid__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_ag_grid_parameters__WEBPACK_IMPORTED_MODULE_1__.agGridParameters.uneditableEquipmentParameters2.gridOptions,\n        _cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.config.api.getEquipmentALl, _cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.config.api.postPutDeleteEquipment,\n        _ag_grid_parameters__WEBPACK_IMPORTED_MODULE_1__.agGridParameters.equipmentParameters.agName, this.actionMenu, undefined,\n        undefined, undefined, 'duplicate_menu_bottom_part__right_agGrid');\n    document.querySelector('#btn_equip_remain').onclick = () => {\n        let selectedRow = tableAgGridRemain.getSelectedRow();\n        if (selectedRow !== undefined) {\n            document.querySelector('#equip_remain_id').value = selectedRow.id;\n            document.querySelector('#equip_remain').value = selectedRow.equip_name;\n        }\n\n    }\n    document.querySelector('#btn_equip_to_del').onclick = () => {\n        let selectedRow = tableAgGridToDel.getSelectedRow();\n        if (selectedRow !== undefined) {\n            document.querySelector('#equip_to_del_id').value = selectedRow.id;\n            document.querySelector('#equip_to_del').value = selectedRow.equip_name;\n        }\n\n    }\n    document.querySelector('#btn_del_equip_duplicate').onclick = () => {\n        let idEquipToDel = document.querySelector('#equip_to_del_id').value;\n        let idEquipRemain = document.querySelector('#equip_remain_id').value;\n        if (idEquipToDel === '' || idEquipRemain === '') {\n            throw ('empty idEquipToDel or idEquipRemain')\n        }\n        if (idEquipToDel === idEquipRemain) {\n            throw ('idEquipToDel is equal to idEquipRemain')\n        }\n        let requestData = {};\n        requestData.id_equip_to_del = idEquipToDel;\n        requestData.id_equip_remain = idEquipRemain;\n        requestData = (0,_helper__WEBPACK_IMPORTED_MODULE_3__.addCSRF)(requestData);\n        (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_2__.config.api.postDeleteEquipDuplicates, 'POST', requestData).then((e) => {\n\n        }).catch((e) => {\n            console.log(e);\n        });\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/delete_duplicates.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/exam-calendar.js":
/*!*********************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/exam-calendar.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createExamCalendarForm\": () => (/* binding */ createExamCalendarForm)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper */ \"./resources/js/cps_portal_table/helper.js\");\n\n\n\nfunction createExamCalendarForm(idDiv) {\n    let events = [];\n    (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getWorkersALl, 'GET').then((getWorkersData) => {\n        let fieldsToCheckRu = {\n            \"height_next\": 'Высота',\n            \"electrobez_next\": 'Электробез',\n            \"medcheck_next\": 'Медосмотр'\n        };\n        let idEvent = 0;\n        getWorkersData.forEach((workerData) => {\n            Object.keys(fieldsToCheckRu).forEach(function (key) {\n                if (workerData[key] !== null) {\n                    let workerCheckCalendarData = {\n                        id: undefined,\n                        title: undefined,\n                        start: undefined,\n                    }\n                    idEvent = ++idEvent;\n                    workerCheckCalendarData.id = idEvent;\n                    workerCheckCalendarData.title = workerData['fio'] + \" \" + fieldsToCheckRu[key];\n                    workerCheckCalendarData.start = workerData[key];\n                    events.push(workerCheckCalendarData);\n                }\n            });\n\n        });\n\n        let calendar = new FullCalendar.Calendar(idDiv, {\n            initialView: 'dayGridMonth',\n            events,\n        });\n        calendar.render();\n        (0,_helper__WEBPACK_IMPORTED_MODULE_1__.changePageTitle)(\"Календарь проверок\");\n    }).catch((e) => {\n        console.log(e);\n    });\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/exam-calendar.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/plan-graf-menu.js":
/*!**********************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/plan-graf-menu.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createPlanGrafForm\": () => (/* binding */ createPlanGrafForm)\n/* harmony export */ });\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_portal_table/lists.js\");\n\n\nfunction createPlanGrafForm(idPageContent) {\n    let menuPlanGraf = document.createElement('duplicate_menu_bottom_part__left_agGrid');\n    menuPlanGraf.setAttribute(\"id\", \"menuPlanGraf\");\n    menuPlanGraf.innerHTML = `\n                    <div class=\"d-inline\">\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"year_pl_gr\" class=\"col-form-label\">Год</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <input type=\"number\" class=\"form-control\" id=\"year_pl_gr\" required  name=\"year_pl_gr\">\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_approve_fio\" class=\"col-form-label\" >Утвердил</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"who_approve_fio\" required  name=\"who_approve_fio\">\n                                 </select>\n                            </div>\n                        </div>\n                        <div class=\"row p-2\">\n                            <div class=\"col-3\">\n                                <label for=\"who_assign_fio\" class=\"col-form-label\">Составл</label>\n                            </div>\n                            <div class=\"col-9\">\n                                 <select class=\"form-control\" id=\"who_assign_fio\" required name=\"who_assign_fio\">\n                                 </select>\n                            </div>\n                        </div>\n                    </div>\n            `\n    idPageContent.prepend(menuPlanGraf);\n    document.querySelector('#year_pl_gr').value = parseInt(new Date(new Date().setFullYear(new Date().getFullYear() + 1)).getFullYear());\n    let whoApproveFio = document.querySelector('#who_approve_fio');\n    let who_assign_fio = document.querySelector('#who_assign_fio');\n\n    _lists__WEBPACK_IMPORTED_MODULE_0__.lists.workers.all.forEach((worker) => {\n        if (worker.worker_position.includes('цех')) {\n            whoApproveFio.add(new Option(worker.fio, worker.tab_nom));\n        }\n    });\n    _lists__WEBPACK_IMPORTED_MODULE_0__.lists.workers.all.forEach((worker) => {\n        if (worker.worker_position.includes('Мастер') || worker.worker_position.includes('участ')) {\n            who_assign_fio.add(new Option(worker.fio, worker.tab_nom));\n        }\n    });\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/plan-graf-menu.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/page_content/reports.js":
/*!***************************************************************!*\
  !*** ./resources/js/cps_portal_table/page_content/reports.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReportsForm\": () => (/* binding */ createReportsForm)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n\n\n\nfunction createReportsForm(idPageContent) {\n    let reportList = document.createElement('ul');\n    idPageContent.appendChild(reportList);\n\n    addLinkToReports(\"Нормы запаса КИПиСА\", _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportNormiZapasaKip, reportList);\n    addLinkToReports(\"Потребность МТР\", _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportPotrebnostMtr, reportList);\n    addLinkToReports(\"Все данные\", _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportAllData, reportList);\n    addLinkToReports(\"Отказы извещателей \", _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.getExportOtkaziIzveshatelei, reportList);\n}\n\nfunction addLinkToReports(linkName, LinkURL, reportList) {\n    let exportTestLiTag = document.createElement('li');\n    exportTestLiTag.classList.add(\"export_list-item\");\n    reportList.appendChild(exportTestLiTag);\n    let exportTestAtag = document.createElement('a');\n    exportTestLiTag.appendChild(exportTestAtag);\n    exportTestAtag.innerText = linkName;\n    exportTestAtag.href = LinkURL;\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/page_content/reports.js?");

/***/ }),

/***/ "./resources/js/cps_portal_table/side-bar.js":
/*!***************************************************!*\
  !*** ./resources/js/cps_portal_table/side-bar.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SideBar)\n/* harmony export */ });\n/* harmony import */ var _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page_content/aggrid.js */ \"./resources/js/cps_portal_table/page_content/aggrid.js\");\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_portal_table/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_portal_table/helper.js\");\n/* harmony import */ var _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/ag-grid-parameters.js */ \"./resources/js/cps_portal_table/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.js */ \"./resources/js/cps_portal_table/app.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_portal_table/lists.js\");\n/* harmony import */ var _page_content_exam_calendar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./page_content/exam-calendar */ \"./resources/js/cps_portal_table/page_content/exam-calendar.js\");\n/* harmony import */ var _page_content_delete_duplicates__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./page_content/delete_duplicates */ \"./resources/js/cps_portal_table/page_content/delete_duplicates.js\");\n/* harmony import */ var _page_content_plan_graf_menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./page_content/plan-graf-menu */ \"./resources/js/cps_portal_table/page_content/plan-graf-menu.js\");\n/* harmony import */ var _page_content_reports__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./page_content/reports */ \"./resources/js/cps_portal_table/page_content/reports.js\");\n/* harmony import */ var _page_content_act_investigation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./page_content/act-investigation */ \"./resources/js/cps_portal_table/page_content/act-investigation.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass SideBar {\n    tableAgGrid;\n    actionMenu;\n    modalForm;\n    cashedAgGridBuildings = undefined;\n    cashedAgGridEquipment = undefined;\n    pageContent;\n\n    setPermissions() {\n        if (_app_js__WEBPACK_IMPORTED_MODULE_4__.userRole === \"super-user\") {\n            document.querySelector('.sidebar__edit-equip').hidden = false;\n            document.querySelector('.sidebar__edit-buildings').hidden = false;\n            document.querySelector('.sidebar__export-reports').hidden = false;\n            document.querySelector('.sidebar__export-plan_grafici').hidden = false;\n            document.querySelector('.sidebar__edit-plan_grafici').hidden = false;\n            document.querySelector('.sidebar__edit-equip-in-building').hidden = false;\n            // document.querySelector('.sidebar__delete-duplicates').hidden = false;\n            // document.querySelector('.sidebar__edit-schedule').hidden = false;\n            // document.querySelector('.sidebar__edit-schedule-calendar').hidden = false;\n            // document.querySelector('.sidebar__warehouse-workers').hidden = false;\n            // document.querySelector('.sidebar__warehouse-reminders').hidden = false;\n            // document.querySelector('.sidebar__exam').hidden = false;\n            document.querySelector('.sidebar__act_investigate').hidden = false;\n        } else {\n            document.querySelector('.sidebar__edit-equip-in-building').hidden = false;\n            // document.querySelector('.sidebar__exam').hidden = false;\n            this.cashedAgGridBuildings = _lists__WEBPACK_IMPORTED_MODULE_5__.lists.buildings.all;\n            this.cashedAgGridEquipment = _lists__WEBPACK_IMPORTED_MODULE_5__.lists.equipment.all;\n            // document.querySelector('.sidebar__edit-plan_grafici').hidden = false;\n        }\n    }\n\n    setButtonsActions() {\n        document.getElementById('sidebarCollapse').onclick = () => {\n            document.getElementById('sidebar').classList.toggle(\"active\");\n        };\n\n        document.querySelector('.sidebar__warehouse-reminders').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.warehouseRemainsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWarehouseRemainsALl, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.warehouseRemainsParameters.agName, this.actionMenu);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setImportRemindsAction();\n            this.actionMenu.showImportRemindsButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Текущие остатки по спецодежде (данные из бухгалтерии)\");\n        };\n\n        document.querySelector('.sidebar__warehouse-workers').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsWarehouseParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWorkersALl, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsWarehouseParameters.agName, this.actionMenu);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"СИЗ работников\");\n        };\n\n        document.querySelector('.sidebar__edit-schedule').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsScheduleParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWorkersALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteWorkers,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsScheduleParameters.agName, this.actionMenu);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setExportWorkersChecksDatesJsonAction();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Проверки работников. Красное - просрочено\");\n        };\n        document.querySelector('.sidebar__edit-equip').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getEquipmentALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteEquipment,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.equipmentParameters.agName, this.actionMenu, undefined,\n                undefined, undefined);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setAddButtonActionForNewEquipment();\n            this.actionMenu.setEquipUsageAction();\n            this.actionMenu.showPlusAndExcelButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Оборудование\");\n        };\n\n        document.querySelector('.sidebar__edit-buildings').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsParameters.agName, this.actionMenu, undefined,\n                undefined, undefined);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setAddButtonActionForNewBuilding();\n            this.actionMenu.showPlusAndExcelButton();\n            this.actionMenu.setExportPassportAction();\n            this.actionMenu.setExportTepAction();\n            this.actionMenu.setCopyPathToProjectButtonAction();\n\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Здания\");\n        };\n        document.querySelector('.sidebar__edit-equip-in-building').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsALl, _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.postPutDeleteBuildings,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsParameters.agName, this.actionMenu, undefined,\n                undefined, this.cashedAgGridBuildings);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.showExcelButton();\n            this.actionMenu.setEditInnerAction();\n            this.actionMenu.setCopyEquipToBuildingAction();\n            this.actionMenu.setReturnToBuildingsAction();\n\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Оборудование в здании\");\n        };\n\n\n        document.querySelector('.sidebar__export-reports').onclick = () => {\n            this.actionMenu.hideALl();\n            this.clearPageContent();\n            (0,_page_content_reports__WEBPACK_IMPORTED_MODULE_9__.createReportsForm)(this.pageContent);\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Отчеты\");\n        };\n\n        document.querySelector('.sidebar__edit-plan_grafici').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsPlanGrafParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsPlanGrafOrderedByPlGrafNumb, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.buildingsPlanGrafParameters.agName, this.actionMenu, undefined,\n                undefined, undefined);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setEditInnerMonthAction();\n            this.actionMenu.setEditSequencePlanGrafAction();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"План-графики редактирование\");\n        };\n\n        document.querySelector('.sidebar__export-plan_grafici').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsPlanGrafikParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getBuildingsPlanGraf, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.uneditableBuildingsPlanGrafikParameters.agName, this.actionMenu, undefined,\n                undefined, undefined);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setExportPlanGrafAction();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"План-графики экспорт\");\n            (0,_page_content_plan_graf_menu__WEBPACK_IMPORTED_MODULE_8__.createPlanGrafForm)(this.pageContent);\n        };\n\n        document.querySelector('.sidebar__delete-duplicates').onclick = () => {\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Удаление дубликатов оборудования\");\n            this.clearPageContent();\n            (0,_page_content_delete_duplicates__WEBPACK_IMPORTED_MODULE_7__.createDeleteDuplicatesForm)(this.pageContent);\n        };\n\n        document.querySelector('.sidebar__edit-schedule-calendar').onclick = () => {\n            this.actionMenu.hideALl();\n            this.clearPageContent();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Расписание проверок\");\n            (0,_page_content_exam_calendar__WEBPACK_IMPORTED_MODULE_6__.createExamCalendarForm)(this.pageContent);\n        };\n\n        document.querySelector('.sidebar__act_investigate').onclick = () => {\n            this.actionMenu.hideALl();\n            this.clearPageContent();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Создание акта\");\n            let exam = new _page_content_act_investigation__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this.pageContent);\n        };\n\n\n    }\n\n    clearPageContent() {\n        while (this.pageContent.firstChild) {\n            this.pageContent.removeChild(this.pageContent.firstChild);\n        }\n        this.pageContent.className = '';\n    }\n\n    linksTableAgGridWithActionMenuAndModalForm() {\n        this.actionMenu.tableAgGrid = this.tableAgGrid;\n        this.modalForm.tableAgGrid = this.tableAgGrid;\n    }\n\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_portal_table/side-bar.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/cps_portal_table/app.js");
/******/ 	
/******/ })()
;
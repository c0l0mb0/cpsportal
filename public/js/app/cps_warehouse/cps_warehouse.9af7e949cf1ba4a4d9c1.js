/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/cps_warehouse/action-menu.js":
/*!***************************************************!*\
  !*** ./resources/js/cps_warehouse/action-menu.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActionMenu)\n/* harmony export */ });\nclass ActionMenu {\n    tableAgGrid;\n    modalForm;\n    newTableRow;\n    deleteTableRow;\n    deleteAction;\n    exportExcel;\n    editTableRow;\n    addButtonActionEventLister;\n    copyEquipToBuildingEventLister;\n    returnButtonAction;\n    importReminds;\n\n\n    hideALl() {\n        this.newTableRow.style.display = 'none';\n        this.deleteTableRow.style.display = 'none';\n        this.exportExcel.style.display = 'none';\n        this.editTableRow.style.display = 'none';\n        this.importReminds.style.display = 'none';\n    }\n\n    showImportRemindsButton() {\n        this.importReminds.style.display = 'block';\n    }\n\n    setImportRemindsAction() {\n        this.importReminds.removeEventListener('click', this.importRemindsButtonActionEventLister);\n        this.importReminds.addEventListener('click', this.importRemindsButtonActionEventLister);\n    }\n\n    importRemindsButtonActionEventLister() {\n        console.log('importRemindsButtonActionEventLister');\n    }\n    setExportExcelAction() {\n        this.exportExcel.onclick = () => {\n            this.tableAgGrid.exportDisplyedDataToExcel();\n        };\n    }\n\n\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/action-menu.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/app.js":
/*!*******************************************!*\
  !*** ./resources/js/cps_warehouse/app.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"userRole\": () => (/* binding */ userRole)\n/* harmony export */ });\n/* harmony import */ var _action_menu_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./action-menu.js */ \"./resources/js/cps_warehouse/action-menu.js\");\n/* harmony import */ var _side_bar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./side-bar.js */ \"./resources/js/cps_warehouse/side-bar.js\");\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal.js */ \"./resources/js/cps_warehouse/modal.js\");\n/* harmony import */ var _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/ag-grid-parameters.js */ \"./resources/js/cps_warehouse/page_content/ag-grid-parameters.js\");\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cps-portal-dao */ \"./resources/js/cps_warehouse/cps-portal-dao.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lists */ \"./resources/js/cps_warehouse/lists.js\");\n/* harmony import */ var _idle_timer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./idle-timer */ \"./resources/js/cps_warehouse/idle-timer.js\");\n\n\n\n\n\n\n\n\nlet userRole = '';\n\ngetAllValuesForLists();\n\nfunction init() {\n\n    (0,_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.initializeAgGridParameters)();\n\n    let actionMenu = new _action_menu_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    let modalForm = new _modal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    let sideBar = new _side_bar_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\n    // //set objects links to each other\n    modalForm.actionMenu = actionMenu;\n    actionMenu.modalForm = modalForm;\n    sideBar.actionMenu = actionMenu;\n    sideBar.modalForm = modalForm;\n    sideBar.pageContent = document.querySelector('#page-content');\n    sideBar.setButtonsActions();\n    //\n    _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.actionMenu = actionMenu;\n    //\n    // //assign links to buttons\n    actionMenu.newTableRow = document.querySelector('.new-table-row');\n    actionMenu.deleteTableRow = document.querySelector('.delete-table-row');\n    actionMenu.exportExcel = document.querySelector('.excel-export');\n    actionMenu.editTableRow = document.querySelector('.edit-table-row');\n    actionMenu.importReminds = document.querySelector('.import-reminds ');\n\n    let idleTimer = new _idle_timer__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n}\n\n\nfunction getAllValuesForLists() {\n\n    (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_4__.config.api.getWorkersALl, 'GET').then((workersALl) => {\n        _lists__WEBPACK_IMPORTED_MODULE_5__.lists.workers.all = workersALl;\n    })\n        .then(() => {\n        init();\n    }).catch((e) => {\n        console.log(e);\n    });\n\n\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/app.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/cps-portal-dao.js":
/*!******************************************************!*\
  !*** ./resources/js/cps_warehouse/cps-portal-dao.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"config\": () => (/* binding */ config),\n/* harmony export */   \"downloadFile\": () => (/* binding */ downloadFile),\n/* harmony export */   \"httpRequest\": () => (/* binding */ httpRequest)\n/* harmony export */ });\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_warehouse/helper.js\");\n\n\nlet url = window.location\nlet splitUrl = url.toString().split('/');\nsplitUrl = splitUrl.slice(0, -1);\nlet UrlPathWithoutLastDirectory = splitUrl.join(\"/\")\n\nlet config = {\n    api: {\n        getWarehouseRemainsALl: '/api/warehouse-remains-all',\n        postPutDeleteWorkers: '/api/workers',\n        getWorkersALl: '/api/workers-all',\n        postLogOut: '/logout',\n        loginURL: '/login',\n    }\n};\n\nObject.keys(config.api).forEach(key => {\n    config.api[key] = UrlPathWithoutLastDirectory + config.api[key];\n});\n\nfunction httpRequest(url, method, data = null, idRow = null) {\n    if (idRow !== null) url += '/' + idRow;\n\n    return new Promise(function (resolve, reject) {\n        let oReq = new XMLHttpRequest();\n        // oReq.responseType = 'json'; ie11 compatibility\n        oReq.open(method, url, true);\n        oReq.responseType = \"json\";\n        oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\n        oReq.onload = function () {\n            if (oReq.status >= 200 && oReq.status < 300) {\n                if (_helper_js__WEBPACK_IMPORTED_MODULE_0__.isIE11browser) { //ie11 compatibility\n                    let res = JSON.parse(oReq.response);\n                    resolve(res);\n                } else {\n                    let res = JSON.stringify(oReq.response);\n                    res = JSON.parse(res);\n                    resolve(res);\n                }\n            } else {\n                reject({\n                    status: oReq.status,\n                    statusText: oReq.statusText\n                });\n            }\n        };\n        oReq.onerror = function () {\n            reject({\n                status: oReq.status,\n                statusText: oReq.statusText\n            });\n        };\n        oReq.send(JSON.stringify(data));\n    });\n}\n\nfunction downloadFile(url, method, data = null) {\n    let oReq = new XMLHttpRequest();\n    oReq.open(method, url, true);\n    oReq.responseType = \"blob\";\n    oReq.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    oReq.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n    oReq.onload = function (event) {\n        let blob = oReq.response;\n        let filename = '';\n        let disposition = oReq.getResponseHeader('Content-Disposition');\n        if (disposition && disposition.indexOf('attachment') !== -1) {\n            let filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            let matches = filenameRegex.exec(disposition);\n            if (matches != null && matches[1]) {\n                filename = matches[1].replace(/['\"]/g, '');\n            }\n        }\n\n        let link = document.createElement('a');\n        link.href = window.URL.createObjectURL(blob);\n        link.download = decodeURI(filename);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(url);\n    };\n    oReq.onerror = function (event) {\n        console.log(event);\n    };\n\n    oReq.send(JSON.stringify(data));\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/cps-portal-dao.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/helper.js":
/*!**********************************************!*\
  !*** ./resources/js/cps_warehouse/helper.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addCSRF\": () => (/* binding */ addCSRF),\n/* harmony export */   \"changePageTitle\": () => (/* binding */ changePageTitle),\n/* harmony export */   \"getRole\": () => (/* binding */ getRole),\n/* harmony export */   \"isIE11browser\": () => (/* binding */ isIE11browser)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_warehouse/cps-portal-dao.js\");\n\n\nfunction changePageTitle(page_title) {\n    document.getElementById('page-title').textContent = page_title;\n    document.title = page_title;\n}\n\nfunction addCSRF(objectData) {\n    let CSRF = document.getElementsByName('csrf-token')[0].getAttribute('content');\n    if (CSRF !== undefined && CSRF !== \"\") {\n        objectData._token = CSRF;\n        return objectData;\n    }\n}\n\nfunction isIE11() {\n    let ua = window.navigator.userAgent;\n    return ua.indexOf('Trident/') > 0;\n};\n\nfunction getRole() {\n    return (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.config.api.getUserRole, 'GET');\n}\n\n\nconst isIE11browser = isIE11();\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/helper.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/idle-timer.js":
/*!**************************************************!*\
  !*** ./resources/js/cps_warehouse/idle-timer.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IdleTimer)\n/* harmony export */ });\nclass IdleTimer {\n    IDLE_timerID = undefined;\n\n    constructor() {\n\n        window.onload = this.resetTimer.bind(this);\n        window.onmousemove = this.resetTimer.bind(this);\n        window.onclick = this.resetTimer.bind(this);\n        window.onkeypress = this.resetTimer.bind(this);\n\n        this.setIDLE_timer();\n    }\n\n    setIDLE_timer() {\n        this.IDLE_timerID = setTimeout(this.logOut, 7000000);\n    }\n\n    logOut() {\n        alert(\"Вы отключены от сервера из-за бездействия\");\n        let _this = this;\n        window.location.replace(\"http://srvyasutp5/cpsequip\");\n        // let tokenCPS = addCSRF({});\n        // httpRequest(config.api.postLogOut, 'POST', tokenCPS).then((response) => {\n        //     window.location.href = config.api.loginURL;\n        //     _this.IDLE_timerID = undefined;\n        // })\n    }\n\n    resetTimer() {\n        clearTimeout(this.IDLE_timerID);\n        this.setIDLE_timer();\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/idle-timer.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/lists.js":
/*!*********************************************!*\
  !*** ./resources/js/cps_warehouse/lists.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lists\": () => (/* binding */ lists)\n/* harmony export */ });\nlet lists = {\n    workers: {\n        all: {},\n        sex: [\n            'Муж.',\n            'Жен.',\n        ],\n        height: [\n            '152-164',\n            '170-176',\n            '182-188',\n            '194-200',\n        ],\n        template_card: [\n            'Эл.монтер по эл.об',\n            'Инженер',\n            'Мастер по КАиТ',\n            'Эл.монтер ОПС',\n            'Эл.монтер по эл.обор.',\n            'Электромеханик по р.и обсл.МО',\n            'Инж-электр.НУр',\n            'Наладчик КИПиА',\n            'Слесарь КИПиА',\n            'Инженер-электроник',\n            'Кладовщик',\n            'Эл.механик',\n            'Наладчик',\n            'Начальник',\n        ],\n    },\n}\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/lists.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/modal.js":
/*!*********************************************!*\
  !*** ./resources/js/cps_warehouse/modal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ModalForm)\n/* harmony export */ });\n\nclass ModalForm {\n    actionMenu;\n    tableAgGrid;\n    modalTableAgGrid;\n    agBuildingId;\n    agBuildingName;\n    modalHtml = {};\n    putId;\n    ui = {\n        modalForm: {\n            caption: document.getElementById('modal__caption'),\n            modal: document.getElementById('modal__new-entry'),\n            modalBody: document.querySelector('.modal__form__body'),\n            modalForm: document.querySelector('.modal-form'),\n            form: document.getElementById('form__new-entry'),\n            error: document.getElementById('form__error'),\n            listsArea: undefined,\n            group_1: undefined,\n            group_2: undefined,\n            kind_app: undefined,\n            kind_app_second: undefined,\n\n        },\n        modalContainer: document.querySelector('.modal-container'),\n        showModalButton: document.querySelector('.new-table-row'),\n        modalDialog: document.querySelector('.modal-dialog'),\n        requestUrl: undefined,\n        requestMethod: 'POST',\n        modalFormPurpose: undefined,\n    };\n\n\n    constructor() {\n        this.initiateModalHtml();\n    }\n\n\n    initiateModalHtml() {\n\n    }\n}\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/modal.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag-grid-parameters.js":
/*!***********************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag-grid-parameters.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"agGridParameters\": () => (/* binding */ agGridParameters),\n/* harmony export */   \"initializeAgGridParameters\": () => (/* binding */ initializeAgGridParameters)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao */ \"./resources/js/cps_warehouse/cps-portal-dao.js\");\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helper */ \"./resources/js/cps_warehouse/helper.js\");\n/* harmony import */ var _ag_grid_classes_numeric_cell_editor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ag_grid_classes/numeric-cell-editor.js */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/numeric-cell-editor.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_warehouse/lists.js\");\n/* harmony import */ var _ag_grid_classes_check_box_render__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ag_grid_classes/check-box-render */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/check-box-render.js\");\n/* harmony import */ var _app__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app */ \"./resources/js/cps_warehouse/app.js\");\n/* harmony import */ var _ag_grid_classes_date_formatter__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ag_grid_classes/date-formatter */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/date-formatter.js\");\n/* harmony import */ var _ag_grid_classes_string_date_editor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ag_grid_classes/string-date-editor */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/string-date-editor.js\");\n/* harmony import */ var _ag_grid_classes_cellStyleTimeToExam__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ag_grid_classes/cellStyleTimeToExam */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/cellStyleTimeToExam.js\");\n\n\n\n\n\n\n\n\n\n\n\nlet agGridParameters = {\n    agOuterId: undefined,\n    actionMenu: undefined,\n    warehouseRemainsParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    sortable: true\n                },\n                {\n                    headerName: \"Название ОС\",\n                    field: \"siz_item\",\n                    minWidth: 40,\n                    tooltipField: 'siz_item',\n                    sortable: true\n                },\n                {\n                    headerName: \"Дата оприходования\",\n                    field: \"posting\",\n                    minWidth: 40,\n                    tooltipField: 'posting',\n                    sortable: true\n                },\n                {\n                    headerName: \"ЗапланирДатаВыбытия\",\n                    field: \"disposal\",\n                    minWidth: 40,\n                    tooltipField: 'disposal',\n                    sortable: true\n                },\n\n\n\n            ],\n            rowSelection: 'single',\n            suppressCopyRowsToClipboard: true,\n            defaultColDef: {\n                resizable: true,\n                editable: false,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers, \"PUT\", (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'warehouseRemainsParameters',\n    },\n\n    cpsWarehouseParameters: {\n        gridOptions: {\n            columnDefs: [\n                {\n                    headerName: \"ФИО\",\n                    field: \"fio\",\n                    minWidth: 130,\n                    tooltipField: 'fio',\n                    editable: false,\n                    sortable: true\n                },\n                {\n                    headerName: \"N табеля\",\n                    field: \"tab_nom\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom',\n                    editable: false,\n                },\n                {\n                    headerName: \"N табеляСтарый\",\n                    field: \"tab_nom_old\",\n                    minWidth: 40,\n                    tooltipField: 'tab_nom_old',\n                    editable: false,\n                },\n                {\n                    headerName: \"Должность\",\n                    field: \"worker_position\",\n                    minWidth: 100,\n                    tooltipField: 'worker_position',\n                    editable: false,\n                },\n                {\n                    headerName: \"ШаблонКарточки\",\n                    field: \"template_card\",\n                    minWidth: 100,\n                    tooltipField: 'template_card',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Пол\",\n                    field: \"sex\",\n                    minWidth: 60,\n                    tooltipField: 'sex',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Рост\",\n                    field: \"height\",\n                    minWidth: 60,\n                    tooltipField: 'height',\n                    cellEditor: 'agSelectCellEditor',\n                    singleClickEdit: true,\n                    cellEditorParams: {\n                        values: []\n                    }\n                },\n                {\n                    headerName: \"Одежда\",\n                    field: \"clothes_size\",\n                    minWidth: 60,\n                    tooltipField: 'clothes_size',\n                },\n                {\n                    headerName: \"Обувь\",\n                    field: \"shoes_size\",\n                    minWidth: 60,\n                    tooltipField: 'shoes_size',\n                },\n                {\n                    headerName: \"Шапка\",\n                    field: \"hat_size\",\n                    minWidth: 60,\n                    tooltipField: 'hat_size',\n                },\n                {\n                    headerName: \"РаботаДатаПоступления\",\n                    field: \"job_start\",\n                    minWidth: 60,\n                    tooltipField: 'job_start',\n                },\n\n\n            ],\n            rowSelection: 'single',\n            suppressCopyRowsToClipboard: true,\n            defaultColDef: {\n                resizable: true,\n                editable: true,\n                menuTabs: ['filterMenuTab'],\n            },\n            enableBrowserTooltips: true,\n            onCellValueChanged: function (event) {\n                (0,_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(_cps_portal_dao__WEBPACK_IMPORTED_MODULE_0__.config.api.postPutDeleteWorkers, \"PUT\", (0,_helper__WEBPACK_IMPORTED_MODULE_1__.addCSRF)(event.data), event.data.id).catch((rejected) => console.log(rejected));\n            },\n            onCellEditingStarted: function (event) {\n\n            },\n            onCellEditingStopped: function () {\n            },\n            onRowSelected: function () {\n            },\n            onFirstDataRendered: (params) => {\n                params.api.sizeColumnsToFit();\n            }\n        },\n        agName: 'cpsWarehouseParameters',\n    },\n}\n\nfunction initializeAgGridParameters() {\n\n    agGridParameters.cpsWarehouseParameters.gridOptions.columnDefs.forEach((columnDefs) => {\n        if (columnDefs.field === 'sex') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.sex;\n        }\n        if (columnDefs.field === 'height') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.height;\n        }\n        if (columnDefs.field === 'template_card') {\n            columnDefs.cellEditorParams.values = _lists__WEBPACK_IMPORTED_MODULE_3__.lists.workers.template_card;\n        }\n    });\n\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag-grid-parameters.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/cellStyleTimeToExam.js":
/*!****************************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/cellStyleTimeToExam.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StyleTimeToExam)\n/* harmony export */ });\nfunction StyleTimeToExam(params) {\n    const todayDate = Date.now();\n    const dateWorkerCheck  = Date.parse(params.value);\n    if (todayDate > dateWorkerCheck) {\n        return { backgroundColor: '#f7ad97'};\n    } else {\n        return null;\n    }\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/cellStyleTimeToExam.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/check-box-render.js":
/*!*************************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/check-box-render.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CheckboxRenderer)\n/* harmony export */ });\nclass CheckboxRenderer {\n    init(params) {\n        this.params = params;\n        this.eGui = document.createElement('input');\n        this.eGui.type = 'checkbox';\n        this.eGui.checked = params.value;\n\n\n        if (params.colDef.editable !== false) {\n            this.checkedHandler = this.checkedHandler.bind(this);\n            this.eGui.addEventListener('click', this.checkedHandler);\n            // return this.cancelBeforeStart = true;\n        } else {\n            this.eGui.addEventListener('click', (e)=>{\n                e.preventDefault();\n            })\n        }\n    }\n\n    checkedHandler(e) {\n        let checked = e.target.checked;\n        let colId = this.params.column.colId;\n        this.params.node.setDataValue(colId, checked);\n    }\n\n    getGui() {\n        return this.eGui;\n    }\n\n    destroy() {\n        this.eGui.removeEventListener('click', this.checkedHandler);\n    }\n\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/check-box-render.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/date-formatter.js":
/*!***********************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/date-formatter.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateFormatter)\n/* harmony export */ });\nfunction DateFormatter(params) {\n    if (params.value !== undefined && params.value !== null && params.value.includes('-') === true) {\n        let dateAsString = params.value;\n        let dateParts = dateAsString.split('-');\n        return `${dateParts[2]}.${dateParts[1]}.${dateParts[0]}`;\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/date-formatter.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/excel-export.js":
/*!*********************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/excel-export.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"myExcelXML\": () => (/* binding */ myExcelXML)\n/* harmony export */ });\nlet myExcelXML = (function () {\n    let Workbook, WorkbookStart = '<?xml version=\"1.0\"?><ss:Workbook  ' +\n        'xmlns=\"urn:schemas-microsoft-com:office:spreadsheet\" ' +\n        'xmlns:o=\"urn:schemas-microsoft-com:office:office\" ' +\n        'xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ' +\n        'xmlns:ss=\"urn:schemas-microsoft-com:office:spreadsheet\" xmlns:html=\"http://www.w3.org/TR/REC-html40\">';\n    const WorkbookEnd = '</ss:Workbook>';\n    let fs, SheetName = 'SHEET 1', styleID = 1, columnWidth = 80, fileName = \"data\", uri, link;\n\n    class myExcelXML {\n        constructor(o, tableName) {\n            fileName = tableName + \".xls\";\n            let respArray = o;\n            let finalDataArray = [];\n\n            for (let i = 0; i < respArray.length; i++) {\n                finalDataArray.push(flatten(respArray[i]));\n            }\n\n            let s = JSON.stringify(finalDataArray);\n            fs = s.replace(/&/gi, '&amp;');\n        }\n\n        downLoad() {\n            const Worksheet = myXMLWorkSheet(SheetName, fs);\n            Workbook = WorkbookStart + Worksheet + WorkbookEnd;\n            let fileNameToDownload = fileName;\n            let blob = new Blob([Workbook], {type: 'text/xls'});\n            if (window.navigator.msSaveOrOpenBlob) {\n                window.navigator.msSaveBlob(blob, fileNameToDownload);\n            } else {\n                let elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(blob);\n                elem.download = fileNameToDownload;\n                document.body.appendChild(elem);\n                elem.click();\n                document.body.removeChild(elem);\n            }\n        }\n\n        get fileName() {\n            return fileName;\n        }\n\n        set fileName(n) {\n            fileName = n;\n        }\n\n        get SheetName() {\n            return SheetName;\n        }\n\n        set SheetName(n) {\n            SheetName = n;\n        }\n\n        get styleID() {\n            return styleID;\n        }\n\n        set styleID(n) {\n            styleID = n;\n        }\n    }\n\n    const myXMLWorkSheet = function (name, o) {\n        const Table = myXMLTable(o);\n        let WorksheetStart = '<ss:Worksheet ss:Name=\"' + name + '\">';\n        const WorksheetEnd = '</ss:Worksheet>';\n\n        return WorksheetStart + Table + WorksheetEnd;\n    }\n\n    const myXMLTable = function (o) {\n        let TableStart = '<ss:Table>';\n        const TableEnd = '</ss:Table>';\n\n        const tableData = JSON.parse(o);\n\n        if (tableData.length > 0) {\n            const columnHeader = Object.keys(tableData[0]);\n            let rowData;\n            for (let i = 0; i < columnHeader.length; i++) {\n                TableStart += myXMLColumn(columnWidth);\n\n            }\n            for (let j = 0; j < tableData.length; j++) {\n                rowData += myXMLRow(tableData[j], columnHeader);\n            }\n            // TableStart += myXMLHead(1, columnHeader);  //columns numbers\n            TableStart += rowData;\n        }\n\n        return TableStart + TableEnd;\n    }\n\n    const myXMLColumn = function (w) {\n        return '<ss:Column ss:AutoFitWidth=\"0\" ss:Width=\"' + w + '\"/>';\n    }\n\n\n    const myXMLHead = function (id, h) {\n        let HeadStart = '<ss:Row ss:StyleID=\"' + id + '\">';\n        const HeadEnd = '</ss:Row>';\n\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(h[i].toUpperCase());\n            HeadStart += Cell;\n        }\n\n        return HeadStart + HeadEnd;\n    }\n\n    const myXMLRow = function (r, h) {\n        let RowStart = '<ss:Row>';\n        const RowEnd = '</ss:Row>';\n        for (let i = 0; i < h.length; i++) {\n            const Cell = myXMLCell(r[h[i]]);\n            RowStart += Cell;\n        }\n\n        return RowStart + RowEnd;\n    }\n\n    const myXMLCell = function (n) {\n        let CellStart = '<ss:Cell>';\n        const CellEnd = '</ss:Cell>';\n\n        const Data = myXMLData(n);\n        CellStart += Data;\n\n        return CellStart + CellEnd;\n    }\n\n    const myXMLData = function (d) {\n        let DataStart = '<ss:Data ss:Type=\"String\">';\n        const DataEnd = '</ss:Data>';\n\n        return DataStart + d + DataEnd;\n    }\n\n    const flatten = function (obj) {\n        var obj1 = JSON.parse(JSON.stringify(obj));\n        const obj2 = JSON.parse(JSON.stringify(obj));\n        if (typeof obj === 'object') {\n            for (var k1 in obj2) {\n                if (obj2.hasOwnProperty(k1)) {\n                    if (typeof obj2[k1] === 'object' && obj2[k1] !== null) {\n                        delete obj1[k1]\n                        for (var k2 in obj2[k1]) {\n                            if (obj2[k1].hasOwnProperty(k2)) {\n                                obj1[k1 + '-' + k2] = obj2[k1][k2];\n                            }\n                        }\n                    }\n                }\n            }\n            var hasObject = false;\n            for (var key in obj1) {\n                if (obj1.hasOwnProperty(key)) {\n                    if (typeof obj1[key] === 'object' && obj1[key] !== null) {\n                        hasObject = true;\n                    }\n                }\n            }\n            if (hasObject) {\n                return flatten(obj1);\n            } else {\n                return obj1;\n            }\n        } else {\n            return obj1;\n        }\n    }\n\n    return myExcelXML;\n})();\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/excel-export.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/local.ru.js":
/*!*****************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/local.ru.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AG_GRID_LOCALE_RU\": () => (/* binding */ AG_GRID_LOCALE_RU)\n/* harmony export */ });\nconst AG_GRID_LOCALE_RU = {\n    // for filter panel\n    page: 'Страница',\n    more: 'ещё',\n    to: 'к',\n    of: 'из',\n    next: 'Следующая',\n    last: 'Последняя',\n    first: 'Первая',\n    previous: 'Предыдущая',\n    loadingOoo: 'Загрузка...',\n\n    // for set filter\n    selectAll: 'Выделить всё',\n    searchOoo: 'Поиск...',\n    blanks: 'Ничего не найдено',\n\n    // for number filter and text filter\n    filterOoo: 'Фильтровать...',\n    applyFilter: 'Применить фильтр...',\n    equals: 'Равно',\n    notEqual: 'Не равно',\n\n    // for number filter\n    lessThan: 'Меньше чем',\n    greaterThan: 'Больше чем',\n    lessThanOrEqual: 'Меньше или равно',\n    greaterThanOrEqual: 'Больше или равно',\n    inRange: 'В промежутке',\n\n    // for text filter\n    contains: 'Содержит',\n    notContains: 'Не содержит',\n    startsWith: 'Начинается с',\n    endsWith: 'Заканчивается',\n\n    // filter conditions\n    andCondition: '\"И\"',\n    orCondition: '\"ИЛИ\"',\n\n    // the header of the default group column\n    group: 'Группа',\n\n    // tool panel\n    columns: 'Столбцы',\n    filters: 'Фильтры',\n    rowGroupColumns: 'Столбцы группировки по строкам',\n    rowGroupColumnsEmptyMessage: 'Перетащите сюда для группировки по строкам',\n    valueColumns: 'Столбцы со значениями',\n    pivotMode: 'Режим сводной таблицы',\n    groups: 'Группы',\n    values: 'Значения',\n    pivots: 'Заголовки столбцов',\n    valueColumnsEmptyMessage: 'Перетащите сюда для агрегации',\n    pivotColumnsEmptyMessage: 'Перетащите сюда, чтобы задать заголовки столбам',\n    toolPanelButton: 'Панель инструментов',\n\n    // other\n    noRowsToShow: 'Нет данных',\n\n    // enterprise menu\n    pinColumn: 'Закрепить колонку',\n    valueAggregation: 'Агрегация по значению',\n    autosizeThiscolumn: 'Автоматически задавать размер этой колонки',\n    autosizeAllColumns: 'Автоматически задавать размер всем колонкам',\n    groupBy: 'Группировать по',\n    ungroupBy: 'Разгруппировать по',\n    resetColumns: 'Сбросить столбцы',\n    expandAll: 'Развернуть всё',\n    collapseAll: 'Свернуть всё',\n    toolPanel: 'Панель инструментов',\n    export: 'Экспорт',\n    csvExport: 'Экспорт в CSV',\n    excelExport: 'Экспорт в Excel (.xlsx)',\n    excelXmlExport: 'Экспорт в XML (.xml)',\n\n    // enterprise menu pinning\n    pinLeft: 'Закрепить слева <<',\n    pinRight: 'Закрепить справа >>',\n    noPin: 'Не закреплять <>',\n\n    // enterprise menu aggregation and status bar\n    sum: 'Сумма',\n    min: 'Минимум',\n    max: 'Максимум',\n    none: 'Пусто',\n    count: 'Количество',\n    average: 'Среднее значение',\n    filteredRows: 'Отфильтрованные',\n    selectedRows: 'Выделенные',\n    totalRows: 'Всего строк',\n    totalAndFilteredRows: 'Строк',\n\n    // standard menu\n    copy: 'Копировать',\n    copyWithHeaders: 'Копировать с заголовком',\n    ctrlC: 'Ctrl+C',\n    paste: 'Вставить',\n    ctrlV: 'Ctrl+V'\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/local.ru.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/numeric-cell-editor.js":
/*!****************************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/numeric-cell-editor.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NumericCellEditor)\n/* harmony export */ });\nclass NumericCellEditor {\n    // gets called once before the renderer is used\n    init(params) {\n        // create the cell\n        this.eInput = document.createElement('input');\n        this.eInput.className = 'simple-input-editor';\n\n        if (this.isCharNumeric(params.charPress)) {\n            this.eInput.value = params.charPress;\n        } else {\n            if (params.value !== undefined && params.value !== null) {\n                this.eInput.value = params.value;\n            }\n        }\n\n        this.eInput.addEventListener('keypress', (event) => {\n            if (!this.isKeyPressedNumeric(event)) {\n                this.eInput.focus();\n                if (event.preventDefault) event.preventDefault();\n            } else if (this.isKeyPressedNavigation(event)) {\n                event.stopPropagation();\n            }\n        });\n\n        // only start edit if key pressed is a number, not a letter\n        var charPressIsNotANumber =\n            params.charPress && '1234567890'.indexOf(params.charPress) < 0;\n        this.cancelBeforeStart = !!charPressIsNotANumber;\n    }\n\n    isKeyPressedNumeric(event) {\n        const charStr = event.key;\n        return this.isCharNumeric(charStr);\n    }\n\n    isKeyPressedNavigation(event) {\n        return event.key === 'ArrowLeft' || event.key === 'ArrowRight';\n    }\n\n    isCharNumeric(charStr) {\n        return charStr && !!/\\d|\\./.test(charStr);\n    }\n\n    // gets called once when grid ready to insert the element\n    getGui() {\n        return this.eInput;\n    }\n\n    // focus and select can be done after the gui is attached\n    afterGuiAttached() {\n        this.eInput.focus();\n    }\n\n    // returns the new value after editing\n    isCancelBeforeStart() {\n        return this.cancelBeforeStart;\n    }\n\n    // example - will reject the number if it contains the value 007\n    // - not very practical, but demonstrates the method.\n    isCancelAfterEnd() {\n        // var value = this.getValue();\n        // return value.indexOf('007') >= 0;\n    }\n\n    // returns the new value after editing\n    getValue() {\n        return this.eInput.value;\n    }\n\n    // any cleanup we need to be done here\n    destroy() {\n        // but this example is simple, no cleanup, we could  even leave this method out as it's optional\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/numeric-cell-editor.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/ag_grid_classes/string-date-editor.js":
/*!***************************************************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/ag_grid_classes/string-date-editor.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StringDateEditor)\n/* harmony export */ });\nclass StringDateEditor {\n    // gets called once before the renderer is used\n    init(params) {\n        // create the cell\n        this.eInput = document.createElement('input');\n        this.eInput.setAttribute('style', 'whidth:100%;border:0;outline:none;');\n\n        let postgresqlFormat = params.value;\n        // console.log(postgresqlFormat)\n        const mask = IMask(\n            this.eInput,\n            {\n                mask: Date,\n                min: new Date(1990, 0, 1),\n                lazy: false\n            }\n        );\n\n        if (postgresqlFormat !== null && postgresqlFormat !== undefined) {\n            let userFormatParts = postgresqlFormat.split('-');\n            mask.value = `${userFormatParts[2]}.${userFormatParts[1]}.${userFormatParts[0]}`;\n        }\n\n    }\n\n\n    // gets called once when grid ready to insert the element\n    getGui() {\n        return this.eInput;\n    }\n\n    // focus and select can be done after the gui is attached\n    afterGuiAttached() {\n        this.eInput.focus();\n    }\n\n    // returns the new value after editing\n    isCancelBeforeStart() {\n    }\n\n    isCancelAfterEnd() {\n        if (this.eInput.value === null || this.eInput.value === undefined || this.eInput.value === \"\" ||\n            this.eInput.value.includes('_')) {\n            return true;\n        }\n        return false;\n    }\n\n    // returns the new value after editing\n    getValue() {\n\n        let userFormatParts = this.eInput.value.split('.');\n        return `${userFormatParts[2]}-${userFormatParts[1]}-${userFormatParts[0]}`;\n    }\n\n    // any cleanup we need to be done here\n    destroy() {\n        // but this example is simple, no cleanup, we could  even leave this method out as it's optional\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/ag_grid_classes/string-date-editor.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/page_content/aggrid.js":
/*!***********************************************************!*\
  !*** ./resources/js/cps_warehouse/page_content/aggrid.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TableAgGrid)\n/* harmony export */ });\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cps-portal-dao.js */ \"./resources/js/cps_warehouse/cps-portal-dao.js\");\n/* harmony import */ var _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ag_grid_classes/excel-export.js */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/excel-export.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helper.js */ \"./resources/js/cps_warehouse/helper.js\");\n/* harmony import */ var _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ag_grid_classes/local.ru */ \"./resources/js/cps_warehouse/page_content/ag_grid_classes/local.ru.js\");\n/* harmony import */ var _lists__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lists */ \"./resources/js/cps_warehouse/lists.js\");\n\n\n\n\n\n\n//ag grid wrapper, first field from DAO has to have the name \"id\".\n// constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu, idToScroll = undefined,\n//     agFilterModel = undefined, cashedGridData = undefined)\nclass TableAgGrid {\n    cashedGridData;\n    actionMenu;\n    gridOptions;\n    getDataUrl;\n    delUrl;\n    idToScroll;\n    agFilterModel;\n    isReady = false;\n    targetId;\n    confirmDeleteBtn = document.querySelector('.modal__confirm-delete-entry-btn');\n    agName;\n\n    constructor(gridOptions, getDataUrl, delUrl, agName, actionMenu, idToScroll = undefined,\n                agFilterModel = undefined, cashedGridData = undefined, targetId = 'page-content') {\n        this.gridOptions = gridOptions;\n        this.getDataUrl = getDataUrl;\n        this.delUrl = delUrl;\n        this.agName = agName;\n        this.actionMenu = actionMenu;\n        this.idToScroll = idToScroll;\n        this.agFilterModel = agFilterModel;\n        this.cashedGridData = cashedGridData;\n        this.targetId = targetId;\n        this.renderAgGrid();\n    }\n\n    renderAgGrid() {\n        this.prepareHtml();\n        this.gridOptions.localeText = _ag_grid_classes_local_ru__WEBPACK_IMPORTED_MODULE_3__.AG_GRID_LOCALE_RU;\n        new agGrid.Grid(document.getElementById(this.targetId), this.gridOptions);\n        this.setGridData();\n        // this.setGridCloseObserver();\n        this.setDeleteButtonAction();\n        this.isReady = true;\n        this.actionMenu.hideALl();\n        this.actionMenu.setExportExcelAction();\n    }\n\n    setGridData() {\n        if (this.cashedGridData !== undefined) {\n            this.scrollAndFilter(this.cashedGridData);\n        } else {\n            (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.getDataUrl, 'GET').then((data) => {\n                if (data === null) {\n                    throw 'setGridData data is null';\n                }\n                this.scrollAndFilter(data);\n            });\n        }\n\n    }\n\n    setAndScrollToId(id) {\n        this.setGridData();\n        this.idToScroll = id;\n        this.scrollToid();\n    }\n\n    scrollAndFilter(data) {\n        this.gridOptions.api.setRowData(data);\n        if (this.idToScroll !== undefined) {\n            this.scrollToid(this.idToScroll);\n            this.idToScroll = undefined;\n        }\n        if (this.agFilterModel !== undefined) {\n            this.restoreFilterModel(this.agFilterModel);\n            this.agFilterModel = undefined;\n        }\n    }\n\n    scrollToid() {\n        let _this = this;\n        this.gridOptions.api.forEachNode(function (node) {\n            if (node.data.id === _this.idToScroll) {\n                node.setSelected(true);\n                _this.gridOptions.api.ensureIndexVisible(node.rowIndex, 'middle');\n            }\n        });\n\n    }\n\n    getSelectedRow() {\n        let selectedRows = this.gridOptions.api.getSelectedRows()\n        if (selectedRows.length > 0) {\n            return selectedRows[0];\n        }\n    }\n\n    setDeleteButtonAction() {\n        if (this.delUrl !== null) {\n            this.confirmDeleteBtn.onclick = () => {\n                let selectedRow = this.getSelectedRow();\n                let csrf = {};\n                csrf = (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.addCSRF)(csrf);\n                (0,_cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_0__.httpRequest)(this.delUrl, 'DELETE', csrf, selectedRow.id).then(() => {\n                    this.actionMenu.hideAllOneRowAction();\n                    this.setGridData();\n                    $('#modal__confirm-delete-entry').modal('hide');\n                });\n            };\n        }\n\n    }\n\n    setGridCloseObserver() {\n        let this_ = this;\n        const observer = new MutationObserver(function (mutations_list) {\n            console.log(mutations_list)\n            this_.actionMenu.hideALl();\n            observer.disconnect();\n            //if another one mutation observer has been started\n            // if (mutations_list.length > 1) {\n            //     observer.disconnect();\n            //     return;\n            // }\n\n            // console.log(mutations_list);\n\n            // let this__ =  this_;\n            // mutations_list.forEach(node => {\n            //     if (node.removedNodes.length > 0) {\n            //         // this__.actionMenu.hideALl();\n            //         // console.log('setGridCloseObserver');\n            //         observer.disconnect();\n            //     }\n            // })\n        });\n        observer.observe(document.getElementById(this.targetId), {subtree: false, childList: true});\n    }\n\n    prepareHtml() {\n        let pageContentHtml = document.getElementById(this.targetId);\n        pageContentHtml.innerHTML = \"\";\n        pageContentHtml.style.width = '100%'\n        pageContentHtml.classList.add('ag-theme-alpine');\n    }\n\n    getAgFilterModel() {\n        return this.gridOptions.api.getFilterModel();\n    }\n\n    restoreFilterModel(savedFilterModel) {\n        this.gridOptions.api.setFilterModel(savedFilterModel);\n    }\n\n    exportDisplyedDataToExcel() {\n        let agHeaders = [];\n        let agFields = [];\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agHeaders.push(element.colDef.headerName)));\n        this.gridOptions.columnApi.getAllDisplayedColumns().forEach(element => (agFields.push(element.colDef.field)));\n        let agData = [];\n        this.gridOptions.api.forEachNode((rowNode, index) => {\n            agData[index] = rowNode.data;\n            let agDataTmp = Object.keys(agData[index])\n                .filter(key => agFields.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = agData[index][key];\n                    return obj;\n                }, {});\n            agData[index] = agDataTmp;\n        });\n\n        let excelData = [];\n        let tmpArray = [];\n        for (const elementAgData of agData) {\n            tmpArray = [];\n            for (const elementAgFields of agFields) {\n                for (const [key, value] of Object.entries(elementAgData)) {\n\n                    if (elementAgFields === key) {\n                        tmpArray.push(value)\n                    }\n                }\n            }\n            excelData.push(tmpArray);\n        }\n        //format text \"null, false, true values\"\n        for (let i = 0; i < excelData.length; i++) {\n            for (let j = 0; j < excelData[i].length; j++) {\n                if (excelData[i][j] === null) {\n                    excelData[i][j] = \"\";\n                }\n                if (excelData[i][j] === false) {\n                    excelData[i][j] = \"нет\";\n                }\n                if (excelData[i][j] === true) {\n                    excelData[i][j] = \"да\";\n                }\n            }\n        }\n\n        excelData.unshift(agHeaders);\n        let myTestXML = new _ag_grid_classes_excel_export_js__WEBPACK_IMPORTED_MODULE_1__.myExcelXML(excelData, this.agName);\n        myTestXML.downLoad();\n    }\n}\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/page_content/aggrid.js?");

/***/ }),

/***/ "./resources/js/cps_warehouse/side-bar.js":
/*!************************************************!*\
  !*** ./resources/js/cps_warehouse/side-bar.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SideBar)\n/* harmony export */ });\n/* harmony import */ var _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page_content/aggrid.js */ \"./resources/js/cps_warehouse/page_content/aggrid.js\");\n/* harmony import */ var _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cps-portal-dao.js */ \"./resources/js/cps_warehouse/cps-portal-dao.js\");\n/* harmony import */ var _helper_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./helper.js */ \"./resources/js/cps_warehouse/helper.js\");\n/* harmony import */ var _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./page_content/ag-grid-parameters.js */ \"./resources/js/cps_warehouse/page_content/ag-grid-parameters.js\");\n\n\n\n\n\n\nclass SideBar {\n    tableAgGrid;\n    actionMenu;\n    modalForm;\n    cashedAgGridBuildings = undefined;\n    cashedAgGridEquipment = undefined;\n    pageContent;\n\n    setButtonsActions() {\n        document.getElementById('sidebarCollapse').onclick = () => {\n            document.getElementById('sidebar').classList.toggle(\"active\");\n        };\n\n        document.querySelector('.sidebar__warehouse-reminders').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.warehouseRemainsParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWarehouseRemainsALl, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.warehouseRemainsParameters.agName, this.actionMenu);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            this.actionMenu.setImportRemindsAction();\n            this.actionMenu.showImportRemindsButton();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"Текущие остатки по спецодежде (данные из бухгалтерии)\");\n        };\n\n        document.querySelector('.sidebar__warehouse-workers').onclick = () => {\n            this.clearPageContent();\n            this.tableAgGrid = new _page_content_aggrid_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](_page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsWarehouseParameters.gridOptions,\n                _cps_portal_dao_js__WEBPACK_IMPORTED_MODULE_1__.config.api.getWorkersALl, null,\n                _page_content_ag_grid_parameters_js__WEBPACK_IMPORTED_MODULE_3__.agGridParameters.cpsWarehouseParameters.agName, this.actionMenu);\n            this.linksTableAgGridWithActionMenuAndModalForm();\n            (0,_helper_js__WEBPACK_IMPORTED_MODULE_2__.changePageTitle)(\"СИЗ работников\");\n        };\n\n    }\n\n    clearPageContent() {\n        while (this.pageContent.firstChild) {\n            this.pageContent.removeChild(this.pageContent.firstChild);\n        }\n        this.pageContent.className = '';\n    }\n\n    linksTableAgGridWithActionMenuAndModalForm() {\n        this.actionMenu.tableAgGrid = this.tableAgGrid;\n        this.modalForm.tableAgGrid = this.tableAgGrid;\n    }\n\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack://cpsportal/./resources/js/cps_warehouse/side-bar.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/cps_warehouse/app.js");
/******/ 	
/******/ })()
;